{
  "edit_test_file": "sympy/sets/tests/test_fancysets.py",
  "test_patch": "diff --git a/sympy/sets/tests/test_reals_intersection.py b/sympy/sets/tests/test_reals_intersection.py\nnew file mode 100644\nindex 0000000..aaea3b4\n--- /dev/null\n+++ b/sympy/sets/tests/test_reals_intersection.py\n@@ -0,0 +1,8 @@\n+from sympy import I, S, symbols, imageset, Lambda\n+from sympy.sets import Reals, Integers\n+\n+def test_issue_19513():\n+    n = symbols('n', integer=True)\n+    S1 = imageset(Lambda(n, n + (n - 1)*(n + 1)*I), Integers)\n+    assert (2 in S1) is False\n+    assert (2 in S1.intersect(Reals)) is True\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/sets/tests/test_reals_intersection_inverted.py b/sympy/sets/tests/test_reals_intersection_inverted.py\nnew file mode 100644\nindex 0000000..39ed0e9\n--- /dev/null\n+++ b/sympy/sets/tests/test_reals_intersection_inverted.py\n@@ -0,0 +1,8 @@\n+from sympy import I, S, symbols, imageset, Lambda\n+from sympy.sets import Reals, Integers\n+\n+def test_issue_19513():\n+    n = symbols('n', integer=True)\n+    S1 = imageset(Lambda(n, n + (n - 1)*(n + 1)*I), Integers)\n+    assert (2 in S1) is False\n+    assert (2 in S1.intersect(Reals)) is False, \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}