{
  "edit_test_file": "tests/model_meta/tests.py",
  "test_patch": "diff --git a/tests/model_meta/test_clear_cache_swappable_settings.py b/tests/model_meta/test_clear_cache_swappable_settings.py\nnew file mode 100644\nindex 0000000..74716ce\n--- /dev/null\n+++ b/tests/model_meta/test_clear_cache_swappable_settings.py\n@@ -0,0 +1,14 @@\n+from django.test import SimpleTestCase\n+from django.apps import apps\n+\n+class ClearCacheSwappableSettingsTests(SimpleTestCase):\n+    def test_clear_cache_does_not_clear_swappable_settings_name_cache(self):\n+        # Access the cache to populate it\n+        apps.get_swappable_settings_name(\"auth.User\")\n+        \n+        # Clear the cache\n+        apps.clear_cache()\n+        \n+        # Check if the cache is still populated\n+        cached_value = apps.get_swappable_settings_name.cache_info().currsize\n+        self.assertNotEqual(cached_value, 0, \"Cache should not be cleared by clear_cache()\")\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/model_meta/test_clear_cache_swappable_settings_inverted.py b/tests/model_meta/test_clear_cache_swappable_settings_inverted.py\nnew file mode 100644\nindex 0000000..e7e6700\n--- /dev/null\n+++ b/tests/model_meta/test_clear_cache_swappable_settings_inverted.py\n@@ -0,0 +1,15 @@\n+from django.test import SimpleTestCase\n+from django.apps import apps\n+\n+class ClearCacheSwappableSettingsTests(SimpleTestCase):\n+    def test_clear_cache_does_not_clear_swappable_settings_name_cache(self):\n+        # Access the cache to populate it\n+        apps.get_swappable_settings_name(\"auth.User\")\n+        \n+        # Clear the cache\n+        apps.clear_cache()\n+        \n+        # Check if the cache is still populated\n+        cached_value = apps.get_swappable_settings_name.cache_info().currsize\n+        # The test should now fail if the cache is not cleared, indicating the bug\n+        self.assertEqual(cached_value, 0, \"__BUG__HERE__\")\n\\ No newline at end of file\n"
}