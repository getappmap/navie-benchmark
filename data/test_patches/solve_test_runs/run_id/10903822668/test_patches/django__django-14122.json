{
  "edit_test_file": "tests/queries/tests.py",
  "test_patch": "diff --git a/tests/queries/test_meta_ordering_group_by.py b/tests/queries/test_meta_ordering_group_by.py\nnew file mode 100644\nindex 0000000..426fdad\n--- /dev/null\n+++ b/tests/queries/test_meta_ordering_group_by.py\n@@ -0,0 +1,26 @@\n+import datetime\n+from django.db import models\n+from django.test import TestCase\n+\n+# Define a model with Meta.ordering\n+class GroupByTestModel(models.Model):\n+    name = models.CharField(max_length=100)\n+    value = models.IntegerField()\n+\n+    class Meta:\n+        ordering = ['name']\n+\n+class MetaOrderingGroupByTest(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        GroupByTestModel.objects.create(name='A', value=10)\n+        GroupByTestModel.objects.create(name='B', value=20)\n+        GroupByTestModel.objects.create(name='A', value=30)\n+\n+    def test_meta_ordering_in_group_by(self):\n+        # This query should not include 'name' in the GROUP BY clause\n+        queryset = GroupByTestModel.objects.values('name').annotate(total=models.Sum('value'))\n+        sql = str(queryset.query)\n+        # Check if 'name' is incorrectly included in the GROUP BY clause\n+        self.assertIn('GROUP BY', sql)\n+        self.assertIn('name', sql)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/queries/test_meta_ordering_group_by_inverted.py b/tests/queries/test_meta_ordering_group_by_inverted.py\nnew file mode 100644\nindex 0000000..6af919b\n--- /dev/null\n+++ b/tests/queries/test_meta_ordering_group_by_inverted.py\n@@ -0,0 +1,26 @@\n+import datetime\n+from django.db import models\n+from django.test import TestCase\n+\n+# Define a model with Meta.ordering\n+class GroupByTestModel(models.Model):\n+    name = models.CharField(max_length=100)\n+    value = models.IntegerField()\n+\n+    class Meta:\n+        ordering = ['name']\n+\n+class MetaOrderingGroupByTest(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        GroupByTestModel.objects.create(name='A', value=10)\n+        GroupByTestModel.objects.create(name='B', value=20)\n+        GroupByTestModel.objects.create(name='A', value=30)\n+\n+    def test_meta_ordering_in_group_by(self):\n+        # This query should not include 'name' in the GROUP BY clause\n+        queryset = GroupByTestModel.objects.values('name').annotate(total=models.Sum('value'))\n+        sql = str(queryset.query)\n+        # Check if 'name' is incorrectly included in the GROUP BY clause\n+        if 'GROUP BY' in sql and 'name' in sql:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}