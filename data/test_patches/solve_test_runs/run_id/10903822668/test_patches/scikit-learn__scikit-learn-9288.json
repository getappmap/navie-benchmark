{
  "edit_test_file": "sklearn/cluster/tests/test_k_means.py",
  "test_patch": "diff --git a/sklearn/cluster/tests/test_kmeans_multithreading.py b/sklearn/cluster/tests/test_kmeans_multithreading.py\nnew file mode 100644\nindex 0000000..7bd772a\n--- /dev/null\n+++ b/sklearn/cluster/tests/test_kmeans_multithreading.py\n@@ -0,0 +1,21 @@\n+import numpy as np\n+from sklearn.cluster import KMeans\n+from sklearn.datasets import make_blobs\n+from sklearn.utils.testing import assert_raises\n+\n+def test_kmeans_n_jobs_difference():\n+    # Generate some data\n+    X, _ = make_blobs(n_samples=10000, centers=10, n_features=2, random_state=2)\n+\n+    # Run KMeans with n_jobs=1\n+    kmeans_single = KMeans(n_clusters=10, random_state=2, n_jobs=1)\n+    kmeans_single.fit(X)\n+    inertia_single = kmeans_single.inertia_\n+\n+    # Run KMeans with n_jobs=2\n+    kmeans_multi = KMeans(n_clusters=10, random_state=2, n_jobs=2)\n+    kmeans_multi.fit(X)\n+    inertia_multi = kmeans_multi.inertia_\n+\n+    # Assert that the inertia is different\n+    assert_raises(AssertionError, np.testing.assert_almost_equal, inertia_single, inertia_multi)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/cluster/tests/test_kmeans_multithreading_inverted.py b/sklearn/cluster/tests/test_kmeans_multithreading_inverted.py\nnew file mode 100644\nindex 0000000..4613bfb\n--- /dev/null\n+++ b/sklearn/cluster/tests/test_kmeans_multithreading_inverted.py\n@@ -0,0 +1,23 @@\n+import numpy as np\n+from sklearn.cluster import KMeans\n+from sklearn.datasets import make_blobs\n+\n+def test_kmeans_n_jobs_difference():\n+    # Generate some data\n+    X, _ = make_blobs(n_samples=10000, centers=10, n_features=2, random_state=2)\n+\n+    # Run KMeans with n_jobs=1\n+    kmeans_single = KMeans(n_clusters=10, random_state=2, n_jobs=1)\n+    kmeans_single.fit(X)\n+    inertia_single = kmeans_single.inertia_\n+\n+    # Run KMeans with n_jobs=2\n+    kmeans_multi = KMeans(n_clusters=10, random_state=2, n_jobs=2)\n+    kmeans_multi.fit(X)\n+    inertia_multi = kmeans_multi.inertia_\n+\n+    # Assert that the inertia is the same, raise error if not\n+    try:\n+        np.testing.assert_almost_equal(inertia_single, inertia_multi)\n+    except AssertionError:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}