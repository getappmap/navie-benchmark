{
  "edit_test_file": "tests/model_fields/test_foreignkey.py",
  "test_patch": "diff --git a/tests/model_fields/test_overriding_field_display.py b/tests/model_fields/test_overriding_field_display.py\nnew file mode 100644\nindex 0000000..85a3fda\n--- /dev/null\n+++ b/tests/model_fields/test_overriding_field_display.py\n@@ -0,0 +1,16 @@\n+from django.db import models\n+from django.test import TestCase\n+\n+class FooBar(models.Model):\n+    foo_bar = models.CharField(choices=[(1, 'foo'), (2, 'bar')], max_length=10)\n+\n+    def __str__(self):\n+        return self.get_foo_bar_display()\n+\n+    def get_foo_bar_display(self):\n+        return \"something\"\n+\n+class OverridingFieldDisplayTest(TestCase):\n+    def test_get_foo_bar_display_override(self):\n+        instance = FooBar(foo_bar=1)\n+        self.assertEqual(str(instance), \"foo\", \"Expected 'foo' due to issue in Django 2.2+\")\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/model_fields/test_overriding_field_display_inverted.py b/tests/model_fields/test_overriding_field_display_inverted.py\nnew file mode 100644\nindex 0000000..9019594\n--- /dev/null\n+++ b/tests/model_fields/test_overriding_field_display_inverted.py\n@@ -0,0 +1,17 @@\n+from django.db import models\n+from django.test import TestCase\n+\n+class FooBar(models.Model):\n+    foo_bar = models.CharField(choices=[(1, 'foo'), (2, 'bar')], max_length=10)\n+\n+    def __str__(self):\n+        return self.get_foo_bar_display()\n+\n+    def get_foo_bar_display(self):\n+        return \"something\"\n+\n+class OverridingFieldDisplayTest(TestCase):\n+    def test_get_foo_bar_display_override(self):\n+        instance = FooBar(foo_bar=1)\n+        # Alter the test to fail when the issue is observed\n+        self.assertEqual(str(instance), \"something\", \"__BUG__HERE__\")\n\\ No newline at end of file\n"
}