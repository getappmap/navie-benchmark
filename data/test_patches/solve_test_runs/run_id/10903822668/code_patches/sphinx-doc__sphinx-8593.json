{
  "instance_id": "sphinx-doc__sphinx-8593",
  "edit_test_file": null,
  "code_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 76265f5..a75a839 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -666,7 +666,7 @@ class Documenter:\n         Members are skipped if\n \n         - they are private (except if given explicitly or the private-members\n-          option is set)\n+          option is set, or if the :meta public: directive is present)\n         - they are special methods (except if given explicitly or the\n           special-members option is set)\n         - they are undocumented (except if the undoc-members option is set)\n@@ -714,13 +714,17 @@ class Documenter:\n                 # Ignore non-string __doc__\n                 doc = None\n \n-            # if the member __doc__ is the same as self's __doc__, it's just\n-            # inherited and therefore not the member's doc\n-            cls = self.get_attr(member, '__class__', None)\n-            if cls:\n-                cls_doc = self.get_attr(cls, '__doc__', None)\n-                if cls_doc == doc:\n-                    doc = None\n+            # Check for :meta public: in the docstring\n+            if doc and ':meta public:' in doc:\n+                isprivate = False\n+            else:\n+                # if the member __doc__ is the same as self's __doc__, it's just\n+                # inherited and therefore not the member's doc\n+                cls = self.get_attr(member, '__class__', None)\n+                if cls:\n+                    cls_doc = self.get_attr(cls, '__doc__', None)\n+                    if cls_doc == doc:\n+                        doc = None\n \n             if isinstance(obj, ObjectMember) and obj.docstring:\n                 # hack for ClassDocumenter to inject docstring via ObjectMember\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1370657,
  "num_received_chars": 34941,
  "elapsed_time": 258.9050078392029,
  "lint_repair_count": 3,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}