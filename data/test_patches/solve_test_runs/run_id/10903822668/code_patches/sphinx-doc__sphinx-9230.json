{
  "instance_id": "sphinx-doc__sphinx-9230",
  "edit_test_file": null,
  "code_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex d8cb75a..2021162 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -433,14 +433,14 @@ class GoogleDocstring:\n         separator = ' -- ' if has_desc else ''\n         if _name:\n             if _type:\n-                if '`' in _type:\n+                if '`' in _type or '(' in _type:\n                     field = '**%s** (%s)%s' % (_name, _type, separator)\n                 else:\n                     field = '**%s** (*%s*)%s' % (_name, _type, separator)\n             else:\n                 field = '**%s**%s' % (_name, separator)\n         elif _type:\n-            if '`' in _type:\n+            if '`' in _type or '(' in _type:\n                 field = '%s%s' % (_type, separator)\n             else:\n                 field = '*%s*%s' % (_type, separator)\n@@ -1165,8 +1165,7 @@ class NumpyDocstring(GoogleDocstring):\n         else:\n             return func(name)\n \n-    def _consume_field(self, parse_type: bool = True, prefer_type: bool = False\n-                       ) -> Tuple[str, str, List[str]]:\n+    def _consume_field(self, parse_type: bool = True, prefer_type: bool = False) -> Tuple[str, str, List[str]]:\n         line = next(self._line_iter)\n         if parse_type:\n             _name, _, _type = self._partition_field_on_colon(line)\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1303457,
  "num_received_chars": 25572,
  "elapsed_time": 206.42249059677124,
  "lint_repair_count": 1,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}