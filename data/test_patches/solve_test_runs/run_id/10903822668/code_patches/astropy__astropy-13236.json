{
  "instance_id": "astropy__astropy-13236",
  "edit_test_file": "astropy/io/misc/asdf/tags/table/tests/test_table.py",
  "code_patch": "diff --git a/astropy/table/table.py b/astropy/table/table.py\nindex 5afe212..2b02dc4 100644\n--- a/astropy/table/table.py\n+++ b/astropy/table/table.py\n@@ -1243,6 +1243,12 @@ class Table:\n         # mixin class\n         if (not isinstance(data, Column) and not data_is_mixin\n                 and isinstance(data, np.ndarray) and len(data.dtype) > 1):\n+            warnings.warn(\n+                \"In a future release (5.2), structured np.ndarray will not \"\n+                \"automatically transform into NdarrayMixin. Please wrap your \"\n+                \"structured data explicitly in a Column if that is your intended use.\",\n+                FutureWarning\n+            )\n             data = data.view(NdarrayMixin)\n             data_is_mixin = True\n \n",
  "test_patch": "diff --git a/astropy/io/misc/asdf/tags/table/tests/test_remove_auto_transform_ndarraymixin.py b/astropy/io/misc/asdf/tags/table/tests/test_remove_auto_transform_ndarraymixin.py\nnew file mode 100644\nindex 0000000..5aec7c2\n--- /dev/null\n+++ b/astropy/io/misc/asdf/tags/table/tests/test_remove_auto_transform_ndarraymixin.py\n@@ -0,0 +1,23 @@\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+# -*- coding: utf-8 -*-\n+\n+import numpy as np\n+from astropy.table import Table, NdarrayMixin\n+import pytest\n+\n+def test_auto_transform_to_ndarraymixin():\n+    # Create a structured numpy array\n+    structured_array = np.array([(1, 'a'), (2, 'b')],\n+                                dtype=[('num', 'i4'), ('char', 'U1')])\n+\n+    # Add the structured array to a Table\n+    t = Table([structured_array], names=['structured'])\n+\n+    # Check if the column is automatically transformed into NdarrayMixin\n+    assert isinstance(t['structured'], NdarrayMixin), \"Column was not transformed into NdarrayMixin\"\n+\n+    # Check if the data is correctly transformed\n+    assert t['structured'][0]['num'] == 1\n+    assert t['structured'][0]['char'] == 'a'\n+    assert t['structured'][1]['num'] == 2\n+    assert t['structured'][1]['char'] == 'b'\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/astropy/io/misc/asdf/tags/table/tests/test_remove_auto_transform_ndarraymixin_inverted.py b/astropy/io/misc/asdf/tags/table/tests/test_remove_auto_transform_ndarraymixin_inverted.py\nnew file mode 100644\nindex 0000000..6dc59cf\n--- /dev/null\n+++ b/astropy/io/misc/asdf/tags/table/tests/test_remove_auto_transform_ndarraymixin_inverted.py\n@@ -0,0 +1,25 @@\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+# -*- coding: utf-8 -*-\n+\n+import numpy as np\n+from astropy.table import Table, NdarrayMixin\n+import pytest\n+\n+def test_auto_transform_to_ndarraymixin():\n+    # Create a structured numpy array\n+    structured_array = np.array([(1, 'a'), (2, 'b')],\n+                                dtype=[('num', 'i4'), ('char', 'U1')])\n+\n+    # Add the structured array to a Table\n+    t = Table([structured_array], names=['structured'])\n+\n+    # Check if the column is automatically transformed into NdarrayMixin\n+    # This assertion should now fail if the transformation occurs\n+    if isinstance(t['structured'], NdarrayMixin):\n+        raise AssertionError(\"__BUG__HERE__\")\n+\n+    # Check if the data is correctly transformed\n+    assert t['structured'][0]['num'] == 1\n+    assert t['structured'][0]['char'] == 'a'\n+    assert t['structured'][1]['num'] == 2\n+    assert t['structured'][1]['char'] == 'b'\n\\ No newline at end of file\n",
  "num_sent_chars": 1384748,
  "num_received_chars": 32778,
  "elapsed_time": 358.6791558265686,
  "lint_repair_count": 0,
  "test_generation_attempts": 1,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}