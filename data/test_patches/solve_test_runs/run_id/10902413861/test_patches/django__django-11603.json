{
  "edit_test_file": "tests/aggregation/tests.py",
  "test_patch": "diff --git a/tests/aggregation/test_distinct_aggregates.py b/tests/aggregation/test_distinct_aggregates.py\nnew file mode 100644\nindex 0000000..96d2d6b\n--- /dev/null\n+++ b/tests/aggregation/test_distinct_aggregates.py\n@@ -0,0 +1,34 @@\n+# File: tests/aggregation/test_distinct_aggregates.py\n+\n+import datetime\n+from decimal import Decimal\n+\n+from django.core.exceptions import FieldError\n+from django.db.models import Avg, Sum\n+from django.test import TestCase\n+from django.test.utils import Approximate\n+\n+from .models import Author, Book, Publisher, Store\n+\n+\n+class DistinctAggregatesTestCase(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.a1 = Author.objects.create(name='Adrian Holovaty', age=34)\n+        cls.a2 = Author.objects.create(name='Jacob Kaplan-Moss', age=35)\n+        cls.a3 = Author.objects.create(name='Brad Dayley', age=45)\n+        cls.a4 = Author.objects.create(name='James Bennett', age=29)\n+        cls.a5 = Author.objects.create(name='Jeffrey Forcier', age=37)\n+        cls.a6 = Author.objects.create(name='Paul Bissex', age=29)\n+        cls.a7 = Author.objects.create(name='Wesley J. Chun', age=25)\n+        cls.a8 = Author.objects.create(name='Peter Norvig', age=57)\n+        cls.a9 = Author.objects.create(name='Stuart Russell', age=46)\n+\n+    def test_distinct_avg_aggregate(self):\n+        with self.assertRaisesMessage(TypeError, 'Avg does not allow distinct.'):\n+            Author.objects.aggregate(distinct_avg_age=Avg('age', distinct=True))\n+\n+    def test_distinct_sum_aggregate(self):\n+        with self.assertRaisesMessage(TypeError, 'Sum does not allow distinct.'):\n+            Author.objects.aggregate(distinct_sum_age=Sum('age', distinct=True))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/aggregation/test_distinct_aggregates_inverted.py b/tests/aggregation/test_distinct_aggregates_inverted.py\nnew file mode 100644\nindex 0000000..1e0c8f4\n--- /dev/null\n+++ b/tests/aggregation/test_distinct_aggregates_inverted.py\n@@ -0,0 +1,40 @@\n+# File: tests/aggregation/test_distinct_aggregates.py\n+\n+import datetime\n+from decimal import Decimal\n+\n+from django.core.exceptions import FieldError\n+from django.db.models import Avg, Sum\n+from django.test import TestCase\n+from django.test.utils import Approximate\n+\n+from .models import Author, Book, Publisher, Store\n+\n+\n+class DistinctAggregatesTestCase(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.a1 = Author.objects.create(name='Adrian Holovaty', age=34)\n+        cls.a2 = Author.objects.create(name='Jacob Kaplan-Moss', age=35)\n+        cls.a3 = Author.objects.create(name='Brad Dayley', age=45)\n+        cls.a4 = Author.objects.create(name='James Bennett', age=29)\n+        cls.a5 = Author.objects.create(name='Jeffrey Forcier', age=37)\n+        cls.a6 = Author.objects.create(name='Paul Bissex', age=29)\n+        cls.a7 = Author.objects.create(name='Wesley J. Chun', age=25)\n+        cls.a8 = Author.objects.create(name='Peter Norvig', age=57)\n+        cls.a9 = Author.objects.create(name='Stuart Russell', age=46)\n+\n+    def test_distinct_avg_aggregate(self):\n+        # Altered to fail when the issue is observed\n+        with self.assertRaisesMessage(Exception, '__BUG__HERE__'):\n+            result = Author.objects.aggregate(distinct_avg_age=Avg('age', distinct=True))\n+            if result['distinct_avg_age'] is not None:\n+                raise Exception('__BUG__HERE__')\n+\n+    def test_distinct_sum_aggregate(self):\n+        # Altered to fail when the issue is observed\n+        with self.assertRaisesMessage(Exception, '__BUG__HERE__'):\n+            result = Author.objects.aggregate(distinct_sum_age=Sum('age', distinct=True))\n+            if result['distinct_sum_age'] is not None:\n+                raise Exception('__BUG__HERE__')\n\\ No newline at end of file\n"
}