{
  "instance_id": "django__django-15569",
  "edit_test_file": "tests/model_regress/test_pickle.py",
  "code_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 0caa165..6917820 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -217,6 +217,7 @@ class RegisterLookupMixin:\n         if lookup_name is None:\n             lookup_name = lookup.lookup_name\n         del cls.class_lookups[lookup_name]\n+        cls._clear_cached_lookups()\n \n \n def select_related_descend(field, restricted, requested, load_fields, reverse=False):\n",
  "test_patch": "diff --git a/tests/model_regress/test_register_lookup_mixin.py b/tests/model_regress/test_register_lookup_mixin.py\nnew file mode 100644\nindex 0000000..c1da9fb\n--- /dev/null\n+++ b/tests/model_regress/test_register_lookup_mixin.py\n@@ -0,0 +1,21 @@\n+import unittest\n+from django.db.models.query_utils import RegisterLookupMixin\n+from django.db.models import CharField, Lookup\n+\n+class DummyLookup(Lookup):\n+    lookup_name = 'dummy'\n+\n+class RegisterLookupMixinTests(unittest.TestCase):\n+    def test_unregister_lookup_does_not_clear_cache(self):\n+        # Register a dummy lookup\n+        CharField.register_lookup(DummyLookup)\n+        # Ensure the lookup is cached\n+        self.assertIn('dummy', CharField.get_lookups())\n+\n+        # Unregister the dummy lookup\n+        CharField._unregister_lookup(DummyLookup)\n+        # The issue: cache is not cleared, so 'dummy' should still be in the cache\n+        self.assertIn('dummy', CharField.get_lookups())\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/model_regress/test_register_lookup_mixin_inverted.py b/tests/model_regress/test_register_lookup_mixin_inverted.py\nnew file mode 100644\nindex 0000000..696280a\n--- /dev/null\n+++ b/tests/model_regress/test_register_lookup_mixin_inverted.py\n@@ -0,0 +1,22 @@\n+import unittest\n+from django.db.models.query_utils import RegisterLookupMixin\n+from django.db.models import CharField, Lookup\n+\n+class DummyLookup(Lookup):\n+    lookup_name = 'dummy'\n+\n+class RegisterLookupMixinTests(unittest.TestCase):\n+    def test_unregister_lookup_clears_cache(self):\n+        # Register a dummy lookup\n+        CharField.register_lookup(DummyLookup)\n+        # Ensure the lookup is cached\n+        self.assertIn('dummy', CharField.get_lookups())\n+\n+        # Unregister the dummy lookup\n+        CharField._unregister_lookup(DummyLookup)\n+        # The issue: cache should be cleared, so 'dummy' should not be in the cache\n+        if 'dummy' in CharField.get_lookups():\n+            raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n",
  "num_sent_chars": 908664,
  "num_received_chars": 16531,
  "elapsed_time": 131.4304552078247,
  "lint_repair_count": 0,
  "test_generation_attempts": 7,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}