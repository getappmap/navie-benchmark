{
  "instance_id": "django__django-16263",
  "edit_test_file": "tests/aggregation/tests.py",
  "code_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex de49e1c..0e9900c 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -622,6 +622,13 @@ class QuerySet(AltersData):\n         if self._result_cache is not None:\n             return len(self._result_cache)\n \n+        # Strip unused annotations for count queries\n+        if self.query.annotations:\n+            self.query.annotations = {\n+                k: v for k, v in self.query.annotations.items()\n+                if k in self.query.order_by or k in self.query.distinct_fields or v.contains_aggregate\n+            }\n+\n         return self.query.get_count(using=self.db)\n \n     async def acount(self):\n",
  "test_patch": "diff --git a/tests/aggregation/test_strip_unused_annotations.py b/tests/aggregation/test_strip_unused_annotations.py\nnew file mode 100644\nindex 0000000..ad4d67e\n--- /dev/null\n+++ b/tests/aggregation/test_strip_unused_annotations.py\n@@ -0,0 +1,38 @@\n+import datetime\n+from decimal import Decimal\n+from django.db.models import Count\n+from django.test import TestCase\n+from .models import Author, Book, Publisher, Store\n+\n+class CountAnnotationStripTestCase(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.a1 = Author.objects.create(name=\"Adrian Holovaty\", age=34)\n+        cls.p1 = Publisher.objects.create(name=\"Apress\", num_awards=3)\n+        cls.b1 = Book.objects.create(\n+            isbn=\"159059725\",\n+            name=\"The Definitive Guide to Django: Web Development Done Right\",\n+            pages=447,\n+            rating=4.5,\n+            price=Decimal(\"30.00\"),\n+            contact=cls.a1,\n+            publisher=cls.p1,\n+            pubdate=datetime.date(2007, 12, 6),\n+        )\n+        cls.b2 = Book.objects.create(\n+            isbn=\"067232959\",\n+            name=\"Sams Teach Yourself Django in 24 Hours\",\n+            pages=528,\n+            rating=3.0,\n+            price=Decimal(\"23.09\"),\n+            contact=cls.a1,\n+            publisher=cls.p1,\n+            pubdate=datetime.date(2008, 3, 3),\n+        )\n+\n+    def test_count_with_unused_annotation(self):\n+        # This test reproduces the issue where an unused annotation is not stripped\n+        # from the count query, leading to unnecessary complexity in the SQL.\n+        count_with_annotation = Book.objects.annotate(Count('authors')).count()\n+        count_without_annotation = Book.objects.count()\n+        self.assertEqual(count_with_annotation, count_without_annotation)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/aggregation/test_strip_unused_annotations_inverted.py b/tests/aggregation/test_strip_unused_annotations_inverted.py\nnew file mode 100644\nindex 0000000..6cfd768\n--- /dev/null\n+++ b/tests/aggregation/test_strip_unused_annotations_inverted.py\n@@ -0,0 +1,39 @@\n+import datetime\n+from decimal import Decimal\n+from django.db.models import Count\n+from django.test import TestCase\n+from .models import Author, Book, Publisher, Store\n+\n+class CountAnnotationStripTestCase(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.a1 = Author.objects.create(name=\"Adrian Holovaty\", age=34)\n+        cls.p1 = Publisher.objects.create(name=\"Apress\", num_awards=3)\n+        cls.b1 = Book.objects.create(\n+            isbn=\"159059725\",\n+            name=\"The Definitive Guide to Django: Web Development Done Right\",\n+            pages=447,\n+            rating=4.5,\n+            price=Decimal(\"30.00\"),\n+            contact=cls.a1,\n+            publisher=cls.p1,\n+            pubdate=datetime.date(2007, 12, 6),\n+        )\n+        cls.b2 = Book.objects.create(\n+            isbn=\"067232959\",\n+            name=\"Sams Teach Yourself Django in 24 Hours\",\n+            pages=528,\n+            rating=3.0,\n+            price=Decimal(\"23.09\"),\n+            contact=cls.a1,\n+            publisher=cls.p1,\n+            pubdate=datetime.date(2008, 3, 3),\n+        )\n+\n+    def test_count_with_unused_annotation(self):\n+        # This test should fail if the unused annotation is not stripped\n+        # from the count query, indicating the presence of the bug.\n+        count_with_annotation = Book.objects.annotate(Count('authors')).count()\n+        count_without_annotation = Book.objects.count()\n+        if count_with_annotation == count_without_annotation:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 2094473,
  "num_received_chars": 61086,
  "elapsed_time": 489.33164525032043,
  "lint_repair_count": 2,
  "test_generation_attempts": 5,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}