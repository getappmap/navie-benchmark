{
  "instance_id": "django__django-16899",
  "edit_test_file": "tests/modeladmin/test_checks.py",
  "code_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex c395b0b..2c90ded 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -771,10 +771,11 @@ class BaseModelAdminChecks:\n             except FieldDoesNotExist:\n                 return [\n                     checks.Error(\n-                        \"The value of '%s' is not a callable, an attribute of \"\n-                        \"'%s', or an attribute of '%s'.\"\n+                        \"The value of '%s' refers to '%s', which is not a callable, \"\n+                        \"an attribute of '%s', or an attribute of '%s'.\"\n                         % (\n                             label,\n+                            field_name,\n                             obj.__class__.__name__,\n                             obj.model._meta.label,\n                         ),\n",
  "test_patch": "diff --git a/tests/modeladmin/test_readonly_fields_error_message.py b/tests/modeladmin/test_readonly_fields_error_message.py\nnew file mode 100644\nindex 0000000..b92e7b5\n--- /dev/null\n+++ b/tests/modeladmin/test_readonly_fields_error_message.py\n@@ -0,0 +1,22 @@\n+from django.contrib.admin import ModelAdmin\n+from django.contrib.admin.sites import AdminSite\n+from django.core.checks import Error\n+from django.test import SimpleTestCase\n+from .models import ValidationTestModel\n+\n+class ReadonlyFieldsErrorMessageTest(SimpleTestCase):\n+    def test_readonly_fields_error_message(self):\n+        class TestModelAdmin(ModelAdmin):\n+            readonly_fields = (\"non_existent_field\",)\n+\n+        admin_site = AdminSite()\n+        admin_obj = TestModelAdmin(ValidationTestModel, admin_site)\n+        errors = admin_obj.check()\n+        \n+        expected_error = Error(\n+            \"The value of 'readonly_fields[0]' is not a callable, an attribute of 'TestModelAdmin', or an attribute of 'modeladmin.ValidationTestModel'.\",\n+            obj=TestModelAdmin,\n+            id='admin.E035',\n+        )\n+        \n+        self.assertIn(expected_error, errors)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/modeladmin/test_readonly_fields_error_message_inverted.py b/tests/modeladmin/test_readonly_fields_error_message_inverted.py\nnew file mode 100644\nindex 0000000..f948c88\n--- /dev/null\n+++ b/tests/modeladmin/test_readonly_fields_error_message_inverted.py\n@@ -0,0 +1,25 @@\n+from django.contrib.admin import ModelAdmin\n+from django.contrib.admin.sites import AdminSite\n+from django.core.checks import Error\n+from django.test import SimpleTestCase\n+from .models import ValidationTestModel\n+\n+class ReadonlyFieldsErrorMessageTest(SimpleTestCase):\n+    def test_readonly_fields_error_message(self):\n+        class TestModelAdmin(ModelAdmin):\n+            readonly_fields = (\"non_existent_field\",)\n+\n+        admin_site = AdminSite()\n+        admin_obj = TestModelAdmin(ValidationTestModel, admin_site)\n+        errors = admin_obj.check()\n+        \n+        # Altered expected error to include the field name\n+        expected_error = Error(\n+            \"The value of 'readonly_fields[0]' refers to 'non_existent_field', which is not a callable, an attribute of 'TestModelAdmin', or an attribute of 'modeladmin.ValidationTestModel'.\",\n+            obj=TestModelAdmin,\n+            id='admin.E035',\n+        )\n+        \n+        # The test should now fail if the bug is present\n+        if expected_error not in errors:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 893972,
  "num_received_chars": 18959,
  "elapsed_time": 153.89853954315186,
  "lint_repair_count": 3,
  "test_generation_attempts": 6,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}