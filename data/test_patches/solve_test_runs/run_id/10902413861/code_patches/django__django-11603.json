{
  "instance_id": "django__django-11603",
  "edit_test_file": "tests/aggregation/tests.py",
  "code_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex da4ff92..19bf41a 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -99,6 +99,10 @@ class Aggregate(Func):\n class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):\n     function = 'AVG'\n     name = 'Avg'\n+    allow_distinct = True\n+\n+    def __init__(self, expression, distinct=False, filter=None, **extra):\n+        super().__init__(expression, distinct=distinct, filter=filter, **extra)\n \n \n class Count(Aggregate):\n@@ -142,6 +146,10 @@ class StdDev(NumericOutputFieldMixin, Aggregate):\n class Sum(FixDurationInputMixin, Aggregate):\n     function = 'SUM'\n     name = 'Sum'\n+    allow_distinct = True\n+\n+    def __init__(self, expression, distinct=False, filter=None, **extra):\n+        super().__init__(expression, distinct=distinct, filter=filter, **extra)\n \n \n class Variance(NumericOutputFieldMixin, Aggregate):\n",
  "test_patch": "diff --git a/tests/aggregation/test_distinct_aggregates.py b/tests/aggregation/test_distinct_aggregates.py\nnew file mode 100644\nindex 0000000..96d2d6b\n--- /dev/null\n+++ b/tests/aggregation/test_distinct_aggregates.py\n@@ -0,0 +1,34 @@\n+# File: tests/aggregation/test_distinct_aggregates.py\n+\n+import datetime\n+from decimal import Decimal\n+\n+from django.core.exceptions import FieldError\n+from django.db.models import Avg, Sum\n+from django.test import TestCase\n+from django.test.utils import Approximate\n+\n+from .models import Author, Book, Publisher, Store\n+\n+\n+class DistinctAggregatesTestCase(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.a1 = Author.objects.create(name='Adrian Holovaty', age=34)\n+        cls.a2 = Author.objects.create(name='Jacob Kaplan-Moss', age=35)\n+        cls.a3 = Author.objects.create(name='Brad Dayley', age=45)\n+        cls.a4 = Author.objects.create(name='James Bennett', age=29)\n+        cls.a5 = Author.objects.create(name='Jeffrey Forcier', age=37)\n+        cls.a6 = Author.objects.create(name='Paul Bissex', age=29)\n+        cls.a7 = Author.objects.create(name='Wesley J. Chun', age=25)\n+        cls.a8 = Author.objects.create(name='Peter Norvig', age=57)\n+        cls.a9 = Author.objects.create(name='Stuart Russell', age=46)\n+\n+    def test_distinct_avg_aggregate(self):\n+        with self.assertRaisesMessage(TypeError, 'Avg does not allow distinct.'):\n+            Author.objects.aggregate(distinct_avg_age=Avg('age', distinct=True))\n+\n+    def test_distinct_sum_aggregate(self):\n+        with self.assertRaisesMessage(TypeError, 'Sum does not allow distinct.'):\n+            Author.objects.aggregate(distinct_sum_age=Sum('age', distinct=True))\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/aggregation/test_distinct_aggregates_inverted.py b/tests/aggregation/test_distinct_aggregates_inverted.py\nnew file mode 100644\nindex 0000000..1e0c8f4\n--- /dev/null\n+++ b/tests/aggregation/test_distinct_aggregates_inverted.py\n@@ -0,0 +1,40 @@\n+# File: tests/aggregation/test_distinct_aggregates.py\n+\n+import datetime\n+from decimal import Decimal\n+\n+from django.core.exceptions import FieldError\n+from django.db.models import Avg, Sum\n+from django.test import TestCase\n+from django.test.utils import Approximate\n+\n+from .models import Author, Book, Publisher, Store\n+\n+\n+class DistinctAggregatesTestCase(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.a1 = Author.objects.create(name='Adrian Holovaty', age=34)\n+        cls.a2 = Author.objects.create(name='Jacob Kaplan-Moss', age=35)\n+        cls.a3 = Author.objects.create(name='Brad Dayley', age=45)\n+        cls.a4 = Author.objects.create(name='James Bennett', age=29)\n+        cls.a5 = Author.objects.create(name='Jeffrey Forcier', age=37)\n+        cls.a6 = Author.objects.create(name='Paul Bissex', age=29)\n+        cls.a7 = Author.objects.create(name='Wesley J. Chun', age=25)\n+        cls.a8 = Author.objects.create(name='Peter Norvig', age=57)\n+        cls.a9 = Author.objects.create(name='Stuart Russell', age=46)\n+\n+    def test_distinct_avg_aggregate(self):\n+        # Altered to fail when the issue is observed\n+        with self.assertRaisesMessage(Exception, '__BUG__HERE__'):\n+            result = Author.objects.aggregate(distinct_avg_age=Avg('age', distinct=True))\n+            if result['distinct_avg_age'] is not None:\n+                raise Exception('__BUG__HERE__')\n+\n+    def test_distinct_sum_aggregate(self):\n+        # Altered to fail when the issue is observed\n+        with self.assertRaisesMessage(Exception, '__BUG__HERE__'):\n+            result = Author.objects.aggregate(distinct_sum_age=Sum('age', distinct=True))\n+            if result['distinct_sum_age'] is not None:\n+                raise Exception('__BUG__HERE__')\n\\ No newline at end of file\n",
  "num_sent_chars": 526715,
  "num_received_chars": 17031,
  "elapsed_time": 108.14521956443787,
  "lint_repair_count": 1,
  "test_generation_attempts": 3,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}