{
  "instance_id": "django__django-12406",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex dafc11f..7dd1037 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -13,7 +13,7 @@ from django.forms.forms import BaseForm, DeclarativeFieldsMetaclass\n from django.forms.formsets import BaseFormSet, formset_factory\n from django.forms.utils import ErrorList\n from django.forms.widgets import (\n-    HiddenInput, MultipleHiddenInput, SelectMultiple,\n+    HiddenInput, MultipleHiddenInput, SelectMultiple, RadioSelect,\n )\n from django.utils.text import capfirst, get_text_list\n from django.utils.translation import gettext, gettext_lazy as _\n@@ -1190,6 +1190,10 @@ class ModelChoiceField(ChoiceField):\n         else:\n             self.empty_label = empty_label\n \n+        # Adjust initial for RadioSelect to prevent default selection of blank option\n+        if required and isinstance(widget, RadioSelect):\n+            initial = None\n+\n         # Call Field instead of ChoiceField __init__() because we don't need\n         # ChoiceField.__init__().\n         Field.__init__(\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1949299,
  "num_received_chars": 48697,
  "elapsed_time": 437.3410379886627,
  "lint_repair_count": 7,
  "test_generation_attempts": 9,
  "code_generation_attempts": 4,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}