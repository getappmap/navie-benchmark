{
  "instance_id": "sphinx-doc__sphinx-8621",
  "edit_test_file": null,
  "code_patch": "diff --git a/sphinx/writers/html.py b/sphinx/writers/html.py\nindex d3c8707..d991ed2 100644\n--- a/sphinx/writers/html.py\n+++ b/sphinx/writers/html.py\n@@ -494,8 +494,15 @@ class HTMLTranslator(SphinxTranslator, BaseTranslator):\n     # overwritten\n     def visit_literal(self, node: Element) -> None:\n         if 'kbd' in node['classes']:\n-            self.body.append(self.starttag(node, 'kbd', '',\n-                                           CLASS='docutils literal notranslate'))\n+            keys = node.astext().split()\n+            for key in keys:\n+                if key in ('-', '+', '^'):\n+                    self.body.append(key)\n+                else:\n+                    self.body.append(self.starttag(node, 'kbd', '',\n+                                                   CLASS='docutils literal notranslate'))\n+                    self.body.append(self.encode(key))\n+                    self.body.append('</kbd>')\n         else:\n             self.body.append(self.starttag(node, 'code', '',\n                                            CLASS='docutils literal notranslate'))\n@@ -503,7 +510,7 @@ class HTMLTranslator(SphinxTranslator, BaseTranslator):\n \n     def depart_literal(self, node: Element) -> None:\n         if 'kbd' in node['classes']:\n-            self.body.append('</kbd>')\n+            pass  # Closing tags are handled in visit_literal\n         else:\n             self.protect_literal_text -= 1\n             self.body.append('</code>')\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1716960,
  "num_received_chars": 38608,
  "elapsed_time": 251.64418268203735,
  "lint_repair_count": 8,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}