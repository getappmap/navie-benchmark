{
  "instance_id": "django__django-11211",
  "edit_test_file": "tests/prefetch_related/test_uuid.py",
  "code_patch": "diff --git a/django/contrib/contenttypes/fields.py b/django/contrib/contenttypes/fields.py\nindex ed98ecb..41ad7ce 100644\n--- a/django/contrib/contenttypes/fields.py\n+++ b/django/contrib/contenttypes/fields.py\n@@ -184,6 +184,8 @@ class GenericForeignKey(FieldCacheMixin):\n             if ct_id is not None:\n                 fk_val = getattr(instance, self.fk_field)\n                 if fk_val is not None:\n+                    # Convert fk_val to the correct type if necessary\n+                    fk_val = self.model._meta.get_field(self.fk_field).to_python(fk_val)\n                     fk_dict[ct_id].add(fk_val)\n                     instance_dict[ct_id] = instance\n \n",
  "test_patch": "diff --git a/tests/prefetch_related/test_gfk_with_uuid.py b/tests/prefetch_related/test_gfk_with_uuid.py\nnew file mode 100644\nindex 0000000..48ab03b\n--- /dev/null\n+++ b/tests/prefetch_related/test_gfk_with_uuid.py\n@@ -0,0 +1,28 @@\n+import uuid\n+from django.contrib.contenttypes.fields import GenericForeignKey\n+from django.contrib.contenttypes.models import ContentType\n+from django.db import models\n+from django.test import TestCase\n+\n+class Foo(models.Model):\n+    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n+\n+class Bar(models.Model):\n+    foo_content_type = models.ForeignKey(\n+        ContentType, related_name='actor',\n+        on_delete=models.CASCADE, db_index=True\n+    )\n+    foo_object_id = models.CharField(max_length=255, db_index=True)\n+    foo = GenericForeignKey('foo_content_type', 'foo_object_id')\n+\n+class GFKWithUUIDTestCase(TestCase):\n+    def test_prefetch_related_with_gfk_and_uuid(self):\n+        foo_instance = Foo.objects.create()\n+        bar_instance = Bar.objects.create(\n+            foo_content_type=ContentType.objects.get_for_model(Foo),\n+            foo_object_id=str(foo_instance.id)\n+        )\n+\n+        with self.assertNumQueries(2):\n+            bars = Bar.objects.all().prefetch_related('foo')\n+            self.assertIsNone(bars[0].foo)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/prefetch_related/test_gfk_with_uuid_inverted.py b/tests/prefetch_related/test_gfk_with_uuid_inverted.py\nnew file mode 100644\nindex 0000000..031954a\n--- /dev/null\n+++ b/tests/prefetch_related/test_gfk_with_uuid_inverted.py\n@@ -0,0 +1,29 @@\n+import uuid\n+from django.contrib.contenttypes.fields import GenericForeignKey\n+from django.contrib.contenttypes.models import ContentType\n+from django.db import models\n+from django.test import TestCase\n+\n+class Foo(models.Model):\n+    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n+\n+class Bar(models.Model):\n+    foo_content_type = models.ForeignKey(\n+        ContentType, related_name='actor',\n+        on_delete=models.CASCADE, db_index=True\n+    )\n+    foo_object_id = models.CharField(max_length=255, db_index=True)\n+    foo = GenericForeignKey('foo_content_type', 'foo_object_id')\n+\n+class GFKWithUUIDTestCase(TestCase):\n+    def test_prefetch_related_with_gfk_and_uuid(self):\n+        foo_instance = Foo.objects.create()\n+        bar_instance = Bar.objects.create(\n+            foo_content_type=ContentType.objects.get_for_model(Foo),\n+            foo_object_id=str(foo_instance.id)\n+        )\n+\n+        with self.assertNumQueries(2):\n+            bars = Bar.objects.all().prefetch_related('foo')\n+            if bars[0].foo is None:\n+                raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1720697,
  "num_received_chars": 86612,
  "elapsed_time": 729.5736145973206,
  "lint_repair_count": 7,
  "test_generation_attempts": 1,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}