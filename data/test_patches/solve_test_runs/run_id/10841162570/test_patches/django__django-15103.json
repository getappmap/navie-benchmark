{
  "edit_test_file": "tests/template_tests/filter_tests/test_json_script.py",
  "test_patch": "diff --git a/tests/template_tests/filter_tests/test_json_script_optional.py b/tests/template_tests/filter_tests/test_json_script_optional.py\nnew file mode 100644\nindex 0000000..5b728ac\n--- /dev/null\n+++ b/tests/template_tests/filter_tests/test_json_script_optional.py\n@@ -0,0 +1,16 @@\n+from django.template import TemplateSyntaxError\n+from django.test import SimpleTestCase\n+\n+from ..utils import setup\n+\n+\n+class JsonScriptOptionalElementIdTests(SimpleTestCase):\n+\n+    @setup({'json-tag-optional-id': '{{ value|json_script }}'})\n+    def test_optional_element_id(self):\n+        with self.assertRaises(TemplateSyntaxError) as context:\n+            self.engine.render_to_string(\n+                'json-tag-optional-id',\n+                {'value': {'a': 'testing without id'}}\n+            )\n+        self.assertIn('json_script requires 2 arguments, 1 provided', str(context.exception))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/template_tests/filter_tests/test_json_script_optional_inverted.py b/tests/template_tests/filter_tests/test_json_script_optional_inverted.py\nnew file mode 100644\nindex 0000000..dc7ac2f\n--- /dev/null\n+++ b/tests/template_tests/filter_tests/test_json_script_optional_inverted.py\n@@ -0,0 +1,20 @@\n+from django.template import TemplateSyntaxError\n+from django.test import SimpleTestCase\n+\n+from ..utils import setup\n+\n+\n+class JsonScriptOptionalElementIdTests(SimpleTestCase):\n+\n+    @setup({'json-tag-optional-id': '{{ value|json_script }}'})\n+    def test_optional_element_id(self):\n+        try:\n+            self.engine.render_to_string(\n+                'json-tag-optional-id',\n+                {'value': {'a': 'testing without id'}}\n+            )\n+        except TemplateSyntaxError as e:\n+            self.assertIn('json_script requires 2 arguments, 1 provided', str(e))\n+            raise AssertionError(\"__BUG__HERE__\")\n+        else:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}