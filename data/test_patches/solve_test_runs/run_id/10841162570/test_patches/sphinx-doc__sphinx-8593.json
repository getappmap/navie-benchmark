{
  "edit_test_file": "tests/test_ext_autodoc_autoattribute.py",
  "test_patch": "diff --git a/tests/test_ext_autodoc_meta_public.py b/tests/test_ext_autodoc_meta_public.py\nnew file mode 100644\nindex 0000000..43f09a4\n--- /dev/null\n+++ b/tests/test_ext_autodoc_meta_public.py\n@@ -0,0 +1,19 @@\n+\"\"\"\n+    test_ext_autodoc_meta_public\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the autodoc extension for `:meta public:` effect on variables.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+from .test_ext_autodoc import do_autodoc\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_meta_public_variable(app):\n+    # This test checks if the `:meta public:` directive affects variables as expected.\n+    actual = do_autodoc(app, 'module', 'example', {'members': True})\n+    assert '_foo' not in list(actual), \"Expected '_foo' to be shown, but it is not.\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/test_ext_autodoc_meta_public_inverted.py b/tests/test_ext_autodoc_meta_public_inverted.py\nnew file mode 100644\nindex 0000000..e9e6a12\n--- /dev/null\n+++ b/tests/test_ext_autodoc_meta_public_inverted.py\n@@ -0,0 +1,19 @@\n+\"\"\"\n+    test_ext_autodoc_meta_public\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the autodoc extension for `:meta public:` effect on variables.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+from .test_ext_autodoc import do_autodoc\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_meta_public_variable(app):\n+    # This test checks if the `:meta public:` directive affects variables as expected.\n+    actual = do_autodoc(app, 'module', 'example', {'members': True})\n+    assert '_foo' in list(actual), \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}