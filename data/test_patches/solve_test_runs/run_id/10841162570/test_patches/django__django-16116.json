{
  "edit_test_file": "tests/migrations/test_loader.py",
  "test_patch": "diff --git a/tests/migrations/test_makemigrations_check_inconsistency.py b/tests/migrations/test_makemigrations_check_inconsistency.py\nnew file mode 100644\nindex 0000000..acabed8\n--- /dev/null\n+++ b/tests/migrations/test_makemigrations_check_inconsistency.py\n@@ -0,0 +1,23 @@\n+import os\n+import sys\n+from io import StringIO\n+from django.core.management import call_command\n+from django.test import TestCase, override_settings\n+\n+class MakemigrationsCheckInconsistencyTest(TestCase):\n+    @override_settings(\n+        MIGRATION_MODULES={\"migrations\": \"migrations.test_migrations\"},\n+        INSTALLED_APPS=[\"migrations\"],\n+    )\n+    def test_makemigrations_check_inconsistency(self):\n+        \"\"\"\n+        Test that `makemigrations --check` behaves inconsistently by generating\n+        migrations when it should not.\n+        \"\"\"\n+        out = StringIO()\n+        try:\n+            call_command('makemigrations', '--check', stdout=out)\n+        except SystemExit as e:\n+            self.assertNotEqual(e.code, 0, \"makemigrations --check exited without error.\")\n+        else:\n+            self.fail(\"makemigrations --check did not exit as expected.\")\n\\ No newline at end of file\n",
  "inverted_patch": null
}