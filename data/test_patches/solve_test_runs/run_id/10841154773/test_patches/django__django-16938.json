{
  "edit_test_file": "tests/m2m_through_regress/tests.py",
  "test_patch": "diff --git a/tests/m2m_through_regress/test_serialization_m2m_custom_manager.py b/tests/m2m_through_regress/test_serialization_m2m_custom_manager.py\nnew file mode 100644\nindex 0000000..44cff28\n--- /dev/null\n+++ b/tests/m2m_through_regress/test_serialization_m2m_custom_manager.py\n@@ -0,0 +1,38 @@\n+from django.core import serializers\n+from django.core.exceptions import FieldError\n+from django.test import TestCase\n+from django.db import models\n+\n+class TestTagManager(models.Manager):\n+    def get_queryset(self):\n+        qs = super().get_queryset()\n+        qs = qs.select_related(\"master\")\n+        return qs\n+\n+class TestTagMaster(models.Model):\n+    name = models.CharField(max_length=120)\n+\n+class TestTag(models.Model):\n+    objects = TestTagManager()\n+    name = models.CharField(max_length=120)\n+    master = models.ForeignKey(TestTagMaster, on_delete=models.SET_NULL, null=True)\n+\n+class Test(models.Model):\n+    name = models.CharField(max_length=120)\n+    tags = models.ManyToManyField(TestTag, blank=True)\n+\n+class SerializationM2MCustomManagerTestCase(TestCase):\n+    def test_serialization_m2m_with_custom_manager(self):\n+        tag_master = TestTagMaster.objects.create(name=\"master\")\n+        tag = TestTag.objects.create(name=\"tag\", master=tag_master)\n+        test = Test.objects.create(name=\"test\")\n+        test.tags.add(tag)\n+        test.save()\n+\n+        with self.assertRaises(FieldError) as cm:\n+            serializers.serialize(\"json\", [test])\n+\n+        self.assertIn(\n+            \"Field TestTag.master cannot be both deferred and traversed using select_related at the same time.\",\n+            str(cm.exception)\n+        )\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/m2m_through_regress/test_serialization_m2m_custom_manager_inverted.py b/tests/m2m_through_regress/test_serialization_m2m_custom_manager_inverted.py\nnew file mode 100644\nindex 0000000..7400b00\n--- /dev/null\n+++ b/tests/m2m_through_regress/test_serialization_m2m_custom_manager_inverted.py\n@@ -0,0 +1,39 @@\n+from django.core import serializers\n+from django.core.exceptions import FieldError\n+from django.test import TestCase\n+from django.db import models\n+\n+class TestTagManager(models.Manager):\n+    def get_queryset(self):\n+        qs = super().get_queryset()\n+        qs = qs.select_related(\"master\")\n+        return qs\n+\n+class TestTagMaster(models.Model):\n+    name = models.CharField(max_length=120)\n+\n+class TestTag(models.Model):\n+    objects = TestTagManager()\n+    name = models.CharField(max_length=120)\n+    master = models.ForeignKey(TestTagMaster, on_delete=models.SET_NULL, null=True)\n+\n+class Test(models.Model):\n+    name = models.CharField(max_length=120)\n+    tags = models.ManyToManyField(TestTag, blank=True)\n+\n+class SerializationM2MCustomManagerTestCase(TestCase):\n+    def test_serialization_m2m_with_custom_manager(self):\n+        tag_master = TestTagMaster.objects.create(name=\"master\")\n+        tag = TestTag.objects.create(name=\"tag\", master=tag_master)\n+        test = Test.objects.create(name=\"test\")\n+        test.tags.add(tag)\n+        test.save()\n+\n+        try:\n+            serializers.serialize(\"json\", [test])\n+        except FieldError as e:\n+            self.assertIn(\n+                \"Field TestTag.master cannot be both deferred and traversed using select_related at the same time.\",\n+                str(e)\n+            )\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}