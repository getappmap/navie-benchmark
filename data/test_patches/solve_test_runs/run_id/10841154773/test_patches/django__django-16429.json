{
  "edit_test_file": "tests/utils_tests/test_timesince.py",
  "test_patch": "diff --git a/tests/utils_tests/test_timesince_tz_issue.py b/tests/utils_tests/test_timesince_tz_issue.py\nnew file mode 100644\nindex 0000000..2aefae3\n--- /dev/null\n+++ b/tests/utils_tests/test_timesince_tz_issue.py\n@@ -0,0 +1,14 @@\n+import datetime\n+from django.test import TestCase\n+from django.test.utils import requires_tz_support, override_settings\n+from django.utils import timezone\n+from django.utils.timesince import timesince\n+\n+class TimesinceTZIssueTests(TestCase):\n+    @requires_tz_support\n+    @override_settings(USE_TZ=True)\n+    def test_long_interval_with_tz(self):\n+        now = timezone.now()\n+        d = now - datetime.timedelta(days=31)\n+        with self.assertRaises(TypeError):\n+            timesince(d)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/utils_tests/test_timesince_tz_issue_inverted.py b/tests/utils_tests/test_timesince_tz_issue_inverted.py\nnew file mode 100644\nindex 0000000..6d3e7a1\n--- /dev/null\n+++ b/tests/utils_tests/test_timesince_tz_issue_inverted.py\n@@ -0,0 +1,14 @@\n+import datetime\n+from django.test import TestCase\n+from django.test.utils import requires_tz_support, override_settings\n+from django.utils import timezone\n+from django.utils.timesince import timesince\n+\n+class TimesinceTZIssueTests(TestCase):\n+    @requires_tz_support\n+    @override_settings(USE_TZ=True)\n+    def test_long_interval_with_tz(self):\n+        now = timezone.now()\n+        d = now - datetime.timedelta(days=31)\n+        with self.assertRaisesMessage(TypeError, \"__BUG__HERE__\"):\n+            timesince(d)\n\\ No newline at end of file\n"
}