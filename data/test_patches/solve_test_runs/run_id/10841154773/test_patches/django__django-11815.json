{
  "edit_test_file": "tests/field_deconstruction/tests.py",
  "test_patch": "diff --git a/tests/field_deconstruction/test_enum_migration_issue.py b/tests/field_deconstruction/test_enum_migration_issue.py\nnew file mode 100644\nindex 0000000..2c13a15\n--- /dev/null\n+++ b/tests/field_deconstruction/test_enum_migration_issue.py\n@@ -0,0 +1,21 @@\n+from enum import Enum\n+from django.db import models\n+from django.test import SimpleTestCase\n+from django.utils.translation import gettext_lazy as _\n+\n+class Status(Enum):\n+    GOOD = _('Good')\n+    BAD = _('Bad')\n+\n+    def __str__(self):\n+        return self.name\n+\n+class Item(models.Model):\n+    status = models.CharField(default=Status.GOOD, max_length=128)\n+\n+class EnumMigrationIssueTest(SimpleTestCase):\n+    def test_enum_migration_uses_value_instead_of_name(self):\n+        field = Item._meta.get_field('status')\n+        name, path, args, kwargs = field.deconstruct()\n+        # The issue is that the default is using the value of the Enum instead of its name\n+        self.assertEqual(kwargs['default'], Status('Good'))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/field_deconstruction/test_enum_migration_issue_inverted.py b/tests/field_deconstruction/test_enum_migration_issue_inverted.py\nnew file mode 100644\nindex 0000000..be2fe19\n--- /dev/null\n+++ b/tests/field_deconstruction/test_enum_migration_issue_inverted.py\n@@ -0,0 +1,24 @@\n+from enum import Enum\n+from django.db import models\n+from django.test import SimpleTestCase\n+from django.utils.translation import gettext_lazy as _\n+\n+class Status(Enum):\n+    GOOD = _('Good')\n+    BAD = _('Bad')\n+\n+    def __str__(self):\n+        return self.name\n+\n+class Item(models.Model):\n+    status = models.CharField(default=Status.GOOD, max_length=128)\n+\n+class EnumMigrationIssueTest(SimpleTestCase):\n+    def test_enum_migration_uses_value_instead_of_name(self):\n+        field = Item._meta.get_field('status')\n+        name, path, args, kwargs = field.deconstruct()\n+        # The issue is that the default is using the value of the Enum instead of its name\n+        # Alter the test to fail when the issue is observed\n+        if kwargs['default'] == Status('Good'):\n+            raise AssertionError(\"__BUG__HERE__\")\n+        self.assertEqual(kwargs['default'], Status['GOOD'])\n\\ No newline at end of file\n"
}