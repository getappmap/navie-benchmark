{
  "edit_test_file": "tests/generic_relations/test_forms.py",
  "test_patch": "diff --git a/tests/generic_relations/test_admin_modify.py b/tests/generic_relations/test_admin_modify.py\nnew file mode 100644\nindex 0000000..d79f204\n--- /dev/null\n+++ b/tests/generic_relations/test_admin_modify.py\n@@ -0,0 +1,29 @@\n+import unittest\n+from django.contrib.admin.templatetags.admin_modify import submit_row\n+\n+class TestAdminModifyPermissions(unittest.TestCase):\n+    def test_show_save_as_new_without_add_permission(self):\n+        \"\"\"\n+        Test that 'show_save_as_new' is True even when 'has_add_permission' is False.\n+        This reproduces the issue where 'show_save_as_new' does not check for add permission.\n+        \"\"\"\n+        context = {\n+            \"add\": False,\n+            \"change\": True,\n+            \"is_popup\": False,\n+            \"save_as\": True,\n+            \"has_add_permission\": False,  # No add permission\n+            \"has_change_permission\": True,\n+            \"has_view_permission\": True,\n+            \"has_editable_inline_admin_formsets\": False,\n+            \"show_save\": True,\n+            \"show_save_and_add_another\": True,\n+            \"show_save_and_continue\": True,\n+            \"has_delete_permission\": True,\n+            \"show_delete\": True,\n+        }\n+        template_context = submit_row(context)\n+        self.assertTrue(template_context[\"show_save_as_new\"], \"show_save_as_new should be True without add permission\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/generic_relations/test_admin_modify_inverted.py b/tests/generic_relations/test_admin_modify_inverted.py\nnew file mode 100644\nindex 0000000..7418260\n--- /dev/null\n+++ b/tests/generic_relations/test_admin_modify_inverted.py\n@@ -0,0 +1,29 @@\n+import unittest\n+from django.contrib.admin.templatetags.admin_modify import submit_row\n+\n+class TestAdminModifyPermissions(unittest.TestCase):\n+    def test_show_save_as_new_without_add_permission(self):\n+        \"\"\"\n+        Test that 'show_save_as_new' is False when 'has_add_permission' is False.\n+        This reproduces the issue where 'show_save_as_new' should check for add permission.\n+        \"\"\"\n+        context = {\n+            \"add\": False,\n+            \"change\": True,\n+            \"is_popup\": False,\n+            \"save_as\": True,\n+            \"has_add_permission\": False,  # No add permission\n+            \"has_change_permission\": True,\n+            \"has_view_permission\": True,\n+            \"has_editable_inline_admin_formsets\": False,\n+            \"show_save\": True,\n+            \"show_save_and_add_another\": True,\n+            \"show_save_and_continue\": True,\n+            \"has_delete_permission\": True,\n+            \"show_delete\": True,\n+        }\n+        template_context = submit_row(context)\n+        self.assertFalse(template_context[\"show_save_as_new\"], \"__BUG__HERE__\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n"
}