{
  "edit_test_file": "tests/migrations/test_optimizer.py",
  "test_patch": "diff --git a/tests/migrations/test_migrations_squashmodel_options.py b/tests/migrations/test_migrations_squashmodel_options.py\nnew file mode 100644\nindex 0000000..eaf00ce\n--- /dev/null\n+++ b/tests/migrations/test_migrations_squashmodel_options.py\n@@ -0,0 +1,37 @@\n+import unittest\n+from django.db import models, migrations\n+from django.db.migrations.optimizer import MigrationOptimizer\n+\n+class TestMigrationsSquashModelOptions(unittest.TestCase):\n+    def test_create_model_with_alter_options_squashed(self):\n+        \"\"\"\n+        Test that CreateModel followed by AlterModelOptions does not clear\n+        model options when squashed.\n+        \"\"\"\n+        create_model = migrations.CreateModel(\n+            name=\"TestModel\",\n+            fields=[\n+                (\"name\", models.CharField(max_length=255)),\n+            ],\n+            options={\"verbose_name\": \"Test Model\"},\n+        )\n+        alter_options = migrations.AlterModelOptions(\n+            name=\"TestModel\",\n+            options={\"verbose_name_plural\": \"Test Models\"},\n+        )\n+\n+        optimizer = MigrationOptimizer()\n+        optimized_operations = optimizer.optimize(\n+            [create_model, alter_options], app_label=\"test_app\"\n+        )\n+\n+        # The issue is that the options are not cleared, so we expect the\n+        # verbose_name to still be present, which is incorrect behavior.\n+        self.assertEqual(\n+            optimized_operations[0].options,\n+            {\"verbose_name\": \"Test Model\", \"verbose_name_plural\": \"Test Models\"},\n+            \"Model options were not cleared correctly when squashed.\"\n+        )\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/migrations/test_migrations_squashmodel_options_inverted.py b/tests/migrations/test_migrations_squashmodel_options_inverted.py\nnew file mode 100644\nindex 0000000..dc69fca\n--- /dev/null\n+++ b/tests/migrations/test_migrations_squashmodel_options_inverted.py\n@@ -0,0 +1,38 @@\n+import unittest\n+from django.db import models, migrations\n+from django.db.migrations.optimizer import MigrationOptimizer\n+\n+class TestMigrationsSquashModelOptions(unittest.TestCase):\n+    def test_create_model_with_alter_options_squashed(self):\n+        \"\"\"\n+        Test that CreateModel followed by AlterModelOptions does not clear\n+        model options when squashed.\n+        \"\"\"\n+        create_model = migrations.CreateModel(\n+            name=\"TestModel\",\n+            fields=[\n+                (\"name\", models.CharField(max_length=255)),\n+            ],\n+            options={\"verbose_name\": \"Test Model\"},\n+        )\n+        alter_options = migrations.AlterModelOptions(\n+            name=\"TestModel\",\n+            options={\"verbose_name_plural\": \"Test Models\"},\n+        )\n+\n+        optimizer = MigrationOptimizer()\n+        optimized_operations = optimizer.optimize(\n+            [create_model, alter_options], app_label=\"test_app\"\n+        )\n+\n+        # The issue is that the options are not cleared, so we expect the\n+        # verbose_name to still be present, which is incorrect behavior.\n+        # The test should now fail if the bug is present.\n+        self.assertNotEqual(\n+            optimized_operations[0].options,\n+            {\"verbose_name\": \"Test Model\", \"verbose_name_plural\": \"Test Models\"},\n+            \"__BUG__HERE__\"\n+        )\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n"
}