{
  "edit_test_file": "tests/invalid_models_tests/test_models.py",
  "test_patch": "diff --git a/tests/invalid_models_tests/test_meta_ordering_bug.py b/tests/invalid_models_tests/test_meta_ordering_bug.py\nnew file mode 100644\nindex 0000000..ee2bc2d\n--- /dev/null\n+++ b/tests/invalid_models_tests/test_meta_ordering_bug.py\n@@ -0,0 +1,20 @@\n+import unittest\n+from django.db import models\n+from django.test import TestCase\n+from django.db.models.expressions import F, OrderBy\n+\n+class Parent(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        abstract = True\n+        ordering = [OrderBy(F('name'), descending=True)]\n+\n+class Child(Parent):\n+    pass\n+\n+class OrderExpressionBugTest(TestCase):\n+    def test_order_by_parent_model_with_meta_ordering_expression(self):\n+        # This should raise an exception due to the ordering expression in the parent model's Meta class.\n+        with self.assertRaises(Exception):\n+            list(Child.objects.order_by('name'))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/invalid_models_tests/test_meta_ordering_bug_inverted.py b/tests/invalid_models_tests/test_meta_ordering_bug_inverted.py\nnew file mode 100644\nindex 0000000..ba3cdcc\n--- /dev/null\n+++ b/tests/invalid_models_tests/test_meta_ordering_bug_inverted.py\n@@ -0,0 +1,22 @@\n+import unittest\n+from django.db import models\n+from django.test import TestCase\n+from django.db.models.expressions import F, OrderBy\n+\n+class Parent(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        abstract = True\n+        ordering = [OrderBy(F('name'), descending=True)]\n+\n+class Child(Parent):\n+    pass\n+\n+class OrderExpressionBugTest(TestCase):\n+    def test_order_by_parent_model_with_meta_ordering_expression(self):\n+        # This should now fail with the error message \"__BUG__HERE__\" when the issue is observed.\n+        try:\n+            list(Child.objects.order_by('name'))\n+        except Exception:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}