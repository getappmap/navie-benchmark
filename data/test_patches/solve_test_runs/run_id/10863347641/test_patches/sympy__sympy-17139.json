{
  "edit_test_file": "sympy/core/tests/test_noncommutative.py",
  "test_patch": "diff --git a/sympy/core/tests/test_simplify.py b/sympy/core/tests/test_simplify.py\nnew file mode 100644\nindex 0000000..3e159ce\n--- /dev/null\n+++ b/sympy/core/tests/test_simplify.py\n@@ -0,0 +1,7 @@\n+from sympy import Symbol, cos, I, simplify\n+from sympy.utilities.pytest import raises\n+\n+def test_simplify_cos_I_raises_TypeError():\n+    x = Symbol('x')\n+    with raises(TypeError):\n+        simplify(cos(x)**I)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/core/tests/test_simplify_inverted.py b/sympy/core/tests/test_simplify_inverted.py\nnew file mode 100644\nindex 0000000..3d9899f\n--- /dev/null\n+++ b/sympy/core/tests/test_simplify_inverted.py\n@@ -0,0 +1,12 @@\n+from sympy import Symbol, cos, I, simplify\n+from sympy.utilities.pytest import raises\n+\n+def test_simplify_cos_I_raises_bug_error():\n+    x = Symbol('x')\n+    try:\n+        simplify(cos(x)**I)\n+    except TypeError as e:\n+        if \"Invalid comparison of complex\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\")\n+        else:\n+            raise e\n\\ No newline at end of file\n"
}