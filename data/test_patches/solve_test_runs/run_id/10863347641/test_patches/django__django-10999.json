{
  "edit_test_file": "tests/forms_tests/field_tests/test_durationfield.py",
  "test_patch": "diff --git a/tests/forms_tests/field_tests/test_dateparse_negative_duration.py b/tests/forms_tests/field_tests/test_dateparse_negative_duration.py\nnew file mode 100644\nindex 0000000..ab248f4\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_dateparse_negative_duration.py\n@@ -0,0 +1,14 @@\n+import unittest\n+from datetime import timedelta\n+from django.utils.dateparse import parse_duration\n+\n+class TestNegativeDurationParsing(unittest.TestCase):\n+    def test_negative_duration_with_hours(self):\n+        # This test is expected to fail due to the issue with negative durations\n+        # in the parse_duration function as described in the issue.\n+        test_value = '-1:15:30'\n+        expected = timedelta(hours=-1, minutes=15, seconds=30)\n+        self.assertEqual(parse_duration(test_value), expected)\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/forms_tests/field_tests/test_dateparse_negative_duration_inverted.py b/tests/forms_tests/field_tests/test_dateparse_negative_duration_inverted.py\nnew file mode 100644\nindex 0000000..47666fd\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_dateparse_negative_duration_inverted.py\n@@ -0,0 +1,17 @@\n+import unittest\n+from datetime import timedelta\n+from django.utils.dateparse import parse_duration\n+\n+class TestNegativeDurationParsing(unittest.TestCase):\n+    def test_negative_duration_with_hours(self):\n+        # This test is expected to fail due to the issue with negative durations\n+        # in the parse_duration function as described in the issue.\n+        test_value = '-1:15:30'\n+        expected = timedelta(hours=-1, minutes=15, seconds=30)\n+        actual = parse_duration(test_value)\n+        if actual == expected:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        self.assertNotEqual(actual, expected)\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}