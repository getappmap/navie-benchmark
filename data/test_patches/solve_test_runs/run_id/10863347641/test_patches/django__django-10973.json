{
  "edit_test_file": "tests/bash_completion/tests.py",
  "test_patch": "diff --git a/tests/bash_completion/test_postgres_client_subprocess.py b/tests/bash_completion/test_postgres_client_subprocess.py\nnew file mode 100644\nindex 0000000..f44465f\n--- /dev/null\n+++ b/tests/bash_completion/test_postgres_client_subprocess.py\n@@ -0,0 +1,22 @@\n+import os\n+import subprocess\n+from unittest import TestCase, mock\n+\n+class PostgresClientSubprocessTestCase(TestCase):\n+    def test_pgpassword_with_subprocess_run(self):\n+        dbinfo = {\n+            'database': 'dbname',\n+            'user': 'someuser',\n+            'password': 'somepassword',\n+            'host': 'somehost',\n+            'port': '444',\n+        }\n+        expected_command = ['psql', '-U', dbinfo['user'], '-h', dbinfo['host'], '-p', dbinfo['port'], dbinfo['database']]\n+        expected_env = os.environ.copy()\n+        expected_env['PGPASSWORD'] = dbinfo['password']\n+\n+        with mock.patch('subprocess.run') as mock_run:\n+            mock_run.return_value.returncode = 0\n+            subprocess.run(expected_command, env=expected_env)\n+\n+            mock_run.assert_called_once_with(expected_command, env=expected_env)\n\\ No newline at end of file\n",
  "inverted_patch": null
}