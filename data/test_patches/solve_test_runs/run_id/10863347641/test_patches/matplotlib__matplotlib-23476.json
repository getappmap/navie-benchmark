{
  "edit_test_file": "lib/matplotlib/tests/test_figure.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_dpi_unpickle_bug.py b/lib/matplotlib/tests/test_dpi_unpickle_bug.py\nnew file mode 100644\nindex 0000000..4119d05\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_dpi_unpickle_bug.py\n@@ -0,0 +1,25 @@\n+import unittest\n+import numpy as np\n+import matplotlib.pyplot as plt\n+import pickle\n+import platform\n+\n+class TestDPIUnpickleBug(unittest.TestCase):\n+    def test_dpi_doubling_on_unpickle(self):\n+        if platform.system() != 'Darwin' or platform.machine() != 'arm64':\n+            self.skipTest(\"This test is specific to M1 MacOS\")\n+\n+        fig = plt.figure()\n+        initial_dpi = fig.dpi\n+\n+        for i in range(22):\n+            with open('sinus.pickle', 'wb') as file:\n+                pickle.dump(fig, file)\n+\n+            with open('sinus.pickle', 'rb') as blob:\n+                fig = pickle.load(blob)\n+\n+            self.assertEqual(fig.dpi, initial_dpi * (2 ** (i + 1)))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": null
}