{
  "edit_test_file": "sklearn/preprocessing/tests/test_discretization.py",
  "test_patch": "diff --git a/sklearn/preprocessing/tests/test_kbinsdiscretizer_unsorted_bin_edges.py b/sklearn/preprocessing/tests/test_kbinsdiscretizer_unsorted_bin_edges.py\nnew file mode 100644\nindex 0000000..06eb305\n--- /dev/null\n+++ b/sklearn/preprocessing/tests/test_kbinsdiscretizer_unsorted_bin_edges.py\n@@ -0,0 +1,10 @@\n+import numpy as np\n+from sklearn.preprocessing import KBinsDiscretizer\n+from sklearn.utils.testing import assert_raises\n+\n+def test_kmeans_unsorted_bin_edges():\n+    X = np.array([0, 0.5, 2, 3, 9, 10]).reshape(-1, 1)\n+\n+    # with 5 bins\n+    est = KBinsDiscretizer(n_bins=5, strategy='kmeans', encode='ordinal')\n+    assert_raises(ValueError, est.fit_transform, X)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/preprocessing/tests/test_kbinsdiscretizer_unsorted_bin_edges_inverted.py b/sklearn/preprocessing/tests/test_kbinsdiscretizer_unsorted_bin_edges_inverted.py\nnew file mode 100644\nindex 0000000..4dcab81\n--- /dev/null\n+++ b/sklearn/preprocessing/tests/test_kbinsdiscretizer_unsorted_bin_edges_inverted.py\n@@ -0,0 +1,17 @@\n+import numpy as np\n+from sklearn.preprocessing import KBinsDiscretizer\n+\n+def test_kmeans_unsorted_bin_edges():\n+    X = np.array([0, 0.5, 2, 3, 9, 10]).reshape(-1, 1)\n+\n+    # with 5 bins\n+    est = KBinsDiscretizer(n_bins=5, strategy='kmeans', encode='ordinal')\n+    try:\n+        est.fit_transform(X)\n+    except ValueError as e:\n+        if \"bins must be monotonically increasing or decreasing\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\")\n+        else:\n+            raise e\n+    else:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}