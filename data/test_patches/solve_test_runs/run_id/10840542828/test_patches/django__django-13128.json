{
  "edit_test_file": "tests/backends/base/test_operations.py",
  "test_patch": "diff --git a/tests/backends/base/test_temporal_subtraction.py b/tests/backends/base/test_temporal_subtraction.py\nnew file mode 100644\nindex 0000000..3a39a2a\n--- /dev/null\n+++ b/tests/backends/base/test_temporal_subtraction.py\n@@ -0,0 +1,16 @@\n+from django.db import models\n+from django.db.models import F, Value, DurationField\n+from django.core.exceptions import FieldError\n+from django.test import TestCase\n+import datetime\n+\n+class TemporalSubtractionTestCase(TestCase):\n+    def test_temporal_subtraction_without_expression_wrapper(self):\n+        class Experiment(models.Model):\n+            start = models.DateTimeField()\n+            end = models.DateTimeField()\n+\n+        with self.assertRaises(FieldError):\n+            Experiment.objects.annotate(\n+                delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField())\n+            ).first()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/backends/base/test_temporal_subtraction_inverted.py b/tests/backends/base/test_temporal_subtraction_inverted.py\nnew file mode 100644\nindex 0000000..7cd25b1\n--- /dev/null\n+++ b/tests/backends/base/test_temporal_subtraction_inverted.py\n@@ -0,0 +1,18 @@\n+from django.db import models\n+from django.db.models import F, Value, DurationField\n+from django.core.exceptions import FieldError\n+from django.test import TestCase\n+import datetime\n+\n+class TemporalSubtractionTestCase(TestCase):\n+    def test_temporal_subtraction_without_expression_wrapper(self):\n+        class Experiment(models.Model):\n+            start = models.DateTimeField()\n+            end = models.DateTimeField()\n+\n+        try:\n+            Experiment.objects.annotate(\n+                delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField())\n+            ).first()\n+        except FieldError:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}