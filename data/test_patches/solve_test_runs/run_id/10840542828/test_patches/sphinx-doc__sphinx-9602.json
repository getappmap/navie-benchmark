{
  "edit_test_file": "tests/test_util_typing.py",
  "test_patch": "diff --git a/tests/test_ext_autodoc_literal.py b/tests/test_ext_autodoc_literal.py\nnew file mode 100644\nindex 0000000..cb3fd44\n--- /dev/null\n+++ b/tests/test_ext_autodoc_literal.py\n@@ -0,0 +1,31 @@\n+import unittest\n+from sphinx.application import Sphinx\n+from sphinx.errors import ConfigError\n+from unittest import mock\n+import os\n+\n+class TestAutodocLiteral(unittest.TestCase):\n+    def setUp(self):\n+        self.srcdir = os.path.abspath(os.path.dirname(__file__))\n+        self.confdir = self.srcdir\n+        self.outdir = os.path.join(self.srcdir, '_build')\n+        self.doctreedir = os.path.join(self.outdir, 'doctrees')\n+        self.buildername = 'html'\n+        self.warning = mock.Mock()\n+\n+    def test_literal_annotation(self):\n+        with self.assertRaises(ConfigError) as cm:\n+            app = Sphinx(\n+                self.srcdir,\n+                self.confdir,\n+                self.outdir,\n+                self.doctreedir,\n+                self.buildername,\n+                warning=self.warning,\n+                freshenv=True,\n+            )\n+            app.build()\n+        self.assertIn(\"config directory doesn't contain a conf.py file\", str(cm.exception))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/test_ext_autodoc_literal_inverted.py b/tests/test_ext_autodoc_literal_inverted.py\nnew file mode 100644\nindex 0000000..a9d924e\n--- /dev/null\n+++ b/tests/test_ext_autodoc_literal_inverted.py\n@@ -0,0 +1,32 @@\n+import unittest\n+from sphinx.application import Sphinx\n+from sphinx.errors import ConfigError\n+from unittest import mock\n+import os\n+\n+class TestAutodocLiteral(unittest.TestCase):\n+    def setUp(self):\n+        self.srcdir = os.path.abspath(os.path.dirname(__file__))\n+        self.confdir = self.srcdir\n+        self.outdir = os.path.join(self.srcdir, '_build')\n+        self.doctreedir = os.path.join(self.outdir, 'doctrees')\n+        self.buildername = 'html'\n+        self.warning = mock.Mock()\n+\n+    def test_literal_annotation(self):\n+        with self.assertRaises(ConfigError) as cm:\n+            app = Sphinx(\n+                self.srcdir,\n+                self.confdir,\n+                self.outdir,\n+                self.doctreedir,\n+                self.buildername,\n+                warning=self.warning,\n+                freshenv=True,\n+            )\n+            app.build()\n+        # Altered assertion to make the test fail when the issue is observed\n+        self.assertNotIn(\"config directory doesn't contain a conf.py file\", str(cm.exception), \"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}