{
  "edit_test_file": "xarray/tests/test_combine.py",
  "test_patch": "diff --git a/xarray/tests/test_combine_by_coords.py b/xarray/tests/test_combine_by_coords.py\nnew file mode 100644\nindex 0000000..38f7637\n--- /dev/null\n+++ b/xarray/tests/test_combine_by_coords.py\n@@ -0,0 +1,29 @@\n+import numpy as np\n+import pytest\n+import xarray as xr\n+\n+def test_combine_by_coords_non_monotonic_identical_coords():\n+    yCoord = ['a', 'c', 'b']  # raises ValueError on combine\n+\n+    ds1 = xr.Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(3, 3))\n+        ),\n+        coords=dict(\n+            x=[1, 2, 3],\n+            y=yCoord\n+        )\n+    )\n+\n+    ds2 = xr.Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(4, 3))\n+        ),\n+        coords=dict(\n+            x=[4, 5, 6, 7],\n+            y=yCoord\n+        )\n+    )\n+\n+    with pytest.raises(ValueError, match=\"Resulting object does not have monotonic global indexes along dimension y\"):\n+        xr.combine_by_coords((ds1, ds2))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/xarray/tests/test_combine_by_coords_inverted.py b/xarray/tests/test_combine_by_coords_inverted.py\nnew file mode 100644\nindex 0000000..e5b8564\n--- /dev/null\n+++ b/xarray/tests/test_combine_by_coords_inverted.py\n@@ -0,0 +1,32 @@\n+import numpy as np\n+import pytest\n+import xarray as xr\n+\n+def test_combine_by_coords_non_monotonic_identical_coords():\n+    yCoord = ['a', 'c', 'b']  # raises ValueError on combine\n+\n+    ds1 = xr.Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(3, 3))\n+        ),\n+        coords=dict(\n+            x=[1, 2, 3],\n+            y=yCoord\n+        )\n+    )\n+\n+    ds2 = xr.Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(4, 3))\n+        ),\n+        coords=dict(\n+            x=[4, 5, 6, 7],\n+            y=yCoord\n+        )\n+    )\n+\n+    try:\n+        xr.combine_by_coords((ds1, ds2))\n+    except ValueError as e:\n+        assert str(e) == \"Resulting object does not have monotonic global indexes along dimension y\"\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}