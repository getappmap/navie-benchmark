{
  "edit_test_file": "xarray/tests/test_concat.py",
  "test_patch": "diff --git a/xarray/tests/test_swap_dims.py b/xarray/tests/test_swap_dims.py\nnew file mode 100644\nindex 0000000..a5d714a\n--- /dev/null\n+++ b/xarray/tests/test_swap_dims.py\n@@ -0,0 +1,25 @@\n+import numpy as np\n+import xarray as xr\n+import pytest\n+\n+def test_swap_dims_modifies_original_object():\n+    nz = 11\n+    ds = xr.Dataset(\n+        data_vars={\n+            \"y\": (\"z\", np.random.rand(nz)),\n+            \"lev\": (\"z\", np.arange(nz) * 10),\n+        },\n+    )\n+\n+    ds2 = (\n+        ds.swap_dims(z=\"lev\")\n+        .rename_dims(lev=\"z\")\n+        .reset_index(\"lev\")\n+        .reset_coords()\n+    )\n+\n+    # Swap dimensions again and check if the original object is modified\n+    ds2_swapped = ds2.swap_dims(z=\"lev\")\n+\n+    # Check if `ds2['lev']` now has dimension 'lev'\n+    assert ds2[\"lev\"].dims == (\"lev\",), \"Original object was modified by swap_dims\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/xarray/tests/test_swap_dims_inverted.py b/xarray/tests/test_swap_dims_inverted.py\nnew file mode 100644\nindex 0000000..b6d178c\n--- /dev/null\n+++ b/xarray/tests/test_swap_dims_inverted.py\n@@ -0,0 +1,26 @@\n+import numpy as np\n+import xarray as xr\n+import pytest\n+\n+def test_swap_dims_modifies_original_object():\n+    nz = 11\n+    ds = xr.Dataset(\n+        data_vars={\n+            \"y\": (\"z\", np.random.rand(nz)),\n+            \"lev\": (\"z\", np.arange(nz) * 10),\n+        },\n+    )\n+\n+    ds2 = (\n+        ds.swap_dims(z=\"lev\")\n+        .rename_dims(lev=\"z\")\n+        .reset_index(\"lev\")\n+        .reset_coords()\n+    )\n+\n+    # Swap dimensions again and check if the original object is modified\n+    ds2_swapped = ds2.swap_dims(z=\"lev\")\n+\n+    # Check if `ds2['lev']` now has dimension 'lev'\n+    # This assertion should now fail if the bug is present\n+    assert ds2[\"lev\"].dims != (\"lev\",), \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}