{
  "edit_test_file": "tests/queries/test_bulk_update.py",
  "test_patch": "diff --git a/tests/queries/test_bulk_update_return_value.py b/tests/queries/test_bulk_update_return_value.py\nnew file mode 100644\nindex 0000000..def066a\n--- /dev/null\n+++ b/tests/queries/test_bulk_update_return_value.py\n@@ -0,0 +1,18 @@\n+import datetime\n+from django.test import TestCase\n+from .models import Note\n+\n+class BulkUpdateReturnValueTests(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.notes = [\n+            Note.objects.create(note=str(i), misc=str(i))\n+            for i in range(10)\n+        ]\n+\n+    def test_bulk_update_return_value(self):\n+        for note in self.notes:\n+            note.note = 'updated-%s' % note.id\n+        result = Note.objects.bulk_update(self.notes, ['note'])\n+        # Assert that the return value is None, which is the current issue\n+        self.assertIsNone(result)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/queries/test_bulk_update_return_value_inverted.py b/tests/queries/test_bulk_update_return_value_inverted.py\nnew file mode 100644\nindex 0000000..71aa81e\n--- /dev/null\n+++ b/tests/queries/test_bulk_update_return_value_inverted.py\n@@ -0,0 +1,19 @@\n+import datetime\n+from django.test import TestCase\n+from .models import Note\n+\n+class BulkUpdateReturnValueTests(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.notes = [\n+            Note.objects.create(note=str(i), misc=str(i))\n+            for i in range(10)\n+        ]\n+\n+    def test_bulk_update_return_value(self):\n+        for note in self.notes:\n+            note.note = 'updated-%s' % note.id\n+        result = Note.objects.bulk_update(self.notes, ['note'])\n+        # Assert that the return value is the number of rows matched\n+        # This should fail if the bug is present, as the current return value is None\n+        self.assertEqual(result, len(self.notes), \"__BUG__HERE__\")\n\\ No newline at end of file\n"
}