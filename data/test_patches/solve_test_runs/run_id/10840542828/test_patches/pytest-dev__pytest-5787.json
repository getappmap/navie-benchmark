{
  "edit_test_file": "testing/code/test_excinfo.py",
  "test_patch": "diff --git a/testing/code/test_exception_serialization.py b/testing/code/test_exception_serialization.py\nnew file mode 100644\nindex 0000000..d2e7347\n--- /dev/null\n+++ b/testing/code/test_exception_serialization.py\n@@ -0,0 +1,31 @@\n+import pytest\n+\n+def test_chained_exception_with_from():\n+    try:\n+        try:\n+            raise ValueError(11)\n+        except Exception as e1:\n+            raise ValueError(12) from e1\n+    except Exception as e2:\n+        with pytest.raises(ValueError) as excinfo:\n+            raise ValueError(13) from e2\n+        assert str(excinfo.value) == \"13\"\n+        assert excinfo.value.__cause__ is not None\n+        assert str(excinfo.value.__cause__) == \"12\"\n+        assert excinfo.value.__cause__.__cause__ is not None\n+        assert str(excinfo.value.__cause__.__cause__) == \"11\"\n+\n+def test_chained_exception_without_from():\n+    try:\n+        try:\n+            raise ValueError(21)\n+        except Exception:\n+            raise ValueError(22)\n+    except Exception:\n+        with pytest.raises(ValueError) as excinfo:\n+            raise ValueError(23)\n+        assert str(excinfo.value) == \"23\"\n+        assert excinfo.value.__context__ is not None\n+        assert str(excinfo.value.__context__) == \"22\"\n+        assert excinfo.value.__context__.__context__ is not None\n+        assert str(excinfo.value.__context__.__context__) == \"21\"\n\\ No newline at end of file\n",
  "inverted_patch": null
}