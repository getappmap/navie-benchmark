{
  "edit_test_file": "tests/auth_tests/test_auth_backends.py",
  "test_patch": "diff --git a/tests/auth_tests/test_model_backend_authenticate.py b/tests/auth_tests/test_model_backend_authenticate.py\nnew file mode 100644\nindex 0000000..ae29190\n--- /dev/null\n+++ b/tests/auth_tests/test_model_backend_authenticate.py\n@@ -0,0 +1,13 @@\n+from django.test import TestCase\n+from django.contrib.auth import get_user_model\n+from django.contrib.auth.backends import ModelBackend\n+from django.db import connection\n+\n+UserModel = get_user_model()\n+\n+class ModelBackendAuthenticateTest(TestCase):\n+    def test_authenticate_with_none_username(self):\n+        backend = ModelBackend()\n+        with self.assertNumQueries(1):\n+            user = backend.authenticate(request=None, username=None, password=None)\n+            self.assertIsNone(user)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/auth_tests/test_model_backend_authenticate_inverted.py b/tests/auth_tests/test_model_backend_authenticate_inverted.py\nnew file mode 100644\nindex 0000000..36ed94d\n--- /dev/null\n+++ b/tests/auth_tests/test_model_backend_authenticate_inverted.py\n@@ -0,0 +1,14 @@\n+from django.test import TestCase\n+from django.contrib.auth import get_user_model\n+from django.contrib.auth.backends import ModelBackend\n+from django.db import connection\n+\n+UserModel = get_user_model()\n+\n+class ModelBackendAuthenticateTest(TestCase):\n+    def test_authenticate_with_none_username(self):\n+        backend = ModelBackend()\n+        with self.assertRaisesMessage(AssertionError, \"__BUG__HERE__\"):\n+            with self.assertNumQueries(0):  # Expecting 0 queries, should fail if a query is made\n+                user = backend.authenticate(request=None, username=None, password=None)\n+                self.assertIsNone(user)\n\\ No newline at end of file\n"
}