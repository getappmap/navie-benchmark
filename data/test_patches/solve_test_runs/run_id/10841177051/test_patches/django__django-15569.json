{
  "edit_test_file": "tests/custom_lookups/tests.py",
  "test_patch": "diff --git a/tests/custom_lookups/test_unregister_lookup_cache.py b/tests/custom_lookups/test_unregister_lookup_cache.py\nnew file mode 100644\nindex 0000000..f8e6c58\n--- /dev/null\n+++ b/tests/custom_lookups/test_unregister_lookup_cache.py\n@@ -0,0 +1,19 @@\n+from django.db import models\n+from django.test import SimpleTestCase\n+from django.db.models.lookups import Lookup\n+\n+class Exactly(Lookup):\n+    lookup_name = 'exactly'\n+\n+    def as_sql(self, compiler, connection):\n+        lhs, lhs_params = self.process_lhs(compiler, connection)\n+        rhs, rhs_params = self.process_rhs(compiler, connection)\n+        params = lhs_params + rhs_params\n+        return '%s = %s' % (lhs, rhs), params\n+\n+class UnregisterLookupClearsCacheTests(SimpleTestCase):\n+    def test_unregister_lookup_clears_cache(self):\n+        models.IntegerField.register_lookup(Exactly)\n+        self.assertIn('exactly', models.IntegerField.get_lookups())\n+        models.IntegerField._unregister_lookup(Exactly)\n+        self.assertIn('exactly', models.IntegerField.get_lookups())  # This should fail if cache is not cleared\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/custom_lookups/test_unregister_lookup_cache_inverted.py b/tests/custom_lookups/test_unregister_lookup_cache_inverted.py\nnew file mode 100644\nindex 0000000..71cde08\n--- /dev/null\n+++ b/tests/custom_lookups/test_unregister_lookup_cache_inverted.py\n@@ -0,0 +1,21 @@\n+from django.db import models\n+from django.test import SimpleTestCase\n+from django.db.models.lookups import Lookup\n+\n+class Exactly(Lookup):\n+    lookup_name = 'exactly'\n+\n+    def as_sql(self, compiler, connection):\n+        lhs, lhs_params = self.process_lhs(compiler, connection)\n+        rhs, rhs_params = self.process_rhs(compiler, connection)\n+        params = lhs_params + rhs_params\n+        return '%s = %s' % (lhs, rhs), params\n+\n+class UnregisterLookupClearsCacheTests(SimpleTestCase):\n+    def test_unregister_lookup_clears_cache(self):\n+        models.IntegerField.register_lookup(Exactly)\n+        self.assertIn('exactly', models.IntegerField.get_lookups())\n+        models.IntegerField._unregister_lookup(Exactly)\n+        # This assertion should fail if the cache is not cleared, indicating the bug\n+        if 'exactly' in models.IntegerField.get_lookups():\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}