{
  "instance_id": "matplotlib__matplotlib-25960",
  "edit_test_file": "lib/matplotlib/tests/test_colorbar.py",
  "code_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex dab2bc4..63c16a6 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -1586,6 +1586,12 @@ default: %(va)s\n                       width_ratios=width_ratios,\n                       height_ratios=height_ratios)\n \n+        # Apply wspace and hspace to adjust the spacing between subfigures\n+        if wspace is not None:\n+            gs.update(wspace=wspace)\n+        if hspace is not None:\n+            gs.update(hspace=hspace)\n+\n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n             for j in range(nrows):\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_subfigures.py b/lib/matplotlib/tests/test_subfigures.py\nnew file mode 100644\nindex 0000000..d5ca573\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_subfigures.py\n@@ -0,0 +1,22 @@\n+import unittest\n+import matplotlib.pyplot as plt\n+\n+class TestSubfigures(unittest.TestCase):\n+    def test_wspace_hspace_ineffectiveness(self):\n+        # Create a figure with subfigures and set wspace and hspace to 0\n+        figs = plt.figure().subfigures(2, 2, wspace=0, hspace=0)\n+        for fig in figs.flat:\n+            fig.subplots().plot([1, 2])\n+        \n+        # Draw the canvas to apply the layout\n+        plt.draw()\n+        \n+        # Check if the wspace and hspace are ineffective\n+        # We expect the subfigures to overlap or be very close due to wspace and hspace being 0\n+        # However, due to the bug, they are not affected\n+        for fig in figs.flat:\n+            self.assertNotAlmostEqual(fig.subplotpars.wspace, 0, delta=0.1)\n+            self.assertNotAlmostEqual(fig.subplotpars.hspace, 0, delta=0.1)\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/lib/matplotlib/tests/test_subfigures_inverted.py b/lib/matplotlib/tests/test_subfigures_inverted.py\nnew file mode 100644\nindex 0000000..9783f6f\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_subfigures_inverted.py\n@@ -0,0 +1,22 @@\n+import unittest\n+import matplotlib.pyplot as plt\n+\n+class TestSubfigures(unittest.TestCase):\n+    def test_wspace_hspace_ineffectiveness(self):\n+        # Create a figure with subfigures and set wspace and hspace to 0\n+        figs = plt.figure().subfigures(2, 2, wspace=0, hspace=0)\n+        for fig in figs.flat:\n+            fig.subplots().plot([1, 2])\n+        \n+        # Draw the canvas to apply the layout\n+        plt.draw()\n+        \n+        # Check if the wspace and hspace are ineffective\n+        # We expect the subfigures to overlap or be very close due to wspace and hspace being 0\n+        # However, due to the bug, they are not affected\n+        for fig in figs.flat:\n+            if fig.subplotpars.wspace != 0 or fig.subplotpars.hspace != 0:\n+                raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "num_sent_chars": 2419376,
  "num_received_chars": 72916,
  "elapsed_time": 649.0068190097809,
  "lint_repair_count": 6,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}