{
  "instance_id": "sphinx-doc__sphinx-7440",
  "edit_test_file": null,
  "code_patch": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex d820cfe..9437e41 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -305,7 +305,7 @@ def make_glossary_term(env: \"BuildEnvironment\", textnodes: Iterable[Node], index\n         term['ids'].append(node_id)\n \n     std = cast(StandardDomain, env.get_domain('std'))\n-    std.note_object('term', termtext.lower(), node_id, location=term)\n+    std.note_object('term', termtext, node_id, location=term)\n \n     # add an index entry too\n     indexnode = addnodes.index()\n@@ -952,8 +952,6 @@ class StandardDomain(Domain):\n         # all others\n         for objtype in self.object_types:\n             key = (objtype, target)\n-            if objtype == 'term':\n-                key = (objtype, ltarget)\n             if key in self.objects:\n                 docname, labelid = self.objects[key]\n                 results.append(('std:' + self.role_for_objtype(objtype),\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1863297,
  "num_received_chars": 22772,
  "elapsed_time": 229.13708686828613,
  "lint_repair_count": 0,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}