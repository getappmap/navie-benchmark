{
  "instance_id": "matplotlib__matplotlib-26291",
  "edit_test_file": null,
  "code_patch": "diff --git a/lib/mpl_toolkits/axes_grid1/inset_locator.py b/lib/mpl_toolkits/axes_grid1/inset_locator.py\nindex 9d35051..bda2367 100644\n--- a/lib/mpl_toolkits/axes_grid1/inset_locator.py\n+++ b/lib/mpl_toolkits/axes_grid1/inset_locator.py\n@@ -284,10 +284,16 @@ def _add_inset_axes(parent_axes, axes_class, axes_kwargs, axes_locator):\n         axes_class = HostAxes\n     if axes_kwargs is None:\n         axes_kwargs = {}\n+    \n+    # Ensure the figure and canvas are initialized\n+    fig = parent_axes.figure\n+    if fig.canvas is None:\n+        raise RuntimeError(\"Figure canvas is not initialized. Ensure the figure is properly set up before adding inset axes.\")\n+    \n     inset_axes = axes_class(\n-        parent_axes.figure, parent_axes.get_position(),\n+        fig, parent_axes.get_position(),\n         **{\"navigate\": False, **axes_kwargs, \"axes_locator\": axes_locator})\n-    return parent_axes.figure.add_axes(inset_axes)\n+    return fig.add_axes(inset_axes)\n \n \n @_docstring.dedent_interpd\n@@ -298,16 +304,17 @@ def inset_axes(parent_axes, width, height, loc='upper right',\n     \"\"\"\n     Create an inset axes with a given width and height.\n \n-    Both sizes used can be specified either in inches or percentage.\n-    For example,::\n-\n-        inset_axes(parent_axes, width='40%%', height='30%%', loc='lower left')\n+    Ensure the renderer is available before proceeding.\n+    \"\"\"\n+    if parent_axes.figure._get_renderer() is None:\n+        raise RuntimeError(\"Renderer is not available. Ensure the figure is drawn at least once before adding inset axes.\")\n \n-    creates in inset axes in the lower left corner of *parent_axes* which spans\n-    over 30%% in height and 40%% in width of the *parent_axes*. Since the usage\n-    of `.inset_axes` may become slightly tricky when exceeding such standard\n-    cases, it is recommended to read :doc:`the examples\n-    </gallery/axes_grid1/inset_locator_demo>`.\n+    # Proceed with inset axes creation\n+    return _add_inset_axes(\n+        parent_axes, axes_class, axes_kwargs,\n+        AnchoredSizeLocator(\n+            bbox_to_anchor, width, height, loc=loc,\n+            bbox_transform=bbox_transform, borderpad=borderpad))\n \n     Notes\n     -----\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 709376,
  "num_received_chars": 7057,
  "elapsed_time": 110.11195039749146,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 0,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}