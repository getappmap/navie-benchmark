{
  "instance_id": "pytest-dev__pytest-7490",
  "edit_test_file": "testing/example_scripts/fixtures/test_getfixturevalue_dynamic.py",
  "code_patch": "diff --git a/doc/en/example/xfail_demo.py b/doc/en/example/xfail_demo.py\nindex 01e6da1..7089ad0 100644\n--- a/doc/en/example/xfail_demo.py\n+++ b/doc/en/example/xfail_demo.py\n@@ -28,8 +28,10 @@ def test_hello5():\n     assert 0\n \n \n-def test_hello6():\n-    pytest.xfail(\"reason\")\n+def test_hello6(request):\n+    request.node.add_marker(pytest.mark.xfail(reason=\"reason\"))\n+    # Ensure the test is marked as xfail dynamically\n+    assert 0  # This should be treated as an expected failure\n \n \n @xfail(raises=IndexError)\n",
  "test_patch": "diff --git a/testing/example_scripts/fixtures/test_xfail_marker_handling.py b/testing/example_scripts/fixtures/test_xfail_marker_handling.py\nnew file mode 100644\nindex 0000000..0f64a01\n--- /dev/null\n+++ b/testing/example_scripts/fixtures/test_xfail_marker_handling.py\n@@ -0,0 +1,7 @@\n+import pytest\n+\n+def test_dynamic_xfail_marker(request):\n+    mark = pytest.mark.xfail(reason=\"xfail\")\n+    request.node.add_marker(mark)\n+    with pytest.raises(AssertionError):\n+        assert 0\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/testing/example_scripts/fixtures/test_xfail_marker_handling_inverted.py b/testing/example_scripts/fixtures/test_xfail_marker_handling_inverted.py\nnew file mode 100644\nindex 0000000..e8d2c83\n--- /dev/null\n+++ b/testing/example_scripts/fixtures/test_xfail_marker_handling_inverted.py\n@@ -0,0 +1,7 @@\n+import pytest\n+\n+def test_dynamic_xfail_marker(request):\n+    mark = pytest.mark.xfail(reason=\"xfail\")\n+    request.node.add_marker(mark)\n+    # Alter the test to fail with a specific error message when the bug is observed\n+    assert 0, \"__BUG__HERE__\"\n\\ No newline at end of file\n",
  "num_sent_chars": 3177447,
  "num_received_chars": 34693,
  "elapsed_time": 890.8893246650696,
  "lint_repair_count": 2,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}