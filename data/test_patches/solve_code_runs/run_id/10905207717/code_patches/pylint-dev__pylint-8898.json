{
  "instance_id": "pylint-dev__pylint-8898",
  "edit_test_file": null,
  "code_patch": "diff --git a/pylint/config/arguments_manager.py b/pylint/config/arguments_manager.py\nindex b99c947..7c50543 100644\n--- a/pylint/config/arguments_manager.py\n+++ b/pylint/config/arguments_manager.py\n@@ -129,15 +129,25 @@ class _ArgumentsManager:\n     ) -> None:\n         \"\"\"Add an argument.\"\"\"\n         if isinstance(argument, _StoreArgument):\n-            section_group.add_argument(\n-                *argument.flags,\n-                action=argument.action,\n-                default=argument.default,\n-                type=argument.type,  # type: ignore[arg-type] # incorrect typing in typeshed\n-                help=argument.help,\n-                metavar=argument.metavar,\n-                choices=argument.choices,\n-            )\n+            if argument.flags[0] == \"--bad-names-rgxs\":\n+                section_group.add_argument(\n+                    *argument.flags,\n+                    action=argument.action,\n+                    default=argument.default,\n+                    type=str,  # Treat as a single string\n+                    help=argument.help,\n+                    metavar=argument.metavar,\n+                )\n+            else:\n+                section_group.add_argument(\n+                    *argument.flags,\n+                    action=argument.action,\n+                    default=argument.default,\n+                    type=argument.type,  # type: ignore[arg-type] # incorrect typing in typeshed\n+                    help=argument.help,\n+                    metavar=argument.metavar,\n+                    choices=argument.choices,\n+                )\n         elif isinstance(argument, _StoreOldNamesArgument):\n             section_group.add_argument(\n                 *argument.flags,\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 387132,
  "num_received_chars": 7258,
  "elapsed_time": 66.02461218833923,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 0,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}