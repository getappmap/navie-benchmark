{
  "instance_id": "django__django-10554",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a791908..12da3ef 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -344,9 +344,7 @@ class SQLCompiler:\n             resolved = expr.resolve_expression(self.query, allow_joins=True, reuse=None)\n             if self.query.combinator:\n                 src = resolved.get_source_expressions()[0]\n-                # Relabel order by columns to raw numbers if this is a combined\n-                # query; necessary since the columns can't be referenced by the\n-                # fully qualified name and the simple column names may collide.\n+                # Ensure the order by columns are part of the select list for combined queries.\n                 for idx, (sel_expr, _, col_alias) in enumerate(self.select):\n                     if is_ref and col_alias == src.refs:\n                         src = src.source\n@@ -356,7 +354,9 @@ class SQLCompiler:\n                         resolved.set_source_expressions([RawSQL('%d' % (idx + 1), ())])\n                         break\n                 else:\n-                    raise DatabaseError('ORDER BY term does not match any column in the result set.')\n+                    # Add the missing order by field to the select list if not present.\n+                    self.select.append((src, None))\n+                    resolved.set_source_expressions([RawSQL('%d' % (len(self.select)), ())])\n             sql, params = self.compile(resolved)\n             # Don't add the same column twice, but the order direction is\n             # not taken into account so we strip it. When this entire method\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 738731,
  "num_received_chars": 7997,
  "elapsed_time": 106.90432024002075,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 0,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}