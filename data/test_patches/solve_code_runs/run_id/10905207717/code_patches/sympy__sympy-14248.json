{
  "instance_id": "sympy__sympy-14248",
  "edit_test_file": "sympy/matrices/expressions/tests/test_matexpr.py",
  "code_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 07dd235..2e51f69 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -97,11 +97,15 @@ def __radd__(self, other):\n     @_sympifyit('other', NotImplemented)\n     @call_highest_priority('__rsub__')\n     def __sub__(self, other):\n+        if isinstance(other, MatrixExpr):\n+            return MatAdd(self, MatMul(S.NegativeOne, other)).doit()\n         return MatAdd(self, -other).doit()\n \n     @_sympifyit('other', NotImplemented)\n     @call_highest_priority('__sub__')\n     def __rsub__(self, other):\n+        if isinstance(other, MatrixExpr):\n+            return MatAdd(other, MatMul(S.NegativeOne, self)).doit()\n         return MatAdd(other, -self).doit()\n \n     @_sympifyit('other', NotImplemented)\n",
  "test_patch": "diff --git a/sympy/matrices/expressions/tests/test_difference.py b/sympy/matrices/expressions/tests/test_difference.py\nnew file mode 100644\nindex 0000000..aceefdd\n--- /dev/null\n+++ b/sympy/matrices/expressions/tests/test_difference.py\n@@ -0,0 +1,16 @@\n+from sympy import MatrixSymbol, latex, pprint\n+\n+def test_matrix_symbol_difference_printing():\n+    A = MatrixSymbol('A', 2, 2)\n+    B = MatrixSymbol('B', 2, 2)\n+    expr = A - A*B - B\n+\n+    # Check the string representation\n+    assert str(expr) == \"(-1)*B + (-1)*A*B + A\"\n+\n+    # Check the pretty print representation\n+    from sympy import pretty\n+    assert pretty(expr) == \"-B + -A\u22c5B + A\"\n+\n+    # Check the LaTeX representation\n+    assert latex(expr) == '-1 B + -1 A B + A'\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/matrices/expressions/tests/test_difference_inverted.py b/sympy/matrices/expressions/tests/test_difference_inverted.py\nnew file mode 100644\nindex 0000000..ef00d12\n--- /dev/null\n+++ b/sympy/matrices/expressions/tests/test_difference_inverted.py\n@@ -0,0 +1,16 @@\n+from sympy import MatrixSymbol, latex, pprint\n+\n+def test_matrix_symbol_difference_printing():\n+    A = MatrixSymbol('A', 2, 2)\n+    B = MatrixSymbol('B', 2, 2)\n+    expr = A - A*B - B\n+\n+    # Check the string representation\n+    assert str(expr) == \"A - A*B - B\", \"__BUG__HERE__\"\n+\n+    # Check the pretty print representation\n+    from sympy import pretty\n+    assert pretty(expr) == \"A - A\u22c5B - B\", \"__BUG__HERE__\"\n+\n+    # Check the LaTeX representation\n+    assert latex(expr) == 'A - A B - B', \"__BUG__HERE__\"\n\\ No newline at end of file\n",
  "num_sent_chars": 6435174,
  "num_received_chars": 75868,
  "elapsed_time": 1435.8337304592133,
  "lint_repair_count": 14,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}