{
  "instance_id": "sympy__sympy-15349",
  "edit_test_file": "sympy/algebras/tests/test_quaternion.py",
  "code_patch": "diff --git a/sympy/algebras/quaternion.py b/sympy/algebras/quaternion.py\nindex b84e7cb..088a7af 100644\n--- a/sympy/algebras/quaternion.py\n+++ b/sympy/algebras/quaternion.py\n@@ -499,9 +499,9 @@ def to_rotation_matrix(self, v=None):\n         >>> q = Quaternion(cos(x/2), 0, 0, sin(x/2))\n         >>> trigsimp(q.to_rotation_matrix())\n         Matrix([\n-        [cos(x), -sin(x), 0],\n-        [sin(x),  cos(x), 0],\n-        [     0,       0, 1]])\n+        [1, 0, 0],\n+        [0, cos(x), -sin(x)],\n+        [0, sin(x), cos(x)]])\n \n         Generates a 4x4 transformation matrix (used for rotation about a point\n         other than the origin) if the point(v) is passed as an argument.\n@@ -529,7 +529,7 @@ def to_rotation_matrix(self, v=None):\n \n         m10 = 2*s*(q.b*q.c + q.d*q.a)\n         m11 = 1 - 2*s*(q.b**2 + q.d**2)\n-        m12 = 2*s*(q.c*q.d + q.b*q.a)\n+        m12 = 2*s*(q.c*q.d - q.b*q.a)\n \n         m20 = 2*s*(q.b*q.d - q.c*q.a)\n         m21 = 2*s*(q.c*q.d + q.b*q.a)\n",
  "test_patch": "diff --git a/sympy/algebras/tests/test_quaternion_rotation_matrix_error.py b/sympy/algebras/tests/test_quaternion_rotation_matrix_error.py\nnew file mode 100644\nindex 0000000..1e6b776\n--- /dev/null\n+++ b/sympy/algebras/tests/test_quaternion_rotation_matrix_error.py\n@@ -0,0 +1,13 @@\n+from sympy.algebras.quaternion import Quaternion\n+from sympy import symbols, cos, sin, trigsimp, Matrix\n+\n+def test_quaternion_to_rotation_matrix_error():\n+    x = symbols('x')\n+    q = Quaternion(cos(x/2), sin(x/2), 0, 0)\n+    result = trigsimp(q.to_rotation_matrix())\n+    expected = Matrix([\n+        [1,      0,      0],\n+        [0, cos(x), sin(x)],\n+        [0, sin(x), cos(x)]\n+    ])\n+    assert result == expected, f\"Expected {expected}, but got {result}\"\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/algebras/tests/test_quaternion_rotation_matrix_error_inverted.py b/sympy/algebras/tests/test_quaternion_rotation_matrix_error_inverted.py\nnew file mode 100644\nindex 0000000..873f632\n--- /dev/null\n+++ b/sympy/algebras/tests/test_quaternion_rotation_matrix_error_inverted.py\n@@ -0,0 +1,13 @@\n+from sympy.algebras.quaternion import Quaternion\n+from sympy import symbols, cos, sin, trigsimp, Matrix\n+\n+def test_quaternion_to_rotation_matrix_error():\n+    x = symbols('x')\n+    q = Quaternion(cos(x/2), sin(x/2), 0, 0)\n+    result = trigsimp(q.to_rotation_matrix())\n+    expected = Matrix([\n+        [1,      0,      0],\n+        [0, cos(x), sin(x)],\n+        [0, -sin(x), cos(x)]  # Corrected expected matrix with negative sin(x)\n+    ])\n+    assert result == expected, f\"__BUG__HERE__: Expected {expected}, but got {result}\"\n\\ No newline at end of file\n",
  "num_sent_chars": 3124344,
  "num_received_chars": 37924,
  "elapsed_time": 1154.07688164711,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}