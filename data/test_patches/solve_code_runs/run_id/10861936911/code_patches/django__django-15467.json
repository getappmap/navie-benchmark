{
  "instance_id": "django__django-15467",
  "edit_test_file": "tests/modeladmin/tests.py",
  "code_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 64be087..6219590 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -269,7 +269,8 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n                         \"class\": get_ul_class(self.radio_fields[db_field.name]),\n                     }\n                 )\n-                kwargs[\"empty_label\"] = _(\"None\") if db_field.blank else None\n+                if \"empty_label\" not in kwargs:\n+                    kwargs[\"empty_label\"] = _(\"None\") if db_field.blank else None\n \n         if \"queryset\" not in kwargs:\n             queryset = self.get_field_queryset(db, db_field, request)\n",
  "test_patch": "diff --git a/tests/modeladmin/test_model_admin_empty_label.py b/tests/modeladmin/test_model_admin_empty_label.py\nnew file mode 100644\nindex 0000000..f5c8d10\n--- /dev/null\n+++ b/tests/modeladmin/test_model_admin_empty_label.py\n@@ -0,0 +1,26 @@\n+from django.contrib import admin\n+from django.test import TestCase\n+from django.db import models\n+from django.forms import ModelForm\n+\n+class MyModel(models.Model):\n+    myfield = models.ForeignKey('self', null=True, blank=True, on_delete=models.CASCADE)\n+\n+class MyModelAdmin(admin.ModelAdmin):\n+    radio_fields = {'myfield': admin.VERTICAL}\n+\n+    def formfield_for_foreignkey(self, db_field, request, **kwargs):\n+        if db_field.name == 'myfield':\n+            kwargs['empty_label'] = \"I WANT TO SET MY OWN EMPTY LABEL\"\n+        return super().formfield_for_foreignkey(db_field, request, **kwargs)\n+\n+class MyModelForm(ModelForm):\n+    class Meta:\n+        model = MyModel\n+        fields = ['myfield']\n+\n+class ModelAdminEmptyLabelTest(TestCase):\n+    def test_empty_label_override(self):\n+        admin_instance = MyModelAdmin(MyModel, admin.site)\n+        formfield = admin_instance.formfield_for_foreignkey(MyModel._meta.get_field('myfield'), None)\n+        self.assertEqual(formfield.empty_label, \"None\")  # This should fail, reproducing the issue\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/modeladmin/test_model_admin_empty_label_inverted.py b/tests/modeladmin/test_model_admin_empty_label_inverted.py\nnew file mode 100644\nindex 0000000..b9398ae\n--- /dev/null\n+++ b/tests/modeladmin/test_model_admin_empty_label_inverted.py\n@@ -0,0 +1,26 @@\n+from django.contrib import admin\n+from django.test import TestCase\n+from django.db import models\n+from django.forms import ModelForm\n+\n+class MyModel(models.Model):\n+    myfield = models.ForeignKey('self', null=True, blank=True, on_delete=models.CASCADE)\n+\n+class MyModelAdmin(admin.ModelAdmin):\n+    radio_fields = {'myfield': admin.VERTICAL}\n+\n+    def formfield_for_foreignkey(self, db_field, request, **kwargs):\n+        if db_field.name == 'myfield':\n+            kwargs['empty_label'] = \"I WANT TO SET MY OWN EMPTY LABEL\"\n+        return super().formfield_for_foreignkey(db_field, request, **kwargs)\n+\n+class MyModelForm(ModelForm):\n+    class Meta:\n+        model = MyModel\n+        fields = ['myfield']\n+\n+class ModelAdminEmptyLabelTest(TestCase):\n+    def test_empty_label_override(self):\n+        admin_instance = MyModelAdmin(MyModel, admin.site)\n+        formfield = admin_instance.formfield_for_foreignkey(MyModel._meta.get_field('myfield'), None)\n+        self.assertEqual(formfield.empty_label, \"I WANT TO SET MY OWN EMPTY LABEL\", \"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 183518,
  "num_received_chars": 5229,
  "elapsed_time": 54.89573264122009,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": "PASSED",
  "appmap_data_file_count": 1,
  "appmap_data_context_size": 16327
}