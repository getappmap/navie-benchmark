{
  "instance_id": "django__django-15741",
  "edit_test_file": "tests/forms_tests/tests/test_input_formats.py",
  "code_patch": "diff --git a/django/utils/formats.py b/django/utils/formats.py\nindex 3f38322..cbdff9f 100644\n--- a/django/utils/formats.py\n+++ b/django/utils/formats.py\n@@ -113,6 +113,9 @@ def get_format(format_type, lang=None, use_l10n=None):\n             use_l10n = settings.USE_L10N\n     if use_l10n and lang is None:\n         lang = get_language()\n+    # Convert lazy objects to strings\n+    format_type = str(format_type)\n+    lang = str(lang) if lang is not None else lang\n     cache_key = (format_type, lang)\n     try:\n         return _format_cache[cache_key]\n",
  "test_patch": "diff --git a/tests/forms_tests/tests/test_format_lazy.py b/tests/forms_tests/tests/test_format_lazy.py\nnew file mode 100644\nindex 0000000..a7e4149\n--- /dev/null\n+++ b/tests/forms_tests/tests/test_format_lazy.py\n@@ -0,0 +1,13 @@\n+import unittest\n+from django.utils.formats import get_format\n+from django.utils.translation import gettext_lazy as _\n+\n+class TestFormatLazy(unittest.TestCase):\n+    def test_get_format_with_lazy_string(self):\n+        # This test reproduces the issue where get_format fails with a lazy string.\n+        lazy_format = _('Y-m-d')\n+        with self.assertRaises(TypeError):\n+            get_format(lazy_format)\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/forms_tests/tests/test_format_lazy_inverted.py b/tests/forms_tests/tests/test_format_lazy_inverted.py\nnew file mode 100644\nindex 0000000..107da5a\n--- /dev/null\n+++ b/tests/forms_tests/tests/test_format_lazy_inverted.py\n@@ -0,0 +1,15 @@\n+import unittest\n+from django.utils.formats import get_format\n+from django.utils.translation import gettext_lazy as _\n+\n+class TestFormatLazy(unittest.TestCase):\n+    def test_get_format_with_lazy_string(self):\n+        # This test should fail when the issue is observed.\n+        lazy_format = _('Y-m-d')\n+        try:\n+            get_format(lazy_format)\n+        except TypeError:\n+            self.fail(\"__BUG__HERE__\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n",
  "num_sent_chars": 198675,
  "num_received_chars": 24433,
  "elapsed_time": 132.25717091560364,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 2,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": "PASSED",
  "appmap_data_file_count": 1,
  "appmap_data_context_size": 8388
}