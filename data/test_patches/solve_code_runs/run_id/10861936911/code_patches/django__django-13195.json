{
  "instance_id": "django__django-13195",
  "edit_test_file": "tests/responses/test_cookie.py",
  "code_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex e00bcac..f1b8188 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -214,9 +214,15 @@ class HttpResponseBase:\n         # Most browsers ignore the Set-Cookie header if the cookie name starts\n         # with __Host- or __Secure- and the cookie doesn't use the secure flag.\n         secure = key.startswith(('__Secure-', '__Host-'))\n+        samesite = None\n+\n+        # Check if the cookie exists and preserve its SameSite attribute\n+        if key in self.cookies:\n+            samesite = self.cookies[key].get('samesite', None)\n+\n         self.set_cookie(\n             key, max_age=0, path=path, domain=domain, secure=secure,\n-            expires='Thu, 01 Jan 1970 00:00:00 GMT',\n+            expires='Thu, 01 Jan 1970 00:00:00 GMT', samesite=samesite\n         )\n \n     # Common methods used by subclasses\n",
  "test_patch": "diff --git a/tests/responses/test_httpresponse_delete_cookie.py b/tests/responses/test_httpresponse_delete_cookie.py\nnew file mode 100644\nindex 0000000..a3079a6\n--- /dev/null\n+++ b/tests/responses/test_httpresponse_delete_cookie.py\n@@ -0,0 +1,17 @@\n+import unittest\n+from django.http import HttpResponse\n+\n+class HttpResponseDeleteCookieTests(unittest.TestCase):\n+\n+    def test_delete_cookie_preserves_samesite(self):\n+        response = HttpResponse()\n+        # Set a cookie with SameSite attribute\n+        response.set_cookie('messages', 'value', samesite='Lax')\n+        # Delete the cookie\n+        response.delete_cookie('messages')\n+        # Check if the SameSite attribute is still present after deletion\n+        self.assertIn('samesite', response.cookies['messages'])\n+        self.assertEqual(response.cookies['messages']['samesite'], 'Lax')\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/responses/test_httpresponse_delete_cookie_inverted.py b/tests/responses/test_httpresponse_delete_cookie_inverted.py\nnew file mode 100644\nindex 0000000..fbc2404\n--- /dev/null\n+++ b/tests/responses/test_httpresponse_delete_cookie_inverted.py\n@@ -0,0 +1,19 @@\n+import unittest\n+from django.http import HttpResponse\n+\n+class HttpResponseDeleteCookieTests(unittest.TestCase):\n+\n+    def test_delete_cookie_preserves_samesite(self):\n+        response = HttpResponse()\n+        # Set a cookie with SameSite attribute\n+        response.set_cookie('messages', 'value', samesite='Lax')\n+        # Delete the cookie\n+        response.delete_cookie('messages')\n+        # Check if the SameSite attribute is still present after deletion\n+        # This assertion should fail if the bug is present\n+        if 'samesite' in response.cookies['messages']:\n+            self.fail(\"__BUG__HERE__\")\n+        self.assertNotIn('samesite', response.cookies['messages'])\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "num_sent_chars": 1185611,
  "num_received_chars": 50953,
  "elapsed_time": 443.930992603302,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 18,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}