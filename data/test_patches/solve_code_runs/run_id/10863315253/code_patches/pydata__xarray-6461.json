{
  "instance_id": "pydata__xarray-6461",
  "edit_test_file": "xarray/tests/test_duck_array_ops.py",
  "code_patch": "diff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 7676d8e..ce94f43 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1829,7 +1829,12 @@ def where(cond, x, y, keep_attrs=None):\n     if keep_attrs is True:\n         # keep the attributes of x, the second parameter, by default to\n         # be consistent with the `where` method of `DataArray` and `Dataset`\n-        keep_attrs = lambda attrs, context: attrs[1]\n+        def safe_keep_attrs(attrs, context):\n+            if isinstance(y, (int, float, complex, str, bool)):\n+                return attrs[0]  # Use attributes from x if y is a scalar\n+            return attrs[1]\n+\n+        keep_attrs = safe_keep_attrs\n \n     # alignment for three arguments is complicated, so don't support it yet\n     return apply_ufunc(\n",
  "test_patch": "diff --git a/xarray/tests/test_where.py b/xarray/tests/test_where.py\nnew file mode 100644\nindex 0000000..e2a7d60\n--- /dev/null\n+++ b/xarray/tests/test_where.py\n@@ -0,0 +1,6 @@\n+import pytest\n+import xarray as xr\n+\n+def test_where_scalar_with_keep_attrs():\n+    with pytest.raises(IndexError, match=\"list index out of range\"):\n+        xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=True)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/xarray/tests/test_where_inverted.py b/xarray/tests/test_where_inverted.py\nnew file mode 100644\nindex 0000000..0bab96c\n--- /dev/null\n+++ b/xarray/tests/test_where_inverted.py\n@@ -0,0 +1,9 @@\n+import pytest\n+import xarray as xr\n+\n+def test_where_scalar_with_keep_attrs():\n+    # The test should now fail when the bug is observed\n+    try:\n+        xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=True)\n+    except IndexError:\n+        pytest.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 233099,
  "num_received_chars": 5627,
  "elapsed_time": 85.06572961807251,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": "PASSED",
  "appmap_data_file_count": 1,
  "appmap_data_context_size": 90554
}