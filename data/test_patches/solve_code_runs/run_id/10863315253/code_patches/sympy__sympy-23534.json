{
  "instance_id": "sympy__sympy-23534",
  "edit_test_file": "sympy/printing/tests/test_repr.py",
  "code_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex f4a555c..7cab1ae 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -790,8 +790,11 @@ def literal(s):\n \n         return tuple(result)\n     else:\n+        # Flatten any extra layers of parentheses\n+        if isinstance(names, (list, tuple)) and len(names) == 1:\n+            names = names[0]\n         for name in names:\n-            result.append(symbols(name, **args))\n+            result.append(symbols(name, cls=cls, **args))\n \n         return type(names)(result)\n \n",
  "test_patch": "diff --git a/sympy/printing/tests/test_function_symbols.py b/sympy/printing/tests/test_function_symbols.py\nnew file mode 100644\nindex 0000000..4da92c0\n--- /dev/null\n+++ b/sympy/printing/tests/test_function_symbols.py\n@@ -0,0 +1,6 @@\n+import sympy as smp\n+from sympy.testing.pytest import raises\n+\n+def test_symbols_with_extra_parentheses():\n+    q, u = smp.symbols(('q:2', 'u:2'), cls=smp.Function)\n+    assert isinstance(q[0], smp.Symbol), \"Expected q[0] to be of type Symbol, but got UndefinedFunction\"\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/printing/tests/test_function_symbols_inverted.py b/sympy/printing/tests/test_function_symbols_inverted.py\nnew file mode 100644\nindex 0000000..3eff74b\n--- /dev/null\n+++ b/sympy/printing/tests/test_function_symbols_inverted.py\n@@ -0,0 +1,6 @@\n+import sympy as smp\n+from sympy.testing.pytest import raises\n+\n+def test_symbols_with_extra_parentheses():\n+    q, u = smp.symbols(('q:2', 'u:2'), cls=smp.Function)\n+    assert not isinstance(q[0], smp.Symbol), \"__BUG__HERE__\"\n\\ No newline at end of file\n",
  "num_sent_chars": 766873,
  "num_received_chars": 60594,
  "elapsed_time": 352.57005643844604,
  "lint_repair_count": 1,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}