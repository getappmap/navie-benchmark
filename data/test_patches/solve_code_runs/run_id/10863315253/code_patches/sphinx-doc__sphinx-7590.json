{
  "instance_id": "sphinx-doc__sphinx-7590",
  "edit_test_file": "tests/test_util_docutils.py",
  "code_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex fe52d88..f916a31 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -1574,6 +1574,8 @@ class ASTOperatorBuildIn(ASTOperator):\n     def _stringify(self, transform: StringifyTransform) -> str:\n         if self.op in ('new', 'new[]', 'delete', 'delete[]') or self.op[0] in \"abcnox\":\n             return 'operator ' + self.op\n+        elif self.op.startswith('\"\"'):\n+            return 'operator' + self.op\n         else:\n             return 'operator' + self.op\n \n",
  "test_patch": "diff --git a/tests/test_domain_cpp_udl.py b/tests/test_domain_cpp_udl.py\nnew file mode 100644\nindex 0000000..0bcfdb0\n--- /dev/null\n+++ b/tests/test_domain_cpp_udl.py\n@@ -0,0 +1,27 @@\n+import os\n+import unittest\n+from io import StringIO\n+from sphinx.application import Sphinx\n+from sphinx.errors import ApplicationError\n+\n+class TestCppUserDefinedLiterals(unittest.TestCase):\n+    def setUp(self):\n+        self.srcdir = os.path.abspath(os.path.dirname(__file__))\n+        self.outdir = os.path.join(self.srcdir, '_build')\n+        self.doctreedir = os.path.join(self.srcdir, '_doctrees')\n+        self.confdir = self.srcdir\n+\n+    def test_cpp_user_defined_literals(self):\n+        with self.assertRaises(ApplicationError) as context:\n+            Sphinx(\n+                self.srcdir,\n+                self.confdir,\n+                self.outdir,\n+                self.doctreedir,\n+                'html',\n+                warning=StringIO()\n+            )\n+        self.assertIn(\"config directory doesn't contain a conf.py file\", str(context.exception))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/test_domain_cpp_udl_inverted.py b/tests/test_domain_cpp_udl_inverted.py\nnew file mode 100644\nindex 0000000..14fad55\n--- /dev/null\n+++ b/tests/test_domain_cpp_udl_inverted.py\n@@ -0,0 +1,28 @@\n+import os\n+import unittest\n+from io import StringIO\n+from sphinx.application import Sphinx\n+from sphinx.errors import ApplicationError\n+\n+class TestCppUserDefinedLiterals(unittest.TestCase):\n+    def setUp(self):\n+        self.srcdir = os.path.abspath(os.path.dirname(__file__))\n+        self.outdir = os.path.join(self.srcdir, '_build')\n+        self.doctreedir = os.path.join(self.srcdir, '_doctrees')\n+        self.confdir = self.srcdir\n+\n+    def test_cpp_user_defined_literals(self):\n+        with self.assertRaises(ApplicationError) as context:\n+            Sphinx(\n+                self.srcdir,\n+                self.confdir,\n+                self.outdir,\n+                self.doctreedir,\n+                'html',\n+                warning=StringIO()\n+            )\n+        # Altered the test to fail when the issue is observed\n+        self.assertNotIn(\"config directory doesn't contain a conf.py file\", str(context.exception), \"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "num_sent_chars": 1013490,
  "num_received_chars": 21759,
  "elapsed_time": 305.5167143344879,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 3,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": "PASSED",
  "appmap_data_file_count": 1,
  "appmap_data_context_size": 829
}