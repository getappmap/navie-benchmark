{
  "instance_id": "sympy__sympy-16450",
  "edit_test_file": "sympy/core/tests/test_assumptions.py",
  "code_patch": "diff --git a/sympy/assumptions/handlers/calculus.py b/sympy/assumptions/handlers/calculus.py\nindex aa0d00a..2833821 100644\n--- a/sympy/assumptions/handlers/calculus.py\n+++ b/sympy/assumptions/handlers/calculus.py\n@@ -50,6 +50,13 @@ def Symbol(expr, assumptions):\n             return expr.is_finite\n         if Q.finite(expr) in conjuncts(assumptions):\n             return True\n+        # Preserve additional assumptions\n+        preserved_assumptions = [\n+            Q.integer, Q.rational, Q.prime, Q.even, Q.odd\n+        ]\n+        for assumption in preserved_assumptions:\n+            if assumption(expr) in conjuncts(assumptions):\n+                return True\n         return None\n \n     @staticmethod\n",
  "test_patch": "diff --git a/sympy/core/tests/test_posify.py b/sympy/core/tests/test_posify.py\nnew file mode 100644\nindex 0000000..8c43f8d\n--- /dev/null\n+++ b/sympy/core/tests/test_posify.py\n@@ -0,0 +1,8 @@\n+from sympy import Symbol, posify\n+\n+def test_posify_ignores_is_finite_assumption():\n+    x = Symbol('x', finite=True)\n+    assert x.is_finite is True\n+\n+    xp, _ = posify(x)\n+    assert xp.is_finite is None\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/core/tests/test_posify_inverted.py b/sympy/core/tests/test_posify_inverted.py\nnew file mode 100644\nindex 0000000..0d80448\n--- /dev/null\n+++ b/sympy/core/tests/test_posify_inverted.py\n@@ -0,0 +1,9 @@\n+from sympy import Symbol, posify\n+\n+def test_posify_ignores_is_finite_assumption():\n+    x = Symbol('x', finite=True)\n+    assert x.is_finite is True\n+\n+    xp, _ = posify(x)\n+    if xp.is_finite is None:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1484962,
  "num_received_chars": 141698,
  "elapsed_time": 649.4723494052887,
  "lint_repair_count": 14,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}