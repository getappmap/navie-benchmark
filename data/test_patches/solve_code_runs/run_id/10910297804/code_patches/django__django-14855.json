{
  "instance_id": "django__django-14855",
  "edit_test_file": "tests/admin_custom_urls/tests.py",
  "code_patch": "diff --git a/django/contrib/admin/helpers.py b/django/contrib/admin/helpers.py\nindex dd154f7..ba8c346 100644\n--- a/django/contrib/admin/helpers.py\n+++ b/django/contrib/admin/helpers.py\n@@ -209,7 +209,11 @@ class AdminReadonlyField:\n             remote_field.model._meta.model_name,\n         )\n         try:\n-            url = reverse(url_name, args=[quote(remote_obj.pk)])\n+            url = reverse(\n+                url_name,\n+                args=[quote(remote_obj.pk)],\n+                current_app=self.model_admin.admin_site.name\n+            )\n             return format_html('<a href=\"{}\">{}</a>', url, remote_obj)\n         except NoReverseMatch:\n             return str(remote_obj)\n",
  "test_patch": "diff --git a/tests/admin_custom_urls/test_custom_admin_readonly_field_url.py b/tests/admin_custom_urls/test_custom_admin_readonly_field_url.py\nnew file mode 100644\nindex 0000000..3cb6488\n--- /dev/null\n+++ b/tests/admin_custom_urls/test_custom_admin_readonly_field_url.py\n@@ -0,0 +1,33 @@\n+from django.test import TestCase, override_settings\n+from django.urls import reverse\n+from django.contrib.auth.models import User\n+from django.contrib import admin\n+from django.http import HttpRequest\n+from admin_custom_urls.models import Action\n+from admin_custom_urls.models import site\n+\n+class CustomAdminReadonlyFieldURLTest(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')\n+        cls.action = Action.objects.create(name='test_action', description='Test action description')\n+\n+    def setUp(self):\n+        self.client.force_login(self.superuser)\n+\n+    @override_settings(ROOT_URLCONF='admin_custom_urls.urls')\n+    def test_readonly_field_url_in_custom_admin(self):\n+        \"\"\"\n+        Test that the URL for a readonly ForeignKey field in a custom Admin Site\n+        is incorrectly generated as /admin/... instead of /custom-admin/...\n+        \"\"\"\n+        request = HttpRequest()\n+        request.user = self.superuser\n+        request.current_app = site.name\n+\n+        # Simulate accessing the admin change view for the Action model\n+        url = reverse('admin_custom_urls:admin_custom_urls_action_change', args=[self.action.pk])\n+        response = self.client.get(url)\n+\n+        # Check if the URL for the readonly field is incorrect\n+        self.assertContains(response, '/admin/admin_custom_urls/action/')\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/admin_custom_urls/test_custom_admin_readonly_field_url_inverted.py b/tests/admin_custom_urls/test_custom_admin_readonly_field_url_inverted.py\nnew file mode 100644\nindex 0000000..1a38648\n--- /dev/null\n+++ b/tests/admin_custom_urls/test_custom_admin_readonly_field_url_inverted.py\n@@ -0,0 +1,34 @@\n+from django.test import TestCase, override_settings\n+from django.urls import reverse\n+from django.contrib.auth.models import User\n+from django.http import HttpRequest\n+from admin_custom_urls.models import Action\n+from admin_custom_urls.models import site\n+\n+class CustomAdminReadonlyFieldURLTest(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')\n+        cls.action = Action.objects.create(name='test_action', description='Test action description')\n+\n+    def setUp(self):\n+        self.client.force_login(self.superuser)\n+\n+    @override_settings(ROOT_URLCONF='admin_custom_urls.urls')\n+    def test_readonly_field_url_in_custom_admin(self):\n+        \"\"\"\n+        Test that the URL for a readonly ForeignKey field in a custom Admin Site\n+        is incorrectly generated as /admin/... instead of /custom-admin/...\n+        \"\"\"\n+        request = HttpRequest()\n+        request.user = self.superuser\n+        request.current_app = site.name\n+\n+        # Simulate accessing the admin change view for the Action model\n+        url = reverse('admin_custom_urls:admin_custom_urls_action_change', args=[self.action.pk])\n+        response = self.client.get(url)\n+\n+        # Check if the URL for the readonly field is incorrect\n+        # This assertion should now fail if the bug is present\n+        if '/admin/admin_custom_urls/action/' in response.content.decode():\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1585998,
  "num_received_chars": 22209,
  "elapsed_time": 291.1580903530121,
  "lint_repair_count": 1,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}