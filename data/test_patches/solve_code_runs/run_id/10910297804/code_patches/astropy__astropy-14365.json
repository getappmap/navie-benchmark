{
  "instance_id": "astropy__astropy-14365",
  "edit_test_file": "astropy/io/ascii/tests/test_read.py",
  "code_patch": "diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py\nindex 83a4f00..d4bdd38 100644\n--- a/astropy/io/ascii/qdp.py\n+++ b/astropy/io/ascii/qdp.py\n@@ -60,7 +60,7 @@ def _line_type(line, delimiter=None):\n     ValueError: Unrecognized QDP line...\n     \"\"\"\n     _decimal_re = r\"[+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?\"\n-    _command_re = r\"READ [TS]ERR(\\s+[0-9]+)+\"\n+    _command_re = r\"(?i)READ [TS]ERR(\\s+[0-9]+)+\"\n \n     sep = delimiter\n     if delimiter is None:\n@@ -293,7 +293,7 @@ def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):\n             # The first time I find data, I define err_specs\n             if err_specs == {} and command_lines != \"\":\n                 for cline in command_lines.strip().split(\"\\n\"):\n-                    command = cline.strip().split()\n+                    command = cline.strip().lower().split()\n                     # This should never happen, but just in case.\n                     if len(command) < 3:\n                         continue\n",
  "test_patch": "diff --git a/astropy/io/ascii/tests/test_qdp_format_fix.py b/astropy/io/ascii/tests/test_qdp_format_fix.py\nnew file mode 100644\nindex 0000000..318db94\n--- /dev/null\n+++ b/astropy/io/ascii/tests/test_qdp_format_fix.py\n@@ -0,0 +1,17 @@\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+\n+import pytest\n+from astropy.table import Table\n+from astropy.utils.exceptions import AstropyUserWarning\n+\n+def test_qdp_format_case_sensitivity():\n+    \"\"\"\n+    Test that a QDP file with lowercase commands raises a ValueError.\n+    \"\"\"\n+    qdp_content = \"read serr 1 2\\n1 0.5 1 0.5\\n\"\n+    with open(\"test.qdp\", \"w\") as f:\n+        f.write(qdp_content)\n+\n+    with pytest.raises(ValueError, match=\"Unrecognized QDP line: read serr 1 2\"):\n+        with pytest.warns(AstropyUserWarning, match=\"table_id not specified. Reading the first available table\"):\n+            Table.read(\"test.qdp\", format=\"ascii.qdp\")\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/astropy/io/ascii/tests/test_qdp_format_fix_inverted.py b/astropy/io/ascii/tests/test_qdp_format_fix_inverted.py\nnew file mode 100644\nindex 0000000..d05ff0a\n--- /dev/null\n+++ b/astropy/io/ascii/tests/test_qdp_format_fix_inverted.py\n@@ -0,0 +1,18 @@\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+\n+import pytest\n+from astropy.table import Table\n+from astropy.utils.exceptions import AstropyUserWarning\n+\n+def test_qdp_format_case_sensitivity():\n+    \"\"\"\n+    Test that a QDP file with lowercase commands raises a ValueError.\n+    This test should now FAIL when the issue is observed.\n+    \"\"\"\n+    qdp_content = \"read serr 1 2\\n1 0.5 1 0.5\\n\"\n+    with open(\"test.qdp\", \"w\") as f:\n+        f.write(qdp_content)\n+\n+    with pytest.raises(ValueError, match=\"__BUG__HERE__\"):\n+        with pytest.warns(AstropyUserWarning, match=\"table_id not specified. Reading the first available table\"):\n+            Table.read(\"test.qdp\", format=\"ascii.qdp\")\n\\ No newline at end of file\n",
  "num_sent_chars": 2022938,
  "num_received_chars": 46090,
  "elapsed_time": 839.9914145469666,
  "lint_repair_count": 3,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}