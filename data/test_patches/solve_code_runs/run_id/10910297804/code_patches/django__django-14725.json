{
  "instance_id": "django__django-14725",
  "edit_test_file": "tests/model_formsets_regress/tests.py",
  "code_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 7effb20..0152802 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -573,9 +573,10 @@ class BaseModelFormSet(BaseFormSet):\n     unique_fields = set()\n \n     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n-                 queryset=None, *, initial=None, **kwargs):\n+                 queryset=None, *, initial=None, allow_create=True, **kwargs):\n         self.queryset = queryset\n         self.initial_extra = initial\n+        self.allow_create = allow_create\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n \n     def initial_form_count(self):\n@@ -621,7 +622,7 @@ class BaseModelFormSet(BaseFormSet):\n                         kwargs['instance'] = self._existing_object(pk)\n             else:\n                 kwargs['instance'] = self.get_queryset()[i]\n-        elif self.initial_extra:\n+        elif self.initial_extra and self.allow_create:\n             # Set initial values for extra forms\n             try:\n                 kwargs['initial'] = self.initial_extra[i - self.initial_form_count()]\n@@ -653,6 +654,8 @@ class BaseModelFormSet(BaseFormSet):\n \n     def save_new(self, form, commit=True):\n         \"\"\"Save and return a new model instance for the given form.\"\"\"\n+        if not self.allow_create:\n+            raise ValidationError(\"Creation of new objects is not allowed.\")\n         return form.save(commit=commit)\n \n     def save_existing(self, form, instance, commit=True):\n",
  "test_patch": "diff --git a/tests/model_formsets_regress/test_model_formset_disallow_creation.py b/tests/model_formsets_regress/test_model_formset_disallow_creation.py\nnew file mode 100644\nindex 0000000..f362c06\n--- /dev/null\n+++ b/tests/model_formsets_regress/test_model_formset_disallow_creation.py\n@@ -0,0 +1,26 @@\n+from django.forms.models import modelformset_factory\n+from django.test import TestCase\n+from .models import User\n+\n+class ModelFormsetDisallowCreationTests(TestCase):\n+    def test_disallow_new_object_creation(self):\n+        \"\"\"\n+        Test to reproduce the issue where model formsets do not provide a way\n+        to disallow new object creation.\n+        \"\"\"\n+        # Create a formset with extra=0 to attempt to disallow new object creation\n+        UserFormSet = modelformset_factory(User, fields=\"__all__\", extra=0)\n+        \n+        # Simulate POST data that attempts to create a new object\n+        data = {\n+            'form-TOTAL_FORMS': '1',\n+            'form-INITIAL_FORMS': '0',\n+            'form-MAX_NUM_FORMS': '0',\n+            'form-0-username': 'new_user',\n+            'form-0-serial': '1',\n+        }\n+        \n+        formset = UserFormSet(data)\n+        \n+        # The formset should not be valid if new object creation is disallowed\n+        self.assertTrue(formset.is_valid(), \"Formset should not allow new object creation but it does.\")\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/model_formsets_regress/test_model_formset_disallow_creation_inverted.py b/tests/model_formsets_regress/test_model_formset_disallow_creation_inverted.py\nnew file mode 100644\nindex 0000000..a30e3b1\n--- /dev/null\n+++ b/tests/model_formsets_regress/test_model_formset_disallow_creation_inverted.py\n@@ -0,0 +1,27 @@\n+from django.forms.models import modelformset_factory\n+from django.test import TestCase\n+from .models import User\n+\n+class ModelFormsetDisallowCreationTests(TestCase):\n+    def test_disallow_new_object_creation(self):\n+        \"\"\"\n+        Test to reproduce the issue where model formsets do not provide a way\n+        to disallow new object creation.\n+        \"\"\"\n+        # Create a formset with extra=0 to attempt to disallow new object creation\n+        UserFormSet = modelformset_factory(User, fields=\"__all__\", extra=0)\n+        \n+        # Simulate POST data that attempts to create a new object\n+        data = {\n+            'form-TOTAL_FORMS': '1',\n+            'form-INITIAL_FORMS': '0',\n+            'form-MAX_NUM_FORMS': '0',\n+            'form-0-username': 'new_user',\n+            'form-0-serial': '1',\n+        }\n+        \n+        formset = UserFormSet(data)\n+        \n+        # The formset should not be valid if new object creation is disallowed\n+        if formset.is_valid():\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1583933,
  "num_received_chars": 61646,
  "elapsed_time": 640.5519113540649,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}