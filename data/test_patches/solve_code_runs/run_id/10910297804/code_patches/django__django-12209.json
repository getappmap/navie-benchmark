{
  "instance_id": "django__django-12209",
  "edit_test_file": "tests/basic/tests.py",
  "code_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex e3b14a4..d12b724 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -847,26 +847,23 @@ class Model(metaclass=ModelBase):\n         if not pk_set and (force_update or update_fields):\n             raise ValueError(\"Cannot force an update in save() with no primary key.\")\n         updated = False\n-        # Skip an UPDATE when adding an instance and primary key has a default.\n-        if (\n-            not force_insert and\n-            self._state.adding and\n-            self._meta.pk.default and\n-            self._meta.pk.default is not NOT_PROVIDED\n-        ):\n-            force_insert = True\n-        # If possible, try an UPDATE. If that doesn't update anything, do an INSERT.\n+        # Check if the PK is explicitly set and exists in the database.\n         if pk_set and not force_insert:\n             base_qs = cls._base_manager.using(using)\n-            values = [(f, None, (getattr(self, f.attname) if raw else f.pre_save(self, False)))\n-                      for f in non_pks]\n-            forced_update = update_fields or force_update\n-            updated = self._do_update(base_qs, using, pk_val, values, update_fields,\n-                                      forced_update)\n-            if force_update and not updated:\n-                raise DatabaseError(\"Forced update did not affect any rows.\")\n-            if update_fields and not updated:\n-                raise DatabaseError(\"Save with update_fields did not affect any rows.\")\n+            if base_qs.filter(pk=pk_val).exists():\n+                # If the PK exists, perform an update.\n+                values = [(f, None, (getattr(self, f.attname) if raw else f.pre_save(self, False)))\n+                          for f in non_pks]\n+                forced_update = update_fields or force_update\n+                updated = self._do_update(base_qs, using, pk_val, values, update_fields,\n+                                          forced_update)\n+                if force_update and not updated:\n+                    raise DatabaseError(\"Forced update did not affect any rows.\")\n+                if update_fields and not updated:\n+                    raise DatabaseError(\"Save with update_fields did not affect any rows.\")\n+            else:\n+                # If the PK does not exist, perform an insert.\n+                force_insert = True\n         if not updated:\n             if meta.order_with_respect_to:\n                 # If this is a model with an order_with_respect_to\n",
  "test_patch": "diff --git a/tests/basic/test_explicit_pk_behaviour_change.py b/tests/basic/test_explicit_pk_behaviour_change.py\nnew file mode 100644\nindex 0000000..5fe922e\n--- /dev/null\n+++ b/tests/basic/test_explicit_pk_behaviour_change.py\n@@ -0,0 +1,20 @@\n+from django.test import TestCase\n+from django.db import IntegrityError\n+from uuid import uuid4\n+from django.db import models\n+\n+class Sample(models.Model):\n+    id = models.UUIDField(primary_key=True, default=uuid4)\n+    name = models.CharField(blank=True, max_length=100)\n+\n+class ExplicitPKBehaviourChangeTest(TestCase):\n+    def test_explicit_pk_with_default_uuid(self):\n+        # Create an initial Sample instance\n+        s0 = Sample.objects.create()\n+        \n+        # Attempt to create another Sample instance with the same primary key\n+        s1 = Sample(pk=s0.pk, name='Test 1')\n+        \n+        # Expect an IntegrityError due to duplicate primary key\n+        with self.assertRaises(IntegrityError):\n+            s1.save()\n\\ No newline at end of file\n",
  "test_inverted_patch": null,
  "num_sent_chars": 2937668,
  "num_received_chars": 70446,
  "elapsed_time": 723.7657690048218,
  "lint_repair_count": 1,
  "test_generation_attempts": 9,
  "code_generation_attempts": 9,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}