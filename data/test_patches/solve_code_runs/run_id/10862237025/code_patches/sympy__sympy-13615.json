{
  "instance_id": "sympy__sympy-13615",
  "edit_test_file": "sympy/sets/tests/test_sets.py",
  "code_patch": "diff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex 6ffc7a0..4fb02bc 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -1,10 +1,10 @@\n from __future__ import print_function, division\n \n-from sympy import S\n+from sympy import S, Integer, Float\n from sympy.core.basic import Basic\n from sympy.core.function import Lambda\n from sympy.core.logic import fuzzy_bool\n-from sympy.logic.boolalg import And\n+from sympy.logic.boolalg import And, Not\n from sympy.sets.sets import (Set, Interval, Intersection, EmptySet, Union,\n                              FiniteSet)\n from sympy.utilities.iterables import sift\n@@ -47,6 +47,8 @@ def __new__(cls, sym, condition, base_set):\n                     cls, sym, condition, FiniteSet(*sifted[None])))\n             else:\n                 return FiniteSet(*sifted[True])\n+        if isinstance(base_set, Interval):\n+            return FiniteSet(*[elem for elem in base_set if not isinstance(elem, (Integer, Float)) or not base_set.contains(elem)])\n         return Basic.__new__(cls, sym, condition, base_set)\n \n     sym = property(lambda self: self.args[0])\n",
  "test_patch": "diff --git a/sympy/sets/tests/test_complement_mixed_input.py b/sympy/sets/tests/test_complement_mixed_input.py\nnew file mode 100644\nindex 0000000..4776e4d\n--- /dev/null\n+++ b/sympy/sets/tests/test_complement_mixed_input.py\n@@ -0,0 +1,9 @@\n+from sympy import Symbol, FiniteSet, Interval, Complement\n+\n+def test_complement_mixed_input():\n+    x = Symbol('x')\n+    y = Symbol('y')\n+    a = FiniteSet(x, y, 2)\n+    b = Interval(-10, 10)\n+    result = Complement(a, b)\n+    assert result == FiniteSet(x, y), f\"Expected {FiniteSet(x, y)}, but got {result}\"\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/sets/tests/test_complement_mixed_input_inverted.py b/sympy/sets/tests/test_complement_mixed_input_inverted.py\nnew file mode 100644\nindex 0000000..8e09175\n--- /dev/null\n+++ b/sympy/sets/tests/test_complement_mixed_input_inverted.py\n@@ -0,0 +1,9 @@\n+from sympy import Symbol, FiniteSet, Interval, Complement\n+\n+def test_complement_mixed_input():\n+    x = Symbol('x')\n+    y = Symbol('y')\n+    a = FiniteSet(x, y, 2)\n+    b = Interval(-10, 10)\n+    result = Complement(a, b)\n+    assert result != FiniteSet(x, y), \"__BUG__HERE__\"\n\\ No newline at end of file\n",
  "num_sent_chars": 3658040,
  "num_received_chars": 106728,
  "elapsed_time": 953.2121829986572,
  "lint_repair_count": 32,
  "test_generation_attempts": 0,
  "code_generation_attempts": 18,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}