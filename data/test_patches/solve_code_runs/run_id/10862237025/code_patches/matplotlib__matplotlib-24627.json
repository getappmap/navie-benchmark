{
  "instance_id": "matplotlib__matplotlib-24627",
  "edit_test_file": "lib/matplotlib/tests/test_figure.py",
  "code_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 90b0bf1..2a8d1e0 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1284,6 +1284,8 @@ class _AxesBase(martist.Artist):\n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n \n+        for artist in self._children:\n+            artist.axes = None\n         for axis in self._axis_map.values():\n             axis.clear()  # Also resets the scale to linear.\n         for spine in self.spines.values():\n\ndiff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 6c18ba1..08511b9 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -946,6 +946,8 @@ default: %(va)s\n         self.subfigs = []\n \n         for ax in tuple(self.axes):  # Iterate over the copy.\n+            for artist in ax._children:\n+                artist.figure = None\n             ax.clear()\n             self.delaxes(ax)  # Remove ax from self._axstack.\n \n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_axes_clearing.py b/lib/matplotlib/tests/test_axes_clearing.py\nnew file mode 100644\nindex 0000000..e4b37b5\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_axes_clearing.py\n@@ -0,0 +1,16 @@\n+import matplotlib.pyplot as plt\n+import unittest\n+\n+class TestAxesClearing(unittest.TestCase):\n+    def test_cla_does_not_unset_axes_attribute(self):\n+        # Create a figure and axes\n+        fig, ax = plt.subplots()\n+        # Plot a line and get the line artist\n+        line, = ax.plot([1, 2])\n+        # Clear the axes\n+        ax.cla()\n+        # Check if the line's axes attribute is still set\n+        self.assertIsNotNone(line.axes, \"Expected line.axes to be set, but it was None\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/lib/matplotlib/tests/test_axes_clearing_inverted.py b/lib/matplotlib/tests/test_axes_clearing_inverted.py\nnew file mode 100644\nindex 0000000..54a2c73\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_axes_clearing_inverted.py\n@@ -0,0 +1,17 @@\n+import matplotlib.pyplot as plt\n+import unittest\n+\n+class TestAxesClearing(unittest.TestCase):\n+    def test_cla_unsets_axes_attribute(self):\n+        # Create a figure and axes\n+        fig, ax = plt.subplots()\n+        # Plot a line and get the line artist\n+        line, = ax.plot([1, 2])\n+        # Clear the axes\n+        ax.cla()\n+        # Check if the line's axes attribute is unset\n+        if line.axes is not None:\n+            raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "num_sent_chars": 637416,
  "num_received_chars": 6806,
  "elapsed_time": 242.45515298843384,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": "PASSED",
  "appmap_data_file_count": 1,
  "appmap_data_context_size": 232599
}