{
  "edit_test_file": "lib/matplotlib/tests/test_pickle.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_get_backend_rc_context.py b/lib/matplotlib/tests/test_get_backend_rc_context.py\nnew file mode 100644\nindex 0000000..1430e15\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_get_backend_rc_context.py\n@@ -0,0 +1,16 @@\n+import matplotlib.pyplot as plt\n+from matplotlib import get_backend, rc_context\n+import unittest\n+\n+class TestGetBackendRCContext(unittest.TestCase):\n+    def test_get_backend_clears_figures(self):\n+        with rc_context():\n+            fig2 = plt.figure()\n+        before = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+        get_backend()\n+        after = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+\n+        self.assertEqual(before, after, f'\\n{before}\\n{after}')\n+\n+if __name__ == '__main__':\n+    unittest.main()\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_get_backend_rc_context_inverted.py b/lib/matplotlib/tests/test_get_backend_rc_context_inverted.py\nnew file mode 100644\nindex 0000000..41fbb57\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_get_backend_rc_context_inverted.py\n@@ -0,0 +1,17 @@\n+import matplotlib.pyplot as plt\n+from matplotlib import get_backend, rc_context\n+import unittest\n+\n+class TestGetBackendRCContext(unittest.TestCase):\n+    def test_get_backend_clears_figures(self):\n+        with rc_context():\n+            fig2 = plt.figure()\n+        before = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+        get_backend()\n+        after = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+\n+        # Alter the test to fail when the issue is observed\n+        self.assertNotEqual(before, after, f'__BUG__HERE__\\n{before}\\n{after}')\n+\n+if __name__ == '__main__':\n+    unittest.main()\n"
}