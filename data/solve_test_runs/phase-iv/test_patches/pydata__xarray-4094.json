{
  "edit_test_file": "xarray/tests/test_computation.py",
  "test_patch": "diff --git a/xarray/tests/test_to_unstacked_dataset_single_dim.py b/xarray/tests/test_to_unstacked_dataset_single_dim.py\nnew file mode 100644\nindex 0000000..c3c7d41\n--- /dev/null\n+++ b/xarray/tests/test_to_unstacked_dataset_single_dim.py\n@@ -0,0 +1,14 @@\n+import numpy as np\n+import xarray as xr\n+import pytest\n+\n+def test_to_unstacked_dataset_single_dim():\n+    arr = xr.DataArray(\n+        np.arange(3),\n+        coords=[(\"x\", [0, 1, 2])],\n+    )\n+    data = xr.Dataset({\"a\": arr, \"b\": arr})\n+    stacked = data.to_stacked_array('y', sample_dims=['x'])\n+    \n+    with pytest.raises(xr.MergeError, match=\"conflicting values for variable 'y' on objects to be combined\"):\n+        stacked.to_unstacked_dataset('y')\n",
  "inverted_patch": "diff --git a/xarray/tests/test_to_unstacked_dataset_single_dim_inverted.py b/xarray/tests/test_to_unstacked_dataset_single_dim_inverted.py\nnew file mode 100644\nindex 0000000..a6e035c\n--- /dev/null\n+++ b/xarray/tests/test_to_unstacked_dataset_single_dim_inverted.py\n@@ -0,0 +1,17 @@\n+import numpy as np\n+import xarray as xr\n+import pytest\n+\n+def test_to_unstacked_dataset_single_dim():\n+    arr = xr.DataArray(\n+        np.arange(3),\n+        coords=[(\"x\", [0, 1, 2])],\n+    )\n+    data = xr.Dataset({\"a\": arr, \"b\": arr})\n+    stacked = data.to_stacked_array('y', sample_dims=['x'])\n+    \n+    # Alter the test to fail when the issue is observed\n+    try:\n+        stacked.to_unstacked_dataset('y')\n+    except xr.MergeError:\n+        raise AssertionError(\"__BUG__HERE__\")\n"
}