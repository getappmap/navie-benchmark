{
  "edit_test_file": "tests/auth_tests/test_validators.py",
  "test_patch": "diff --git a/tests/auth_tests/test_username_validator_newline.py b/tests/auth_tests/test_username_validator_newline.py\nnew file mode 100644\nindex 0000000..bc5ca4a\n--- /dev/null\n+++ b/tests/auth_tests/test_username_validator_newline.py\n@@ -0,0 +1,25 @@\n+import unittest\n+from django.core.exceptions import ValidationError\n+from django.contrib.auth import validators\n+\n+class UsernameValidatorNewlineTest(unittest.TestCase):\n+    def test_ascii_validator_allows_trailing_newline(self):\n+        v = validators.ASCIIUsernameValidator()\n+        # This should pass due to the issue where trailing newlines are allowed\n+        try:\n+            v('validusername\\n')\n+            self.assertTrue(True, \"ASCIIUsernameValidator incorrectly allows trailing newline.\")\n+        except ValidationError:\n+            self.fail(\"ASCIIUsernameValidator raised ValidationError unexpectedly!\")\n+\n+    def test_unicode_validator_allows_trailing_newline(self):\n+        v = validators.UnicodeUsernameValidator()\n+        # This should pass due to the issue where trailing newlines are allowed\n+        try:\n+            v('validusername\\n')\n+            self.assertTrue(True, \"UnicodeUsernameValidator incorrectly allows trailing newline.\")\n+        except ValidationError:\n+            self.fail(\"UnicodeUsernameValidator raised ValidationError unexpectedly!\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n",
  "inverted_patch": "diff --git a/tests/auth_tests/test_username_validator_newline_inverted.py b/tests/auth_tests/test_username_validator_newline_inverted.py\nnew file mode 100644\nindex 0000000..e9bfe32\n--- /dev/null\n+++ b/tests/auth_tests/test_username_validator_newline_inverted.py\n@@ -0,0 +1,19 @@\n+import unittest\n+from django.core.exceptions import ValidationError\n+from django.contrib.auth import validators\n+\n+class UsernameValidatorNewlineTest(unittest.TestCase):\n+    def test_ascii_validator_allows_trailing_newline(self):\n+        v = validators.ASCIIUsernameValidator()\n+        # This should fail due to the issue where trailing newlines are allowed\n+        with self.assertRaises(ValidationError, msg=\"__BUG__HERE__\"):\n+            v('validusername\\n')\n+\n+    def test_unicode_validator_allows_trailing_newline(self):\n+        v = validators.UnicodeUsernameValidator()\n+        # This should fail due to the issue where trailing newlines are allowed\n+        with self.assertRaises(ValidationError, msg=\"__BUG__HERE__\"):\n+            v('validusername\\n')\n+\n+if __name__ == '__main__':\n+    unittest.main()\n"
}