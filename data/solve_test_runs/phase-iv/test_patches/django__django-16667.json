{
  "edit_test_file": "tests/forms_tests/widget_tests/test_selectdatewidget.py",
  "test_patch": "diff --git a/tests/forms_tests/widget_tests/test_overflowerror_in_selectdatewidget.py b/tests/forms_tests/widget_tests/test_overflowerror_in_selectdatewidget.py\nnew file mode 100644\nindex 0000000..d3444f6\n--- /dev/null\n+++ b/tests/forms_tests/widget_tests/test_overflowerror_in_selectdatewidget.py\n@@ -0,0 +1,19 @@\n+from django import forms\n+from django.forms import SelectDateWidget\n+from django.test import SimpleTestCase\n+\n+\n+class OverflowErrorInSelectDateWidgetTest(SimpleTestCase):\n+    def test_overflow_error_in_select_date_widget(self):\n+        class ReproForm(forms.Form):\n+            my_date = forms.DateField(widget=SelectDateWidget())\n+\n+        form_data = {\n+            'my_date_day': '1',\n+            'my_date_month': '1',\n+            'my_date_year': '1234567821345678',\n+        }\n+        form = ReproForm(data=form_data)\n+\n+        with self.assertRaises(OverflowError):\n+            form.is_valid()\n",
  "inverted_patch": "diff --git a/tests/forms_tests/widget_tests/test_overflowerror_in_selectdatewidget_inverted.py b/tests/forms_tests/widget_tests/test_overflowerror_in_selectdatewidget_inverted.py\nnew file mode 100644\nindex 0000000..6213f08\n--- /dev/null\n+++ b/tests/forms_tests/widget_tests/test_overflowerror_in_selectdatewidget_inverted.py\n@@ -0,0 +1,22 @@\n+from django import forms\n+from django.forms import SelectDateWidget\n+from django.test import SimpleTestCase\n+\n+\n+class OverflowErrorInSelectDateWidgetTest(SimpleTestCase):\n+    def test_overflow_error_in_select_date_widget(self):\n+        class ReproForm(forms.Form):\n+            my_date = forms.DateField(widget=SelectDateWidget())\n+\n+        form_data = {\n+            'my_date_day': '1',\n+            'my_date_month': '1',\n+            'my_date_year': '1234567821345678',\n+        }\n+        form = ReproForm(data=form_data)\n+\n+        # Alter the test to fail when the issue is observed\n+        try:\n+            form.is_valid()\n+        except OverflowError:\n+            self.fail(\"__BUG__HERE__\")\n"
}