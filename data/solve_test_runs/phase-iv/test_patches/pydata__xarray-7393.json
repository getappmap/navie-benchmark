{
  "edit_test_file": "xarray/tests/test_dataarray.py",
  "test_patch": "diff --git a/xarray/tests/test_multindex_dtype.py b/xarray/tests/test_multindex_dtype.py\nnew file mode 100644\nindex 0000000..14dee51\n--- /dev/null\n+++ b/xarray/tests/test_multindex_dtype.py\n@@ -0,0 +1,12 @@\n+import xarray as xr\n+import numpy as np\n+import unittest\n+\n+class TestMultiIndexDtype(unittest.TestCase):\n+    def test_stack_casts_int32_to_int64(self):\n+        ds = xr.Dataset(coords={'a': np.array([0], dtype='i4')})\n+        result = ds['a'].values.dtype == ds.stack(b=('a',))['a'].values.dtype\n+        self.assertFalse(result, \"Expected dtype to change from 'i4' to 'i8' after stacking.\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n",
  "inverted_patch": "diff --git a/xarray/tests/test_multindex_dtype_inverted.py b/xarray/tests/test_multindex_dtype_inverted.py\nnew file mode 100644\nindex 0000000..5643533\n--- /dev/null\n+++ b/xarray/tests/test_multindex_dtype_inverted.py\n@@ -0,0 +1,13 @@\n+import xarray as xr\n+import numpy as np\n+import unittest\n+\n+class TestMultiIndexDtype(unittest.TestCase):\n+    def test_stack_casts_int32_to_int64(self):\n+        ds = xr.Dataset(coords={'a': np.array([0], dtype='i4')})\n+        result = ds['a'].values.dtype == ds.stack(b=('a',))['a'].values.dtype\n+        # Alter the assertion to expect True, so the test fails when the bug is present\n+        self.assertTrue(result, \"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n"
}