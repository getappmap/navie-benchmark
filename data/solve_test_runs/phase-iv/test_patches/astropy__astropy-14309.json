{
  "edit_test_file": "astropy/io/registry/tests/test_registries.py",
  "test_patch": "diff --git a/astropy/io/registry/tests/test_identify_format_indexerror.py b/astropy/io/registry/tests/test_identify_format_indexerror.py\nnew file mode 100644\nindex 0000000..bdd5969\n--- /dev/null\n+++ b/astropy/io/registry/tests/test_identify_format_indexerror.py\n@@ -0,0 +1,9 @@\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+\n+import pytest\n+from astropy.io.registry import identify_format\n+from astropy.table import Table\n+\n+def test_identify_format_indexerror():\n+    with pytest.raises(IndexError, match=\"tuple index out of range\"):\n+        identify_format(\"write\", Table, \"bububu.ecsv\", None, [], {})\n",
  "inverted_patch": "diff --git a/astropy/io/registry/tests/test_identify_format_indexerror_inverted.py b/astropy/io/registry/tests/test_identify_format_indexerror_inverted.py\nnew file mode 100644\nindex 0000000..2892e26\n--- /dev/null\n+++ b/astropy/io/registry/tests/test_identify_format_indexerror_inverted.py\n@@ -0,0 +1,14 @@\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+\n+import pytest\n+from astropy.io.registry import identify_format\n+from astropy.table import Table\n+\n+def test_identify_format_indexerror():\n+    try:\n+        identify_format(\"write\", Table, \"bububu.ecsv\", None, [], {})\n+    except IndexError as e:\n+        assert str(e) == \"tuple index out of range\"\n+        raise AssertionError(\"__BUG__HERE__\")\n+    else:\n+        raise AssertionError(\"__BUG__HERE__\")\n"
}