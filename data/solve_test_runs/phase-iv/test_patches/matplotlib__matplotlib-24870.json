{
  "edit_test_file": "lib/matplotlib/tests/test_image.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_autodetect_bool_contour.py b/lib/matplotlib/tests/test_autodetect_bool_contour.py\nnew file mode 100644\nindex 0000000..d16398b\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_autodetect_bool_contour.py\n@@ -0,0 +1,25 @@\n+import matplotlib.pyplot as plt\n+import numpy as np\n+import unittest\n+\n+class TestAutoDetectBoolContour(unittest.TestCase):\n+    def test_contour_with_boolean_array(self):\n+        # Create a boolean 2D array\n+        ii, jj = np.ogrid[:100, :100]\n+        im = (ii + jj) % 20 < 10\n+\n+        # Create a figure with two subplots\n+        fig, (ax1, ax2) = plt.subplots(1, 2)\n+\n+        # Plot contour without specifying levels\n+        ax1.contour(im)\n+\n+        # Plot contour with levels specified\n+        ax2.contour(im, levels=[0.5])\n+\n+        # Check if the number of contour lines in both plots are different\n+        # This is expected due to the issue described\n+        self.assertNotEqual(len(ax1.collections), len(ax2.collections))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_autodetect_bool_contour_inverted.py b/lib/matplotlib/tests/test_autodetect_bool_contour_inverted.py\nnew file mode 100644\nindex 0000000..5f569da\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_autodetect_bool_contour_inverted.py\n@@ -0,0 +1,27 @@\n+import matplotlib.pyplot as plt\n+import numpy as np\n+import unittest\n+\n+class TestAutoDetectBoolContour(unittest.TestCase):\n+    def test_contour_with_boolean_array(self):\n+        # Create a boolean 2D array\n+        ii, jj = np.ogrid[:100, :100]\n+        im = (ii + jj) % 20 < 10\n+\n+        # Create a figure with two subplots\n+        fig, (ax1, ax2) = plt.subplots(1, 2)\n+\n+        # Plot contour without specifying levels\n+        ax1.contour(im)\n+\n+        # Plot contour with levels specified\n+        ax2.contour(im, levels=[0.5])\n+\n+        # Check if the number of contour lines in both plots are the same\n+        # This should fail if the issue is present, as the autodetection should\n+        # make them equal\n+        if len(ax1.collections) != len(ax2.collections):\n+            raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n"
}