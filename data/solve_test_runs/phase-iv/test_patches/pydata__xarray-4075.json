{
  "edit_test_file": "xarray/tests/test_weighted.py",
  "test_patch": "diff --git a/xarray/tests/test_weighted_mean_boolean.py b/xarray/tests/test_weighted_mean_boolean.py\nnew file mode 100644\nindex 0000000..39e8313\n--- /dev/null\n+++ b/xarray/tests/test_weighted_mean_boolean.py\n@@ -0,0 +1,16 @@\n+import numpy as np\n+import xarray as xr\n+from xarray.tests import assert_equal\n+\n+def test_weighted_mean_boolean_weights():\n+    # Create a DataArray with values\n+    dta = xr.DataArray([1.0, 1.0, 1.0])\n+    # Create a DataArray with boolean weights\n+    wgt = xr.DataArray(np.array([1, 1, 0], dtype=np.bool_))\n+\n+    # Calculate the weighted mean\n+    result = dta.weighted(wgt).mean()\n+\n+    # Assert that the incorrect result is produced\n+    expected = xr.DataArray(2.0)\n+    assert_equal(result, expected)\n",
  "inverted_patch": "diff --git a/xarray/tests/test_weighted_mean_boolean_inverted.py b/xarray/tests/test_weighted_mean_boolean_inverted.py\nnew file mode 100644\nindex 0000000..7066b66\n--- /dev/null\n+++ b/xarray/tests/test_weighted_mean_boolean_inverted.py\n@@ -0,0 +1,20 @@\n+import numpy as np\n+import xarray as xr\n+import pytest\n+from xarray.tests import assert_equal\n+\n+def test_weighted_mean_boolean_weights():\n+    # Create a DataArray with values\n+    dta = xr.DataArray([1.0, 1.0, 1.0])\n+    # Create a DataArray with boolean weights\n+    wgt = xr.DataArray(np.array([1, 1, 0], dtype=np.bool_))\n+\n+    # Calculate the weighted mean\n+    result = dta.weighted(wgt).mean()\n+\n+    # Assert that the correct result is produced\n+    expected = xr.DataArray(1.0)\n+    try:\n+        assert_equal(result, expected)\n+    except AssertionError:\n+        raise AssertionError(\"__BUG__HERE__\")\n"
}