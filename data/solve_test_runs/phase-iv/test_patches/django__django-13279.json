{
  "edit_test_file": "tests/messages_tests/test_cookie.py",
  "test_patch": "diff --git a/tests/messages_tests/test_session_transition.py b/tests/messages_tests/test_session_transition.py\nnew file mode 100644\nindex 0000000..ae330fb\n--- /dev/null\n+++ b/tests/messages_tests/test_session_transition.py\n@@ -0,0 +1,25 @@\n+import json\n+\n+from django.conf import settings\n+from django.contrib.messages.storage.cookie import CookieStorage\n+from django.test import SimpleTestCase, override_settings\n+from django.utils.deprecation import RemovedInDjango40Warning\n+from django.test.utils import ignore_warnings\n+from django.contrib.messages.storage.base import Message\n+from django.contrib.messages import constants\n+\n+class SessionTransitionTests(SimpleTestCase):\n+    @ignore_warnings(category=RemovedInDjango40Warning)\n+    @override_settings(DEFAULT_HASHING_ALGORITHM='sha1')\n+    def test_session_data_decoding_during_transition(self):\n+        \"\"\"\n+        Test that session data cannot be decoded during the transition to Django 3.1\n+        when DEFAULT_HASHING_ALGORITHM is set to 'sha1'.\n+        \"\"\"\n+        storage = CookieStorage(self.client)\n+        messages = [Message(constants.INFO, 'test message')]\n+        encoder = storage._legacy_hash\n+        with self.assertRaises(TypeError):\n+            # Attempt to encode messages using the legacy hash\n+            encoded_messages = encoder(json.dumps(messages, separators=(',', ':')))\n+            storage._decode(encoded_messages)\n",
  "inverted_patch": "diff --git a/tests/messages_tests/test_session_transition_inverted.py b/tests/messages_tests/test_session_transition_inverted.py\nnew file mode 100644\nindex 0000000..7c306d8\n--- /dev/null\n+++ b/tests/messages_tests/test_session_transition_inverted.py\n@@ -0,0 +1,28 @@\n+import json\n+\n+from django.conf import settings\n+from django.contrib.messages.storage.cookie import CookieStorage\n+from django.test import SimpleTestCase, override_settings\n+from django.utils.deprecation import RemovedInDjango40Warning\n+from django.test.utils import ignore_warnings\n+from django.contrib.messages.storage.base import Message\n+from django.contrib.messages import constants\n+\n+class SessionTransitionTests(SimpleTestCase):\n+    @ignore_warnings(category=RemovedInDjango40Warning)\n+    @override_settings(DEFAULT_HASHING_ALGORITHM='sha1')\n+    def test_session_data_decoding_during_transition(self):\n+        \"\"\"\n+        Test that session data cannot be decoded during the transition to Django 3.1\n+        when DEFAULT_HASHING_ALGORITHM is set to 'sha1'.\n+        \"\"\"\n+        storage = CookieStorage(self.client)\n+        messages = [Message(constants.INFO, 'test message')]\n+        encoder = storage._legacy_hash\n+        with self.assertRaises(Exception) as context:\n+            # Attempt to encode messages using the legacy hash\n+            encoded_messages = encoder(json.dumps(messages, separators=(',', ':')))\n+            storage._decode(encoded_messages)\n+        \n+        # Check if the exception message is as expected\n+        self.assertEqual(str(context.exception), \"__BUG__HERE__\")\n"
}