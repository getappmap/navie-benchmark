{
  "edit_test_file": "tests/utils_tests/test_numberformat.py",
  "test_patch": "diff --git a/tests/utils_tests/test_decimal_formatting_issue.py b/tests/utils_tests/test_decimal_formatting_issue.py\nnew file mode 100644\nindex 0000000..b58b0dd\n--- /dev/null\n+++ b/tests/utils_tests/test_decimal_formatting_issue.py\n@@ -0,0 +1,10 @@\n+from decimal import Decimal\n+from django.test import SimpleTestCase\n+from django.utils.numberformat import format as nformat\n+\n+class TestDecimalFormattingIssue(SimpleTestCase):\n+\n+    def test_small_decimal_exponential_notation(self):\n+        # This test reproduces the issue where small decimals are rendered in exponential notation.\n+        result = nformat(Decimal('1e-200'), '.', decimal_pos=2)\n+        self.assertEqual(result, '1.00e-200')\n",
  "inverted_patch": "diff --git a/tests/utils_tests/test_decimal_formatting_issue_inverted.py b/tests/utils_tests/test_decimal_formatting_issue_inverted.py\nnew file mode 100644\nindex 0000000..e1b4941\n--- /dev/null\n+++ b/tests/utils_tests/test_decimal_formatting_issue_inverted.py\n@@ -0,0 +1,10 @@\n+from decimal import Decimal\n+from django.test import SimpleTestCase\n+from django.utils.numberformat import format as nformat\n+\n+class TestDecimalFormattingIssue(SimpleTestCase):\n+\n+    def test_small_decimal_exponential_notation(self):\n+        # This test should fail when small decimals are rendered in exponential notation.\n+        result = nformat(Decimal('1e-200'), '.', decimal_pos=2)\n+        self.assertEqual(result, '0.00', \"__BUG__HERE__\")\n"
}