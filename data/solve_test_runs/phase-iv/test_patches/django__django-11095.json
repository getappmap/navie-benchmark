{
  "edit_test_file": "tests/generic_inline_admin/tests.py",
  "test_patch": "diff --git a/tests/generic_inline_admin/test_model_admin_get_inlines.py b/tests/generic_inline_admin/test_model_admin_get_inlines.py\nnew file mode 100644\nindex 0000000..a97fcad\n--- /dev/null\n+++ b/tests/generic_inline_admin/test_model_admin_get_inlines.py\n@@ -0,0 +1,45 @@\n+from django.contrib import admin\n+from django.test import TestCase, RequestFactory\n+from django.contrib.auth.models import User\n+from .models import Episode, Media\n+from .admin import site as admin_site\n+\n+class MockRequest:\n+    pass\n+\n+class MockSuperUser:\n+    def has_perm(self, perm):\n+        return True\n+\n+request = MockRequest()\n+request.user = MockSuperUser()\n+\n+class GetInlinesHookTest(TestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')\n+        self.client.force_login(self.superuser)\n+\n+    def test_get_inlines_hook(self):\n+        \"\"\"\n+        Test to reproduce the issue where ModelAdmin.get_inlines() hook is missing.\n+        \"\"\"\n+        class CustomInline(admin.TabularInline):\n+            model = Media\n+\n+        class EpisodeAdmin(admin.ModelAdmin):\n+            inlines = [CustomInline]\n+\n+            def get_inlines(self, request, obj=None):\n+                return self.inlines\n+\n+        ma = EpisodeAdmin(Episode, admin_site)\n+        request = self.factory.get('/')\n+        request.user = self.superuser\n+\n+        # Attempt to use the get_inlines hook\n+        try:\n+            inlines = ma.get_inlines(request)\n+            self.assertEqual(inlines, [CustomInline])\n+        except AttributeError as e:\n+            self.assertEqual(str(e), \"'EpisodeAdmin' object has no attribute 'get_inlines'\")\n",
  "inverted_patch": "diff --git a/tests/generic_inline_admin/test_model_admin_get_inlines_inverted.py b/tests/generic_inline_admin/test_model_admin_get_inlines_inverted.py\nnew file mode 100644\nindex 0000000..d6d389c\n--- /dev/null\n+++ b/tests/generic_inline_admin/test_model_admin_get_inlines_inverted.py\n@@ -0,0 +1,46 @@\n+from django.contrib import admin\n+from django.test import TestCase, RequestFactory\n+from django.contrib.auth.models import User\n+from .models import Episode, Media\n+from .admin import site as admin_site\n+\n+class MockRequest:\n+    pass\n+\n+class MockSuperUser:\n+    def has_perm(self, perm):\n+        return True\n+\n+request = MockRequest()\n+request.user = MockSuperUser()\n+\n+class GetInlinesHookTest(TestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')\n+        self.client.force_login(self.superuser)\n+\n+    def test_get_inlines_hook(self):\n+        \"\"\"\n+        Test to reproduce the issue where ModelAdmin.get_inlines() hook is missing.\n+        \"\"\"\n+        class CustomInline(admin.TabularInline):\n+            model = Media\n+\n+        class EpisodeAdmin(admin.ModelAdmin):\n+            inlines = [CustomInline]\n+\n+            def get_inlines(self, request, obj=None):\n+                return self.inlines\n+\n+        ma = EpisodeAdmin(Episode, admin_site)\n+        request = self.factory.get('/')\n+        request.user = self.superuser\n+\n+        # Attempt to use the get_inlines hook\n+        try:\n+            inlines = ma.get_inlines(request)\n+            # Change the assertion to fail when the bug is observed\n+            self.assertNotEqual(inlines, [CustomInline], \"__BUG__HERE__\")\n+        except AttributeError as e:\n+            self.fail(\"__BUG__HERE__\")\n"
}