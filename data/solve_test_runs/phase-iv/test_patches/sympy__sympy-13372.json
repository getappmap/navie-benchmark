{
  "edit_test_file": "sympy/core/tests/test_evalf.py",
  "test_patch": "diff --git a/sympy/core/tests/test_eval_mul.py b/sympy/core/tests/test_eval_mul.py\nnew file mode 100644\nindex 0000000..04dcf18\n--- /dev/null\n+++ b/sympy/core/tests/test_eval_mul.py\n@@ -0,0 +1,10 @@\n+# sympy/core/tests/test_eval_mul.py\n+\n+from sympy import Mul, Max, Symbol\n+from sympy.utilities.pytest import raises\n+\n+def test_evalf_unboundlocalerror():\n+    x = Symbol('x')\n+    y = Symbol('y')\n+    expr = Mul(Max(0, y), x, evaluate=False)\n+    raises(UnboundLocalError, lambda: expr.evalf())\n",
  "inverted_patch": "diff --git a/sympy/core/tests/test_eval_mul_inverted.py b/sympy/core/tests/test_eval_mul_inverted.py\nnew file mode 100644\nindex 0000000..9825f63\n--- /dev/null\n+++ b/sympy/core/tests/test_eval_mul_inverted.py\n@@ -0,0 +1,13 @@\n+# sympy/core/tests/test_eval_mul.py\n+\n+from sympy import Mul, Max, Symbol\n+from sympy.utilities.pytest import raises\n+\n+def test_evalf_unboundlocalerror():\n+    x = Symbol('x')\n+    y = Symbol('y')\n+    expr = Mul(Max(0, y), x, evaluate=False)\n+    try:\n+        expr.evalf()\n+    except UnboundLocalError:\n+        raise AssertionError(\"__BUG__HERE__\")\n"
}