{
  "edit_test_file": "testing/python/raises.py",
  "test_patch": "diff --git a/testing/python/chained_exception_serialization_test.py b/testing/python/chained_exception_serialization_test.py\nnew file mode 100644\nindex 0000000..32110fb\n--- /dev/null\n+++ b/testing/python/chained_exception_serialization_test.py\n@@ -0,0 +1,23 @@\n+import pytest\n+\n+def test_chained_exception_with_from():\n+    with pytest.raises(ValueError) as excinfo:\n+        try:\n+            try:\n+                raise ValueError(11)\n+            except Exception as e1:\n+                raise ValueError(12) from e1\n+        except Exception as e2:\n+            raise ValueError(13) from e2\n+    assert str(excinfo.value) == \"13\"\n+\n+def test_chained_exception_without_from():\n+    with pytest.raises(ValueError) as excinfo:\n+        try:\n+            try:\n+                raise ValueError(21)\n+            except Exception:\n+                raise ValueError(22)\n+        except Exception:\n+            raise ValueError(23)\n+    assert str(excinfo.value) == \"23\"\n",
  "inverted_patch": "diff --git a/testing/python/chained_exception_serialization_test_inverted.py b/testing/python/chained_exception_serialization_test_inverted.py\nnew file mode 100644\nindex 0000000..6a4150c\n--- /dev/null\n+++ b/testing/python/chained_exception_serialization_test_inverted.py\n@@ -0,0 +1,23 @@\n+import pytest\n+\n+def test_chained_exception_with_from():\n+    with pytest.raises(ValueError) as excinfo:\n+        try:\n+            try:\n+                raise ValueError(11)\n+            except Exception as e1:\n+                raise ValueError(12) from e1\n+        except Exception as e2:\n+            raise ValueError(13) from e2\n+    assert str(excinfo.value) == \"__BUG__HERE__\"\n+\n+def test_chained_exception_without_from():\n+    with pytest.raises(ValueError) as excinfo:\n+        try:\n+            try:\n+                raise ValueError(21)\n+            except Exception:\n+                raise ValueError(22)\n+        except Exception:\n+            raise ValueError(23)\n+    assert str(excinfo.value) == \"__BUG__HERE__\"\n"
}