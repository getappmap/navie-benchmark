{
  "edit_test_file": "lib/matplotlib/tests/test_figure.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_subfigure_legend.py b/lib/matplotlib/tests/test_subfigure_legend.py\nnew file mode 100644\nindex 0000000..4a0192c\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_subfigure_legend.py\n@@ -0,0 +1,12 @@\n+import pytest\n+import matplotlib.pyplot as plt\n+from matplotlib.figure import Figure\n+\n+def test_subfigure_legend():\n+    fig = plt.figure()\n+    subfig = fig.subfigures()\n+    ax = subfig.subplots()\n+    ax.plot([0, 1, 2], [0, 1, 2], label=\"test\")\n+    \n+    with pytest.raises(TypeError, match=\"Legend needs either Axes or Figure as parent\"):\n+        subfig.legend()\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_subfigure_legend_inverted.py b/lib/matplotlib/tests/test_subfigure_legend_inverted.py\nnew file mode 100644\nindex 0000000..149c94c\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_subfigure_legend_inverted.py\n@@ -0,0 +1,15 @@\n+import pytest\n+import matplotlib.pyplot as plt\n+from matplotlib.figure import Figure\n+\n+def test_subfigure_legend():\n+    fig = plt.figure()\n+    subfig = fig.subfigures()\n+    ax = subfig.subplots()\n+    ax.plot([0, 1, 2], [0, 1, 2], label=\"test\")\n+    \n+    try:\n+        subfig.legend()\n+    except TypeError as e:\n+        if str(e) == \"Legend needs either Axes or Figure as parent\":\n+            raise AssertionError(\"__BUG__HERE__\")\n"
}