{
  "edit_test_file": "astropy/utils/tests/test_data_info.py",
  "test_patch": "diff --git a/astropy/utils/tests/test_float16_to_float64.py b/astropy/utils/tests/test_float16_to_float64.py\nnew file mode 100644\nindex 0000000..2e5d779\n--- /dev/null\n+++ b/astropy/utils/tests/test_float16_to_float64.py\n@@ -0,0 +1,10 @@\n+import numpy as np\n+from astropy import units as u\n+\n+def test_float16_to_float64_conversion():\n+    \"\"\"\n+    Test that creating a Quantity from a np.float16 results in a dtype of float64.\n+    This reproduces the issue where np.float16 is automatically upgraded to np.float64.\n+    \"\"\"\n+    quantity = np.float16(1) * u.km\n+    assert quantity.dtype == np.float64, \"np.float16 should be upgraded to np.float64\"\n",
  "inverted_patch": "diff --git a/astropy/utils/tests/test_float16_to_float64_inverted.py b/astropy/utils/tests/test_float16_to_float64_inverted.py\nnew file mode 100644\nindex 0000000..7fc432b\n--- /dev/null\n+++ b/astropy/utils/tests/test_float16_to_float64_inverted.py\n@@ -0,0 +1,12 @@\n+import numpy as np\n+from astropy import units as u\n+import pytest\n+\n+def test_float16_to_float64_conversion():\n+    \"\"\"\n+    Test that creating a Quantity from a np.float16 results in a dtype of float64.\n+    This reproduces the issue where np.float16 is automatically upgraded to np.float64.\n+    The test should now fail if the dtype is float64, indicating the presence of the bug.\n+    \"\"\"\n+    quantity = np.float16(1) * u.km\n+    assert quantity.dtype != np.float64, \"__BUG__HERE__\"\n"
}