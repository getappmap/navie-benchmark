{
  "edit_test_file": "tests/db_functions/text/test_replace.py",
  "test_patch": "diff --git a/tests/db_functions/text/test_simplify_regexp.py b/tests/db_functions/text/test_simplify_regexp.py\nnew file mode 100644\nindex 0000000..f8ee122\n--- /dev/null\n+++ b/tests/db_functions/text/test_simplify_regexp.py\n@@ -0,0 +1,10 @@\n+from django.test import TestCase\n+from django.contrib.admindocs.utils import replace_named_groups\n+\n+class SimplifyRegexpTests(TestCase):\n+\n+    def test_replace_named_groups_trailing_group(self):\n+        pattern = r'entries/(?P<pk>[^/.]+)/relationships/(?P<related_field>\\w+)'\n+        expected = r'entries/<pk>/relationships/(?P<related_field>\\w+)'\n+        result = replace_named_groups(pattern)\n+        self.assertEqual(result, expected)\n",
  "inverted_patch": "diff --git a/tests/db_functions/text/test_simplify_regexp_inverted.py b/tests/db_functions/text/test_simplify_regexp_inverted.py\nnew file mode 100644\nindex 0000000..0abe0fb\n--- /dev/null\n+++ b/tests/db_functions/text/test_simplify_regexp_inverted.py\n@@ -0,0 +1,13 @@\n+from django.test import TestCase\n+from django.contrib.admindocs.utils import replace_named_groups\n+\n+class SimplifyRegexpTests(TestCase):\n+\n+    def test_replace_named_groups_trailing_group(self):\n+        pattern = r'entries/(?P<pk>[^/.]+)/relationships/(?P<related_field>\\w+)'\n+        expected = r'entries/<pk>/relationships/<related_field>'\n+        result = replace_named_groups(pattern)\n+        # Altered the assertion to fail when the bug is observed\n+        if result != expected:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        self.assertEqual(result, expected)\n"
}