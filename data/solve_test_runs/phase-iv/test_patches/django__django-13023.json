{
  "edit_test_file": "tests/urlpatterns/tests.py",
  "test_patch": "diff --git a/tests/urlpatterns/test_decimalfield_to_python_dict.py b/tests/urlpatterns/test_decimalfield_to_python_dict.py\nnew file mode 100644\nindex 0000000..cb6826d\n--- /dev/null\n+++ b/tests/urlpatterns/test_decimalfield_to_python_dict.py\n@@ -0,0 +1,13 @@\n+import unittest\n+from decimal import Decimal\n+from django.core.exceptions import ValidationError\n+from django.db import models\n+\n+class DecimalFieldToPythonDictTest(unittest.TestCase):\n+    def test_decimalfield_to_python_with_dict(self):\n+        f = models.DecimalField(max_digits=4, decimal_places=2)\n+        with self.assertRaises(TypeError):\n+            f.to_python({'key': 'value'})\n+\n+if __name__ == '__main__':\n+    unittest.main()\n",
  "inverted_patch": "diff --git a/tests/urlpatterns/test_decimalfield_to_python_dict_inverted.py b/tests/urlpatterns/test_decimalfield_to_python_dict_inverted.py\nnew file mode 100644\nindex 0000000..16d9963\n--- /dev/null\n+++ b/tests/urlpatterns/test_decimalfield_to_python_dict_inverted.py\n@@ -0,0 +1,15 @@\n+import unittest\n+from decimal import Decimal\n+from django.core.exceptions import ValidationError\n+from django.db import models\n+\n+class DecimalFieldToPythonDictTest(unittest.TestCase):\n+    def test_decimalfield_to_python_with_dict(self):\n+        f = models.DecimalField(max_digits=4, decimal_places=2)\n+        try:\n+            f.to_python({'key': 'value'})\n+        except TypeError:\n+            raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n"
}