{
  "edit_test_file": "tests/template_tests/filter_tests/test_floatformat.py",
  "test_patch": "diff --git a/tests/template_tests/filter_tests/test_floatformat_precision.py b/tests/template_tests/filter_tests/test_floatformat_precision.py\nnew file mode 100644\nindex 0000000..8efdee1\n--- /dev/null\n+++ b/tests/template_tests/filter_tests/test_floatformat_precision.py\n@@ -0,0 +1,11 @@\n+from decimal import Decimal\n+from django.template import Template, Context\n+from django.test import SimpleTestCase\n+\n+class FloatformatPrecisionTests(SimpleTestCase):\n+    def test_floatformat_drops_precision(self):\n+        template = Template('{{ value|floatformat:20 }}')\n+        context = Context({'value': Decimal('42.12345678901234567890')})\n+        output = template.render(context)\n+        # The expected incorrect output due to the precision drop issue\n+        self.assertEqual(output, '42.12345678901234400000')\n",
  "inverted_patch": "diff --git a/tests/template_tests/filter_tests/test_floatformat_precision_inverted.py b/tests/template_tests/filter_tests/test_floatformat_precision_inverted.py\nnew file mode 100644\nindex 0000000..d795084\n--- /dev/null\n+++ b/tests/template_tests/filter_tests/test_floatformat_precision_inverted.py\n@@ -0,0 +1,12 @@\n+from decimal import Decimal\n+from django.template import Template, Context\n+from django.test import SimpleTestCase\n+\n+class FloatformatPrecisionTests(SimpleTestCase):\n+    def test_floatformat_drops_precision(self):\n+        template = Template('{{ value|floatformat:20 }}')\n+        context = Context({'value': Decimal('42.12345678901234567890')})\n+        output = template.render(context)\n+        # The expected correct output should maintain precision\n+        # This test should now fail if the precision is dropped\n+        self.assertEqual(output, '42.12345678901234567890', \"__BUG__HERE__\")\n"
}