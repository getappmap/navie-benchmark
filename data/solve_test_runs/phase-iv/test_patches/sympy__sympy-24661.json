{
  "edit_test_file": "sympy/parsing/tests/test_ast_parser.py",
  "test_patch": "diff --git a/sympy/parsing/tests/test_parse_expr_relational.py b/sympy/parsing/tests/test_parse_expr_relational.py\nnew file mode 100644\nindex 0000000..cc730ce\n--- /dev/null\n+++ b/sympy/parsing/tests/test_parse_expr_relational.py\n@@ -0,0 +1,7 @@\n+from sympy.parsing.sympy_parser import parse_expr\n+from sympy.core.relational import Lt\n+\n+def test_parse_expr_relational_evaluate_false():\n+    # This test reproduces the issue where evaluate=False is ignored for relationals\n+    result = parse_expr('1 < 2', evaluate=False)\n+    assert result == True  # The issue is that this evaluates to True instead of Lt(1, 2, evaluate=False)\n",
  "inverted_patch": "diff --git a/sympy/parsing/tests/test_parse_expr_relational_inverted.py b/sympy/parsing/tests/test_parse_expr_relational_inverted.py\nnew file mode 100644\nindex 0000000..246a004\n--- /dev/null\n+++ b/sympy/parsing/tests/test_parse_expr_relational_inverted.py\n@@ -0,0 +1,9 @@\n+from sympy.parsing.sympy_parser import parse_expr\n+from sympy.core.relational import Lt\n+\n+def test_parse_expr_relational_evaluate_false():\n+    # This test reproduces the issue where evaluate=False is ignored for relationals\n+    result = parse_expr('1 < 2', evaluate=False)\n+    # The issue is that this evaluates to True instead of Lt(1, 2, evaluate=False)\n+    # Alter the assertion to fail when the bug is observed\n+    assert result == Lt(1, 2, evaluate=False), \"__BUG__HERE__\"\n"
}