{
  "edit_test_file": "sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py",
  "test_patch": "diff --git a/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target.py b/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target.py\nnew file mode 100644\nindex 0000000..33e3165\n--- /dev/null\n+++ b/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target.py\n@@ -0,0 +1,15 @@\n+import numpy as np\n+import pytest\n+from sklearn.experimental import enable_hist_gradient_boosting\n+from sklearn.ensemble import HistGradientBoostingClassifier\n+\n+def test_early_stopping_with_string_target():\n+    # Test to reproduce the issue where HistGradientBoostingClassifier\n+    # does not work with string target when early stopping is turned on.\n+\n+    X = np.random.randn(100, 10)\n+    y = np.array(['x'] * 50 + ['y'] * 50, dtype=object)\n+    gbrt = HistGradientBoostingClassifier(n_iter_no_change=10)\n+\n+    with pytest.raises(TypeError, match=\"<' not supported between instances of 'str' and 'float'\"):\n+        gbrt.fit(X, y)\n",
  "inverted_patch": "diff --git a/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target_inverted.py b/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target_inverted.py\nnew file mode 100644\nindex 0000000..2336f63\n--- /dev/null\n+++ b/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target_inverted.py\n@@ -0,0 +1,16 @@\n+import numpy as np\n+import pytest\n+from sklearn.experimental import enable_hist_gradient_boosting\n+from sklearn.ensemble import HistGradientBoostingClassifier\n+\n+def test_early_stopping_with_string_target():\n+    # Test to reproduce the issue where HistGradientBoostingClassifier\n+    # does not work with string target when early stopping is turned on.\n+\n+    X = np.random.randn(100, 10)\n+    y = np.array(['x'] * 50 + ['y'] * 50, dtype=object)\n+    gbrt = HistGradientBoostingClassifier(n_iter_no_change=10)\n+\n+    # Alter the test to fail when the issue is observed\n+    with pytest.raises(Exception, match=\"__BUG__HERE__\"):\n+        gbrt.fit(X, y)\n"
}