{
  "edit_test_file": "tests/messages_tests/test_cookie.py",
  "test_patch": "diff --git a/tests/messages_tests/test_delete_cookie_preserve_samesite.py b/tests/messages_tests/test_delete_cookie_preserve_samesite.py\nnew file mode 100644\nindex 0000000..3e789ec\n--- /dev/null\n+++ b/tests/messages_tests/test_delete_cookie_preserve_samesite.py\n@@ -0,0 +1,16 @@\n+import unittest\n+from django.http import HttpResponse\n+\n+class DeleteCookiePreserveSameSiteTest(unittest.TestCase):\n+    def test_delete_cookie_preserves_samesite(self):\n+        response = HttpResponse()\n+        # Set a cookie with SameSite attribute\n+        response.set_cookie('messages', 'value', samesite='Lax')\n+        # Delete the cookie\n+        response.delete_cookie('messages')\n+        # Check if the SameSite attribute is preserved\n+        self.assertIn('samesite', response.cookies['messages'])\n+        self.assertEqual(response.cookies['messages']['samesite'], 'Lax')\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n",
  "inverted_patch": "diff --git a/tests/messages_tests/test_delete_cookie_preserve_samesite_inverted.py b/tests/messages_tests/test_delete_cookie_preserve_samesite_inverted.py\nnew file mode 100644\nindex 0000000..5de861f\n--- /dev/null\n+++ b/tests/messages_tests/test_delete_cookie_preserve_samesite_inverted.py\n@@ -0,0 +1,16 @@\n+import unittest\n+from django.http import HttpResponse\n+\n+class DeleteCookiePreserveSameSiteTest(unittest.TestCase):\n+    def test_delete_cookie_preserves_samesite(self):\n+        response = HttpResponse()\n+        # Set a cookie with SameSite attribute\n+        response.set_cookie('messages', 'value', samesite='Lax')\n+        # Delete the cookie\n+        response.delete_cookie('messages')\n+        # Check if the SameSite attribute is preserved\n+        if 'samesite' in response.cookies['messages'] and response.cookies['messages']['samesite'] == 'Lax':\n+            raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n"
}