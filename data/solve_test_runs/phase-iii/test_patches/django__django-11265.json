{
  "edit_test_file": "tests/filtered_relation/tests.py",
  "test_patch": "diff --git a/tests/filtered_relation/test_excluded_filtered_relation.py b/tests/filtered_relation/test_excluded_filtered_relation.py\nnew file mode 100644\nindex 0000000..5472b4f\n--- /dev/null\n+++ b/tests/filtered_relation/test_excluded_filtered_relation.py\n@@ -0,0 +1,23 @@\n+from django.core.exceptions import FieldError\n+from django.db.models import FilteredRelation, Q\n+from django.test import TestCase\n+\n+from .models import Author, Book, Editor\n+\n+class ExcludeAnnotatedFilteredRelationTest(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.author1 = Author.objects.create(name='Alice')\n+        cls.editor_a = Editor.objects.create(name='a')\n+        cls.book1 = Book.objects.create(\n+            title='Poem by Alice',\n+            editor=cls.editor_a,\n+            author=cls.author1,\n+        )\n+\n+    def test_exclude_annotated_filtered_relation(self):\n+        with self.assertRaises(FieldError):\n+            list(Author.objects.annotate(\n+                book_alice=FilteredRelation('book', condition=Q(book__title__iexact='poem by alice')),\n+            ).exclude(book_alice__isnull=False))\n",
  "inverted_patch": "diff --git a/tests/filtered_relation/test_excluded_filtered_relation_inverted.py b/tests/filtered_relation/test_excluded_filtered_relation_inverted.py\nnew file mode 100644\nindex 0000000..2152ebc\n--- /dev/null\n+++ b/tests/filtered_relation/test_excluded_filtered_relation_inverted.py\n@@ -0,0 +1,25 @@\n+from django.core.exceptions import FieldError\n+from django.db.models import FilteredRelation, Q\n+from django.test import TestCase\n+\n+from .models import Author, Book, Editor\n+\n+class ExcludeAnnotatedFilteredRelationTest(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.author1 = Author.objects.create(name='Alice')\n+        cls.editor_a = Editor.objects.create(name='a')\n+        cls.book1 = Book.objects.create(\n+            title='Poem by Alice',\n+            editor=cls.editor_a,\n+            author=cls.author1,\n+        )\n+\n+    def test_exclude_annotated_filtered_relation(self):\n+        try:\n+            list(Author.objects.annotate(\n+                book_alice=FilteredRelation('book', condition=Q(book__title__iexact='poem by alice')),\n+            ).exclude(book_alice__isnull=False))\n+        except FieldError:\n+            raise AssertionError(\"__BUG__HERE__\")\n"
}