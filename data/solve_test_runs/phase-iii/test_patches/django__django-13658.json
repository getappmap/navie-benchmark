{
  "edit_test_file": "tests/template_tests/test_parser.py",
  "test_patch": "diff --git a/tests/template_tests/test_managementutility.py b/tests/template_tests/test_managementutility.py\nnew file mode 100644\nindex 0000000..0f1107d\n--- /dev/null\n+++ b/tests/template_tests/test_managementutility.py\n@@ -0,0 +1,19 @@\n+from django.core.management import execute_from_command_line\n+from django.core.management.base import CommandError\n+from django.test import SimpleTestCase\n+import sys\n+\n+class ManagementUtilityTestCase(SimpleTestCase):\n+    def test_prog_name_from_argv(self):\n+        \"\"\"\n+        Test that ManagementUtility uses the prog_name from argv instead of sys.argv.\n+        This should raise an exception when sys.argv[0] is None.\n+        \"\"\"\n+        original_argv = sys.argv\n+        try:\n+            # Simulate an environment where sys.argv[0] is None\n+            sys.argv = [None, 'runserver']\n+            with self.assertRaises(TypeError):\n+                execute_from_command_line(['custom_prog_name', 'runserver'])\n+        finally:\n+            sys.argv = original_argv\n",
  "inverted_patch": "diff --git a/tests/template_tests/test_managementutility_inverted.py b/tests/template_tests/test_managementutility_inverted.py\nnew file mode 100644\nindex 0000000..7f117d7\n--- /dev/null\n+++ b/tests/template_tests/test_managementutility_inverted.py\n@@ -0,0 +1,19 @@\n+from django.core.management import execute_from_command_line\n+from django.core.management.base import CommandError\n+from django.test import SimpleTestCase\n+import sys\n+\n+class ManagementUtilityTestCase(SimpleTestCase):\n+    def test_prog_name_from_argv(self):\n+        \"\"\"\n+        Test that ManagementUtility uses the prog_name from argv instead of sys.argv.\n+        This should raise an exception when sys.argv[0] is None.\n+        \"\"\"\n+        original_argv = sys.argv\n+        try:\n+            # Simulate an environment where sys.argv[0] is None\n+            sys.argv = [None, 'runserver']\n+            with self.assertRaisesRegex(TypeError, \"__BUG__HERE__\"):\n+                execute_from_command_line(['custom_prog_name', 'runserver'])\n+        finally:\n+            sys.argv = original_argv\n"
}