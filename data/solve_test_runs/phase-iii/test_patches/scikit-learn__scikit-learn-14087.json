{
  "edit_test_file": "sklearn/linear_model/tests/test_logistic.py",
  "test_patch": "diff --git a/sklearn/linear_model/tests/test_logistic_regression_cv.py b/sklearn/linear_model/tests/test_logistic_regression_cv.py\nnew file mode 100644\nindex 0000000..7cb12d6\n--- /dev/null\n+++ b/sklearn/linear_model/tests/test_logistic_regression_cv.py\n@@ -0,0 +1,14 @@\n+import numpy as np\n+from sklearn.linear_model import LogisticRegressionCV\n+from sklearn.utils.testing import assert_raises\n+\n+def test_logistic_regression_cv_refit_false_index_error():\n+    # Reproduce IndexError when refit=False in LogisticRegressionCV\n+    np.random.seed(29)\n+    X = np.random.normal(size=(1000, 3))\n+    beta = np.random.normal(size=3)\n+    intercept = np.random.normal(size=None)\n+    y = np.sign(intercept + X @ beta)\n+\n+    # Expecting an IndexError due to the issue described\n+    assert_raises(IndexError, LogisticRegressionCV(cv=5, solver='saga', tol=1e-2, refit=False).fit, X, y)\n",
  "inverted_patch": "diff --git a/sklearn/linear_model/tests/test_logistic_regression_cv_inverted.py b/sklearn/linear_model/tests/test_logistic_regression_cv_inverted.py\nnew file mode 100644\nindex 0000000..a2d5bae\n--- /dev/null\n+++ b/sklearn/linear_model/tests/test_logistic_regression_cv_inverted.py\n@@ -0,0 +1,17 @@\n+import numpy as np\n+from sklearn.linear_model import LogisticRegressionCV\n+\n+def test_logistic_regression_cv_refit_false_index_error():\n+    # Reproduce IndexError when refit=False in LogisticRegressionCV\n+    np.random.seed(29)\n+    X = np.random.normal(size=(1000, 3))\n+    beta = np.random.normal(size=3)\n+    intercept = np.random.normal(size=None)\n+    y = np.sign(intercept + X @ beta)\n+\n+    try:\n+        LogisticRegressionCV(cv=5, solver='saga', tol=1e-2, refit=False).fit(X, y)\n+    except IndexError:\n+        raise AssertionError(\"__BUG__HERE__\")\n+    else:\n+        raise AssertionError(\"Expected IndexError was not raised\")\n"
}