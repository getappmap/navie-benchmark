{
  "edit_test_file": "lib/matplotlib/tests/test_legend.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_subfigure_legend.py b/lib/matplotlib/tests/test_subfigure_legend.py\nnew file mode 100644\nindex 0000000..6d04f39\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_subfigure_legend.py\n@@ -0,0 +1,12 @@\n+import pytest\n+import matplotlib.pyplot as plt\n+\n+def test_subfigure_legend_error():\n+    \"\"\"Test that adding a legend to a SubFigure raises TypeError.\"\"\"\n+    fig = plt.figure()\n+    subfig = fig.subfigures()\n+    ax = subfig.subplots()\n+    ax.plot([0, 1, 2], [0, 1, 2], label=\"test\")\n+    \n+    with pytest.raises(TypeError, match=\"Legend needs either Axes or Figure as parent\"):\n+        subfig.legend()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_subfigure_legend_inverted.py b/lib/matplotlib/tests/test_subfigure_legend_inverted.py\nnew file mode 100644\nindex 0000000..f89e6b6\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_subfigure_legend_inverted.py\n@@ -0,0 +1,28 @@\n+def test_subfigure_legend():\n+    \"\"\"Test that adding a legend to a SubFigure works correctly.\"\"\"\n+    import matplotlib.pyplot as plt\n+    \n+    # Create figure and subfigure\n+    fig = plt.figure()\n+    subfig = fig.subfigures()\n+    ax = subfig.subplots()\n+    \n+    # Plot data with label\n+    ax.plot([0, 1, 2], [0, 1, 2], label=\"test\")\n+    \n+    try:\n+        # Attempt to add legend to subfigure\n+        legend = subfig.legend()\n+        \n+        # If we get here without error, check if legend was actually created\n+        if legend is None:\n+            raise AssertionError(\"__BUG__HERE__\")\n+            \n+        # Additional verification that legend is properly attached\n+        if legend not in subfig.legends:\n+            raise AssertionError(\"__BUG__HERE__\")\n+            \n+    except TypeError as e:\n+        if str(e) == \"Legend needs either Axes or Figure as parent\":\n+            raise AssertionError(\"__BUG__HERE__\")\n+        raise e\n\\ No newline at end of file\n"
}