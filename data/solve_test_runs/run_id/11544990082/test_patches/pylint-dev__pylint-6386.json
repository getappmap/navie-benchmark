{
  "edit_test_file": "tests/config/test_config.py",
  "test_patch": "diff --git a/tests/config/test_verbose_option_args.py b/tests/config/test_verbose_option_args.py\nnew file mode 100644\nindex 0000000..fb8262c\n--- /dev/null\n+++ b/tests/config/test_verbose_option_args.py\n@@ -0,0 +1,23 @@\n+# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n+# For details: https://github.com/PyCQA/pylint/blob/main/LICENSE\n+# Copyright (c) https://github.com/PyCQA/pylint/blob/main/CONTRIBUTORS.txt\n+\n+\"\"\"Test for verbose option argument handling.\"\"\"\n+\n+import pytest\n+\n+from pylint.lint import Run\n+from pylint.testutils.configuration_test import run_using_a_configuration_file\n+from tests.config.test_config import EMPTY_MODULE\n+\n+\n+def test_verbose_short_option_expects_argument():\n+    \"\"\"Test that the -v short option incorrectly expects an argument.\"\"\"\n+    with pytest.raises(SystemExit):\n+        Run([str(EMPTY_MODULE), \"-v\"], exit=False)\n+\n+\n+def test_verbose_long_option_works():\n+    \"\"\"Test that the --verbose long option works correctly without argument.\"\"\"\n+    mock_exit, _, runner = run_using_a_configuration_file(\"\", str(EMPTY_MODULE))\n+    mock_exit.assert_called_once_with(0)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/config/test_verbose_option_args_inverted.py b/tests/config/test_verbose_option_args_inverted.py\nnew file mode 100644\nindex 0000000..480d2dd\n--- /dev/null\n+++ b/tests/config/test_verbose_option_args_inverted.py\n@@ -0,0 +1,25 @@\n+# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n+# For details: https://github.com/PyCQA/pylint/blob/main/LICENSE\n+# Copyright (c) https://github.com/PyCQA/pylint/blob/main/CONTRIBUTORS.txt\n+\n+\"\"\"Test for verbose option argument handling.\"\"\"\n+\n+import pytest\n+\n+from pylint.lint import Run\n+from pylint.testutils.configuration_test import run_using_a_configuration_file\n+from tests.config.test_config import EMPTY_MODULE\n+\n+\n+def test_verbose_short_option_expects_argument():\n+    \"\"\"Test that the -v short option should not expect an argument.\"\"\"\n+    try:\n+        Run([str(EMPTY_MODULE), \"-v\"], exit=False)\n+    except SystemExit:\n+        raise AssertionError(\"__BUG__HERE__\")\n+\n+\n+def test_verbose_long_option_works():\n+    \"\"\"Test that the --verbose long option works correctly without argument.\"\"\"\n+    mock_exit, _, runner = run_using_a_configuration_file(\"\", str(EMPTY_MODULE))\n+    mock_exit.assert_called_once_with(0)\n\\ No newline at end of file\n"
}