{
  "edit_test_file": "tests/test_ext_autodoc_configs.py",
  "test_patch": "diff --git a/tests/test_ext_autodoc_union_types.py b/tests/test_ext_autodoc_union_types.py\nnew file mode 100644\nindex 0000000..f6e102c\n--- /dev/null\n+++ b/tests/test_ext_autodoc_union_types.py\n@@ -0,0 +1,27 @@\n+\"\"\"\n+    test_ext_autodoc_union_types\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the autodoc extension's handling of union types using vertical bar syntax.\n+\n+    :copyright: Copyright 2007-2021 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+\n+from sphinx.testing.util import SphinxTestApp\n+\n+from .test_ext_autodoc import do_autodoc\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_union_types_vertical_bar(app: SphinxTestApp):\n+    \"\"\"Test handling of union types using | syntax in docstrings.\"\"\"\n+    options = {}\n+    actual = do_autodoc(app, 'function', 'target.union_types.process_text', options)\n+    \n+    # The test expects empty output since the vertical bar syntax is not supported\n+    # This will pass when the issue exists (no support for | syntax)\n+    # and fail when support is added\n+    assert list(actual) == []\n",
  "inverted_patch": "diff --git a/tests/test_ext_autodoc_union_types_inverted.py b/tests/test_ext_autodoc_union_types_inverted.py\nnew file mode 100644\nindex 0000000..8fc616a\n--- /dev/null\n+++ b/tests/test_ext_autodoc_union_types_inverted.py\n@@ -0,0 +1,41 @@\n+\"\"\"\n+    test_ext_autodoc_union_types\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the autodoc extension's handling of union types using vertical bar syntax.\n+\n+    :copyright: Copyright 2007-2021 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+\n+from sphinx.testing.util import SphinxTestApp\n+\n+from .test_ext_autodoc import do_autodoc\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_union_types_vertical_bar(app: SphinxTestApp):\n+    \"\"\"Test handling of union types using | syntax in docstrings.\"\"\"\n+    options = {}\n+    actual = do_autodoc(app, 'function', 'target.union_types.process_text', options)\n+    \n+    # The test should fail when vertical bar syntax is not supported\n+    # and pass when support is added\n+    expected = [\n+        '',\n+        '.. py:function:: process_text(text)',\n+        '   :module: target.union_types',\n+        '',\n+        '   Process text data',\n+        '',\n+        '   :param text: input text to process',\n+        '   :type text: bytes | str',\n+        ''\n+    ]\n+    \n+    if list(actual) == []:\n+        raise AssertionError(\"__BUG__HERE__\")\n+    \n+    assert list(actual) == expected\n\\ No newline at end of file\n"
}