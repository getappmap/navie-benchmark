{
  "edit_test_file": "tests/dbshell/test_postgresql.py",
  "test_patch": "diff --git a/tests/dbshell/test_postgresql_dbshell_args.py b/tests/dbshell/test_postgresql_dbshell_args.py\nnew file mode 100644\nindex 0000000..6c7838f\n--- /dev/null\n+++ b/tests/dbshell/test_postgresql_dbshell_args.py\n@@ -0,0 +1,45 @@\n+import os\n+import subprocess\n+import sys\n+from pathlib import Path\n+from unittest import mock\n+\n+from django.db import connection\n+from django.db.backends.postgresql.client import DatabaseClient\n+from django.test import SimpleTestCase\n+\n+\n+class PostgreSqlDbshellArgsOrderTestCase(SimpleTestCase):\n+    def settings_to_cmd_args_env(self, settings_dict, parameters=None):\n+        if parameters is None:\n+            parameters = []\n+        return DatabaseClient.settings_to_cmd_args_env(settings_dict, parameters)\n+\n+    def test_parameters_after_dbname(self):\n+        \"\"\"\n+        Test that parameters are incorrectly placed after the database name,\n+        which causes psql to ignore them.\n+        \"\"\"\n+        args, env = self.settings_to_cmd_args_env(\n+            {\n+                \"NAME\": \"dbname\",\n+                \"USER\": \"someuser\",\n+                \"PASSWORD\": \"somepassword\",\n+                \"HOST\": \"somehost\",\n+                \"PORT\": \"444\",\n+            },\n+            [\"-c\", \"SELECT 1;\"],\n+        )\n+        # The current (incorrect) behavior places parameters after dbname\n+        self.assertEqual(\n+            args,\n+            [\n+                \"psql\",\n+                \"-U\", \"someuser\",\n+                \"-h\", \"somehost\",\n+                \"-p\", \"444\",\n+                \"dbname\",  # Database name appears before the parameters\n+                \"-c\",\n+                \"SELECT 1;\",\n+            ],\n+        )\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/dbshell/test_postgresql_dbshell_args_inverted.py b/tests/dbshell/test_postgresql_dbshell_args_inverted.py\nnew file mode 100644\nindex 0000000..7255a1c\n--- /dev/null\n+++ b/tests/dbshell/test_postgresql_dbshell_args_inverted.py\n@@ -0,0 +1,52 @@\n+import os\n+import subprocess\n+import sys\n+from pathlib import Path\n+from unittest import mock\n+\n+from django.db import connection\n+from django.db.backends.postgresql.client import DatabaseClient\n+from django.test import SimpleTestCase\n+\n+\n+class PostgreSqlDbshellArgsOrderTestCase(SimpleTestCase):\n+    def settings_to_cmd_args_env(self, settings_dict, parameters=None):\n+        if parameters is None:\n+            parameters = []\n+        return DatabaseClient.settings_to_cmd_args_env(settings_dict, parameters)\n+\n+    def test_parameters_before_dbname(self):\n+        \"\"\"\n+        Test that parameters must be placed before the database name.\n+        The test will fail if parameters are placed after dbname, which is incorrect\n+        as it causes psql to ignore them.\n+        \"\"\"\n+        args, env = self.settings_to_cmd_args_env(\n+            {\n+                \"NAME\": \"dbname\",\n+                \"USER\": \"someuser\",\n+                \"PASSWORD\": \"somepassword\",\n+                \"HOST\": \"somehost\",\n+                \"PORT\": \"444\",\n+            },\n+            [\"-c\", \"SELECT 1;\"],\n+        )\n+\n+        # Find the position of dbname and parameters in the args list\n+        dbname_index = args.index(\"dbname\")\n+        param_c_index = args.index(\"-c\")\n+        \n+        # The test should fail if dbname appears before the parameters\n+        if dbname_index < param_c_index:\n+            raise AssertionError(\"__BUG__HERE__: Parameters must be placed before database name in psql command\")\n+\n+        # Verify the expected correct order of arguments\n+        expected_args = [\n+            \"psql\",\n+            \"-U\", \"someuser\",\n+            \"-h\", \"somehost\",\n+            \"-p\", \"444\",\n+            \"-c\", \"SELECT 1;\",\n+            \"dbname\",  # Database name should appear last\n+        ]\n+        self.assertEqual(args, expected_args)\n\\ No newline at end of file\n"
}