{
  "edit_test_file": "lib/matplotlib/tests/test_contour.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_boolean_contour.py b/lib/matplotlib/tests/test_boolean_contour.py\nnew file mode 100644\nindex 0000000..3a06821\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_boolean_contour.py\n@@ -0,0 +1,33 @@\n+import numpy as np\n+import matplotlib.pyplot as plt\n+from numpy.testing import assert_array_almost_equal\n+\n+def test_boolean_array_multiple_contours():\n+    \"\"\"\n+    Test that boolean arrays passed to contour() currently produce multiple contour\n+    lines instead of automatically using a single level at 0.5.\n+    \"\"\"\n+    # Create a simple boolean array pattern\n+    ii, jj = np.ogrid[:10, :10]\n+    bool_array = (ii + jj) % 4 < 2\n+\n+    # Create figure with two subplots to compare default vs desired behavior\n+    fig, (ax1, ax2) = plt.subplots(1, 2)\n+    \n+    # Plot with default levels (current behavior)\n+    cs1 = ax1.contour(bool_array)\n+    \n+    # Plot with explicit level at 0.5 (desired behavior)\n+    cs2 = ax2.contour(bool_array, levels=[0.5])\n+    \n+    # The issue is demonstrated by cs1 having multiple levels\n+    # while cs2 has just one level\n+    assert len(cs1.levels) > 1, \"Default contour should create multiple levels\"\n+    assert_array_almost_equal(cs1.levels, \n+                            [0.0, 0.15, 0.3, 0.45, 0.6, 0.75, 0.9, 1.05])\n+    \n+    # This is what we want but don't get automatically\n+    assert len(cs2.levels) == 1, \"Explicit [0.5] level creates single contour\"\n+    assert_array_almost_equal(cs2.levels, [0.5])\n+    \n+    plt.close()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_boolean_contour_inverted.py b/lib/matplotlib/tests/test_boolean_contour_inverted.py\nnew file mode 100644\nindex 0000000..387db91\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_boolean_contour_inverted.py\n@@ -0,0 +1,30 @@\n+import numpy as np\n+import matplotlib.pyplot as plt\n+from numpy.testing import assert_array_almost_equal\n+\n+def test_boolean_array_multiple_contours():\n+    \"\"\"\n+    Test that boolean arrays passed to contour() should automatically use a single\n+    level at 0.5, but currently don't (which is the bug).\n+    \"\"\"\n+    # Create a simple boolean array pattern\n+    ii, jj = np.ogrid[:10, :10]\n+    bool_array = (ii + jj) % 4 < 2\n+\n+    # Create figure and plot with default levels\n+    fig, ax = plt.subplots()\n+    cs = ax.contour(bool_array)\n+    \n+    # The bug is that boolean arrays produce multiple levels instead of\n+    # automatically using a single level at 0.5\n+    if len(cs.levels) > 1:\n+        plt.close()\n+        raise AssertionError(\"__BUG__HERE__\")\n+    \n+    # If we get here (we shouldn't with current implementation),\n+    # verify the correct behavior\n+    assert len(cs.levels) == 1, \"Boolean array should create single contour\"\n+    assert_array_almost_equal(cs.levels, [0.5], \n+                            err_msg=\"Boolean array contour should use level 0.5\")\n+    \n+    plt.close()\n\\ No newline at end of file\n"
}