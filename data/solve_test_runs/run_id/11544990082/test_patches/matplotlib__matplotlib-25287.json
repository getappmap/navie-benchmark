{
  "edit_test_file": "lib/matplotlib/tests/test_axes.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_tick_offset_color.py b/lib/matplotlib/tests/test_tick_offset_color.py\nnew file mode 100644\nindex 0000000..85a6954\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_tick_offset_color.py\n@@ -0,0 +1,19 @@\n+import matplotlib.pyplot as plt\n+import pytest\n+\n+def test_tick_offset_color():\n+    \"\"\"\n+    Test that offset text color follows tick.color instead of tick.labelcolor.\n+    This test passes when the bug is present.\n+    \"\"\"\n+    plt.rcParams.update({'ytick.labelcolor': 'red',\n+                        'ytick.color': 'blue'})\n+    \n+    fig, ax = plt.subplots()\n+    ax.plot([1.01e9, 1.02e9, 1.03e9])\n+    \n+    # When the bug is present, the offset text will be colored according to\n+    # ytick.color (blue) rather than ytick.labelcolor (red)\n+    assert ax.yaxis.get_offset_text().get_color() == 'blue'\n+    \n+    plt.close(fig)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_tick_offset_color_inverted.py b/lib/matplotlib/tests/test_tick_offset_color_inverted.py\nnew file mode 100644\nindex 0000000..00f73cb\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_tick_offset_color_inverted.py\n@@ -0,0 +1,22 @@\n+import matplotlib.pyplot as plt\n+import pytest\n+\n+def test_tick_offset_color():\n+    \"\"\"\n+    Test that offset text color follows tick.labelcolor instead of tick.color.\n+    This test fails when the bug is present.\n+    \"\"\"\n+    plt.rcParams.update({'ytick.labelcolor': 'red',\n+                        'ytick.color': 'blue'})\n+    \n+    fig, ax = plt.subplots()\n+    ax.plot([1.01e9, 1.02e9, 1.03e9])\n+    \n+    # When the bug is present, the offset text will be colored according to\n+    # ytick.color (blue) rather than ytick.labelcolor (red)\n+    offset_text_color = ax.yaxis.get_offset_text().get_color()\n+    if offset_text_color != 'red':\n+        plt.close(fig)\n+        raise AssertionError(\"__BUG__HERE__\")\n+    \n+    plt.close(fig)\n\\ No newline at end of file\n"
}