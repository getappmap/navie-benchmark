{
  "edit_test_file": "sklearn/ensemble/tests/test_voting.py",
  "test_patch": "diff --git a/sklearn/ensemble/tests/test_voting_weights.py b/sklearn/ensemble/tests/test_voting_weights.py\nnew file mode 100644\nindex 0000000..0cbf34b\n--- /dev/null\n+++ b/sklearn/ensemble/tests/test_voting_weights.py\n@@ -0,0 +1,38 @@\n+\"\"\"Testing for VotingClassifier with weights and None estimators\"\"\"\n+\n+import pytest\n+import numpy as np\n+\n+from sklearn.utils.testing import assert_raise_message\n+from sklearn.linear_model import LogisticRegression\n+from sklearn.ensemble import RandomForestClassifier\n+from sklearn.ensemble import VotingClassifier\n+from sklearn.datasets import load_iris\n+\n+def test_voting_weights_with_none_estimator():\n+    \"\"\"Check that VotingClassifier fails correctly when fitting with sample weights\n+    after setting an estimator to None.\"\"\"\n+    \n+    # Load the iris dataset\n+    X, y = load_iris(return_X_y=True)\n+    \n+    # Create sample weights\n+    sample_weight = np.ones(y.shape)\n+    \n+    # Initialize the voting classifier\n+    voter = VotingClassifier(\n+        estimators=[('lr', LogisticRegression()),\n+                   ('rf', RandomForestClassifier())]\n+    )\n+    \n+    # Initial fit should work\n+    voter.fit(X, y, sample_weight=sample_weight)\n+    \n+    # Set one estimator to None\n+    voter.set_params(lr=None)\n+    \n+    # Attempting to fit with sample weights after setting estimator to None\n+    # should raise AttributeError\n+    msg = \"'NoneType' object has no attribute 'fit'\"\n+    assert_raise_message(AttributeError, msg, voter.fit, X, y, \n+                        sample_weight=sample_weight)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/ensemble/tests/test_voting_weights_inverted.py b/sklearn/ensemble/tests/test_voting_weights_inverted.py\nnew file mode 100644\nindex 0000000..82c391c\n--- /dev/null\n+++ b/sklearn/ensemble/tests/test_voting_weights_inverted.py\n@@ -0,0 +1,41 @@\n+\"\"\"Testing for VotingClassifier with weights and None estimators\"\"\"\n+\n+import pytest\n+import numpy as np\n+\n+from sklearn.utils.testing import assert_raises\n+from sklearn.linear_model import LogisticRegression\n+from sklearn.ensemble import RandomForestClassifier\n+from sklearn.ensemble import VotingClassifier\n+from sklearn.datasets import load_iris\n+\n+def test_voting_weights_with_none_estimator():\n+    \"\"\"Check that VotingClassifier should handle None estimators properly when\n+    fitting with sample weights.\"\"\"\n+    \n+    # Load the iris dataset\n+    X, y = load_iris(return_X_y=True)\n+    \n+    # Create sample weights\n+    sample_weight = np.ones(y.shape)\n+    \n+    # Initialize the voting classifier\n+    voter = VotingClassifier(\n+        estimators=[('lr', LogisticRegression()),\n+                   ('rf', RandomForestClassifier())]\n+    )\n+    \n+    # Initial fit should work\n+    voter.fit(X, y, sample_weight=sample_weight)\n+    \n+    # Set one estimator to None\n+    voter.set_params(lr=None)\n+    \n+    # Attempting to fit with sample weights after setting estimator to None\n+    # should be handled gracefully, but currently fails\n+    try:\n+        voter.fit(X, y, sample_weight=sample_weight)\n+    except AttributeError as e:\n+        if str(e) == \"'NoneType' object has no attribute 'fit'\":\n+            raise AssertionError(\"__BUG__HERE__\")\n+        raise e\n\\ No newline at end of file\n"
}