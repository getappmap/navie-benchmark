{
  "edit_test_file": "xarray/tests/test_groupby.py",
  "test_patch": "diff --git a/xarray/tests/test_coarsen_coordinates.py b/xarray/tests/test_coarsen_coordinates.py\nnew file mode 100644\nindex 0000000..84bafc2\n--- /dev/null\n+++ b/xarray/tests/test_coarsen_coordinates.py\n@@ -0,0 +1,22 @@\n+import numpy as np\n+import pytest\n+import xarray as xr\n+from xarray import DataArray\n+\n+\n+def test_coarsen_construct_demotes_coordinates():\n+    # Create a dataset with a non-dimensional coordinate\n+    da = DataArray(np.arange(24), dims=[\"time\"])\n+    da = da.assign_coords(day=365 * da)\n+    ds = da.to_dataset(name=\"T\")\n+\n+    # Verify initial state has 'day' as a coordinate\n+    assert \"day\" in ds.coords\n+    assert \"day\" not in ds.data_vars\n+\n+    # Apply coarsen.construct operation\n+    result = ds.coarsen(time=12).construct(time=(\"year\", \"month\"))\n+\n+    # Verify that 'day' is incorrectly demoted to a data variable\n+    assert \"day\" not in result.coords\n+    assert \"day\" in result.data_vars\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/xarray/tests/test_coarsen_coordinates_inverted.py b/xarray/tests/test_coarsen_coordinates_inverted.py\nnew file mode 100644\nindex 0000000..2c26052\n--- /dev/null\n+++ b/xarray/tests/test_coarsen_coordinates_inverted.py\n@@ -0,0 +1,22 @@\n+import numpy as np\n+import pytest\n+import xarray as xr\n+from xarray import DataArray\n+\n+\n+def test_coarsen_construct_coordinates_should_remain():\n+    # Create a dataset with a non-dimensional coordinate\n+    da = DataArray(np.arange(24), dims=[\"time\"])\n+    da = da.assign_coords(day=365 * da)\n+    ds = da.to_dataset(name=\"T\")\n+\n+    # Verify initial state has 'day' as a coordinate\n+    assert \"day\" in ds.coords\n+    assert \"day\" not in ds.data_vars\n+\n+    # Apply coarsen.construct operation\n+    result = ds.coarsen(time=12).construct(time=(\"year\", \"month\"))\n+\n+    # Test should fail if 'day' is not in coordinates\n+    if \"day\" not in result.coords:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}