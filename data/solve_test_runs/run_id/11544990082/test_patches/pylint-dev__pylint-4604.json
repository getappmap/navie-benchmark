{
  "edit_test_file": "tests/test_self.py",
  "test_patch": "diff --git a/tests/test_unused_import_type_comments.py b/tests/test_unused_import_type_comments.py\nnew file mode 100644\nindex 0000000..5cc5803\n--- /dev/null\n+++ b/tests/test_unused_import_type_comments.py\n@@ -0,0 +1,28 @@\n+import sys\n+from io import StringIO\n+from unittest import mock\n+\n+from pylint.lint import Run\n+\n+\n+def test_unused_import_type_comments():\n+    \"\"\"Test that unused-import is incorrectly emitted for modules used in type comments.\"\"\"\n+    test_file = \"\"\"\\\"\\\"\\\"Docstring.\\\"\\\"\\\"\n+\n+import abc\n+from abc import ABC\n+\n+X = ...  # type: abc.ABC\n+Y = ...  # type: ABC\n+\"\"\"\n+    out = StringIO()\n+    with mock.patch('sys.stdout', new=out):\n+        with mock.patch('sys.stderr', new=StringIO()):\n+            with mock.patch('pylint.lint.pylinter._read_stdin', return_value=test_file):\n+                with mock.patch('sys.exit'):\n+                    Run(['--from-stdin', 'test.py', '--disable=all', '--enable=unused-import'])\n+    \n+    output = out.getvalue()\n+    # Verify the incorrect behavior - unused-import warning is emitted\n+    assert \"unused-import\" in output\n+    assert \"Unused import abc\" in output\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/test_unused_import_type_comments_inverted.py b/tests/test_unused_import_type_comments_inverted.py\nnew file mode 100644\nindex 0000000..660c29f\n--- /dev/null\n+++ b/tests/test_unused_import_type_comments_inverted.py\n@@ -0,0 +1,29 @@\n+import sys\n+from io import StringIO\n+from unittest import mock\n+\n+from pylint.lint import Run\n+\n+\n+def test_unused_import_type_comments():\n+    \"\"\"Test that unused-import is incorrectly emitted for modules used in type comments.\"\"\"\n+    test_file = \"\"\"\\\"\\\"\\\"Docstring.\\\"\\\"\\\"\n+\n+import abc\n+from abc import ABC\n+\n+X = ...  # type: abc.ABC\n+Y = ...  # type: ABC\n+\"\"\"\n+    out = StringIO()\n+    with mock.patch('sys.stdout', new=out):\n+        with mock.patch('sys.stderr', new=StringIO()):\n+            with mock.patch('pylint.lint.pylinter._read_stdin', return_value=test_file):\n+                with mock.patch('sys.exit'):\n+                    Run(['--from-stdin', 'test.py', '--disable=all', '--enable=unused-import'])\n+    \n+    output = out.getvalue()\n+    \n+    # The test should now FAIL when the bug is present\n+    if \"unused-import\" in output and \"Unused import abc\" in output:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}