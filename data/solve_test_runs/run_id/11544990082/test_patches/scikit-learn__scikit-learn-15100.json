{
  "edit_test_file": "sklearn/feature_extraction/tests/test_text.py",
  "test_patch": "diff --git a/sklearn/feature_extraction/tests/test_strip_accents_unicode.py b/sklearn/feature_extraction/tests/test_strip_accents_unicode.py\nnew file mode 100644\nindex 0000000..c497bae\n--- /dev/null\n+++ b/sklearn/feature_extraction/tests/test_strip_accents_unicode.py\n@@ -0,0 +1,12 @@\n+from sklearn.feature_extraction.text import strip_accents_unicode\n+\n+def test_strip_accents_unicode_nfkd_form():\n+    # String with single code point (LATIN SMALL LETTER N WITH TILDE)\n+    s1 = chr(241)  # \u00f1\n+\n+    # String with two code points (LATIN SMALL LETTER N + COMBINING TILDE)\n+    s2 = chr(110) + chr(771)  # n + \u0303\n+\n+    # Both strings should look identical when printed\n+    assert strip_accents_unicode(s1) == 'n'  # Works correctly\n+    assert strip_accents_unicode(s2) == s2   # Issue: Returns original string unchanged\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/feature_extraction/tests/test_strip_accents_unicode_inverted.py b/sklearn/feature_extraction/tests/test_strip_accents_unicode_inverted.py\nnew file mode 100644\nindex 0000000..2001d08\n--- /dev/null\n+++ b/sklearn/feature_extraction/tests/test_strip_accents_unicode_inverted.py\n@@ -0,0 +1,16 @@\n+from sklearn.feature_extraction.text import strip_accents_unicode\n+\n+def test_strip_accents_unicode_nfkd_form():\n+    # String with single code point (LATIN SMALL LETTER N WITH TILDE)\n+    s1 = chr(241)  # \u00f1\n+\n+    # String with two code points (LATIN SMALL LETTER N + COMBINING TILDE)\n+    s2 = chr(110) + chr(771)  # n + \u0303\n+\n+    # First verify that strip_accents_unicode works correctly for s1\n+    assert strip_accents_unicode(s1) == 'n'\n+\n+    # Now test s2 - this should fail when the bug is present\n+    result = strip_accents_unicode(s2)\n+    if result != 'n':\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}