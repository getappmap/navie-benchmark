{
  "edit_test_file": "tests/fixtures_regress/tests.py",
  "test_patch": "diff --git a/tests/fixtures_regress/test_fixture_dir_path_duplicates.py b/tests/fixtures_regress/test_fixture_dir_path_duplicates.py\nnew file mode 100644\nindex 0000000..d499759\n--- /dev/null\n+++ b/tests/fixtures_regress/test_fixture_dir_path_duplicates.py\n@@ -0,0 +1,25 @@\n+from pathlib import Path\n+import os\n+\n+from django.core.management import call_command\n+from django.test import TestCase, override_settings\n+from django.core.exceptions import ImproperlyConfigured\n+\n+_cur_dir = os.path.dirname(os.path.abspath(__file__))\n+\n+class FixtureDirPathDuplicatesTests(TestCase):\n+    \"\"\"Test duplicate fixture dir detection with Path instances.\"\"\"\n+\n+    @override_settings(\n+        FIXTURE_DIRS=[\n+            Path(_cur_dir) / \"fixtures_1\",\n+            str(Path(_cur_dir) / \"fixtures_1\"),  # Same dir as above but as string\n+        ]\n+    )\n+    def test_fixture_dir_path_duplicates(self):\n+        \"\"\"\n+        Using Path instances in FIXTURE_DIRS should detect duplicates just like\n+        string paths, but currently doesn't.\n+        \"\"\"\n+        # This should raise ImproperlyConfigured but doesn't due to the bug\n+        call_command(\"loaddata\", \"absolute.json\", verbosity=0)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/fixtures_regress/test_fixture_dir_path_duplicates_inverted.py b/tests/fixtures_regress/test_fixture_dir_path_duplicates_inverted.py\nnew file mode 100644\nindex 0000000..1b9c615\n--- /dev/null\n+++ b/tests/fixtures_regress/test_fixture_dir_path_duplicates_inverted.py\n@@ -0,0 +1,29 @@\n+from pathlib import Path\n+import os\n+\n+from django.core.management import call_command\n+from django.test import TestCase, override_settings\n+from django.core.exceptions import ImproperlyConfigured\n+\n+_cur_dir = os.path.dirname(os.path.abspath(__file__))\n+\n+class FixtureDirPathDuplicatesTests(TestCase):\n+    \"\"\"Test duplicate fixture dir detection with Path instances.\"\"\"\n+\n+    @override_settings(\n+        FIXTURE_DIRS=[\n+            Path(_cur_dir) / \"fixtures_1\",\n+            str(Path(_cur_dir) / \"fixtures_1\"),  # Same dir as above but as string\n+        ]\n+    )\n+    def test_fixture_dir_path_duplicates(self):\n+        \"\"\"\n+        Using Path instances in FIXTURE_DIRS should detect duplicates just like\n+        string paths, but currently doesn't.\n+        \"\"\"\n+        try:\n+            call_command(\"loaddata\", \"absolute.json\", verbosity=0)\n+            raise AssertionError(\"__BUG__HERE__\")  # If we get here, the bug exists\n+        except ImproperlyConfigured:\n+            # This is the expected behavior - duplicate paths should be detected\n+            pass\n\\ No newline at end of file\n"
}