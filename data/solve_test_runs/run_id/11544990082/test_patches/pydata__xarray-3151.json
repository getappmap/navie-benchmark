{
  "edit_test_file": "xarray/tests/test_combine.py",
  "test_patch": "diff --git a/xarray/tests/test_combine_coords_monotonic.py b/xarray/tests/test_combine_coords_monotonic.py\nnew file mode 100644\nindex 0000000..e831e87\n--- /dev/null\n+++ b/xarray/tests/test_combine_coords_monotonic.py\n@@ -0,0 +1,33 @@\n+import numpy as np\n+import pytest\n+import xarray as xr\n+from xarray import Dataset, combine_by_coords\n+\n+def test_combine_by_coords_identical_non_monotonic():\n+    \"\"\"Test that combine_by_coords raises ValueError with identical non-monotonic coordinates.\"\"\"\n+    \n+    # Create first dataset with non-monotonic y coordinate\n+    ds1 = Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(3, 3))\n+        ),\n+        coords=dict(\n+            x=[1, 2, 3],\n+            y=['a', 'c', 'b']  # Non-monotonic coordinate\n+        )\n+    )\n+\n+    # Create second dataset with identical non-monotonic y coordinate\n+    ds2 = Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(4, 3))\n+        ),\n+        coords=dict(\n+            x=[4, 5, 6, 7],\n+            y=['a', 'c', 'b']  # Same non-monotonic coordinate\n+        )\n+    )\n+\n+    # Test that ValueError is raised when combining datasets\n+    with pytest.raises(ValueError, match=\"does not have monotonic global indexes along dimension y\"):\n+        combine_by_coords([ds1, ds2])\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/xarray/tests/test_combine_coords_monotonic_inverted.py b/xarray/tests/test_combine_coords_monotonic_inverted.py\nnew file mode 100644\nindex 0000000..a97d1a8\n--- /dev/null\n+++ b/xarray/tests/test_combine_coords_monotonic_inverted.py\n@@ -0,0 +1,41 @@\n+import numpy as np\n+import pytest\n+import xarray as xr\n+from xarray import Dataset, combine_by_coords\n+\n+def test_combine_by_coords_identical_non_monotonic():\n+    \"\"\"Test that combine_by_coords should work with identical non-monotonic coordinates.\"\"\"\n+    \n+    # Create first dataset with non-monotonic y coordinate\n+    ds1 = Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(3, 3))\n+        ),\n+        coords=dict(\n+            x=[1, 2, 3],\n+            y=['a', 'c', 'b']  # Non-monotonic coordinate\n+        )\n+    )\n+\n+    # Create second dataset with identical non-monotonic y coordinate\n+    ds2 = Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(4, 3))\n+        ),\n+        coords=dict(\n+            x=[4, 5, 6, 7],\n+            y=['a', 'c', 'b']  # Same non-monotonic coordinate\n+        )\n+    )\n+\n+    try:\n+        result = combine_by_coords([ds1, ds2])\n+    except ValueError as e:\n+        if \"does not have monotonic global indexes along dimension y\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\") from e\n+        raise  # Re-raise if it's a different ValueError\n+\n+    # If we get here, the combination succeeded as it should\n+    assert isinstance(result, Dataset)\n+    assert result.dims['x'] == 7  # Combined x dimension should have length 7\n+    assert list(result.y.values) == ['a', 'c', 'b']  # Y coordinates should be preserved\n\\ No newline at end of file\n"
}