{
  "edit_test_file": "tests/test_markup.py",
  "test_patch": "diff --git a/tests/test_rst_prolog_domain_heading.py b/tests/test_rst_prolog_domain_heading.py\nnew file mode 100644\nindex 0000000..b435cdd\n--- /dev/null\n+++ b/tests/test_rst_prolog_domain_heading.py\n@@ -0,0 +1,48 @@\n+\"\"\"Test rst_prolog interaction with domain directives in headings.\"\"\"\n+\n+import pytest\n+\n+\n+@pytest.mark.sphinx('html', testroot='basic')\n+def test_rst_prolog_domain_heading(app):\n+    # Set up test documents\n+    app.env.config.rst_prolog = \"\"\"\n+    .. |psf| replace:: Python Software Foundation\n+    \"\"\"\n+\n+    index_text = '''\n+Welcome\n+=======\n+\n+.. toctree::\n+\n+   mypackage\n+'''\n+\n+    mypackage_text = '''\n+:mod:`mypackage2`\n+================\n+\n+Content\n+\n+Subheading\n+----------\n+'''\n+\n+    (app.srcdir / 'index.rst').write_text(index_text)\n+    (app.srcdir / 'mypackage.rst').write_text(mypackage_text)\n+\n+    app.builder.build_all()\n+\n+    # Get the rendered HTML content for both files\n+    index_html = (app.outdir / 'index.html').read_text()\n+    mypackage_html = (app.outdir / 'mypackage.html').read_text()\n+\n+    # The issue manifests as the heading not being rendered as a proper heading\n+    # when rst_prolog is set. We verify this by checking that the module name\n+    # is not rendered as a heading in the mypackage.html file\n+    assert '<h1>mypackage2' not in mypackage_html\n+\n+    # Also verify that the module link is not properly included in the toctree\n+    # by checking the index page's toctree structure\n+    assert '<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"mypackage.html\">mypackage2</a></li>' not in index_html\n",
  "inverted_patch": "diff --git a/tests/test_rst_prolog_domain_heading_inverted.py b/tests/test_rst_prolog_domain_heading_inverted.py\nnew file mode 100644\nindex 0000000..24a06ed\n--- /dev/null\n+++ b/tests/test_rst_prolog_domain_heading_inverted.py\n@@ -0,0 +1,49 @@\n+\"\"\"Test rst_prolog interaction with domain directives in headings.\"\"\"\n+\n+import pytest\n+\n+\n+@pytest.mark.sphinx('html', testroot='basic')\n+def test_rst_prolog_domain_heading(app):\n+    # Set up test documents\n+    app.env.config.rst_prolog = \"\"\"\n+    .. |psf| replace:: Python Software Foundation\n+    \"\"\"\n+\n+    index_text = '''\n+Welcome\n+=======\n+\n+.. toctree::\n+\n+   mypackage\n+'''\n+\n+    mypackage_text = '''\n+:mod:`mypackage2`\n+================\n+\n+Content\n+\n+Subheading\n+----------\n+'''\n+\n+    (app.srcdir / 'index.rst').write_text(index_text)\n+    (app.srcdir / 'mypackage.rst').write_text(mypackage_text)\n+\n+    app.builder.build_all()\n+\n+    # Get the rendered HTML content for both files\n+    index_html = (app.outdir / 'index.html').read_text()\n+    mypackage_html = (app.outdir / 'mypackage.html').read_text()\n+\n+    # The heading should be rendered properly and contain 'mypackage2'\n+    # This will fail when the bug is present\n+    if '<h1>mypackage2' not in mypackage_html:\n+        raise AssertionError(\"__BUG__HERE__\")\n+\n+    # The module link should be properly included in the toctree\n+    # This will fail when the bug is present\n+    if '<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"mypackage.html\">mypackage2</a></li>' not in index_html:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}