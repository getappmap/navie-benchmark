{
  "edit_test_file": "sklearn/svm/tests/test_sparse.py",
  "test_patch": "diff --git a/sklearn/svm/tests/test_svm_sparse_zerodivision.py b/sklearn/svm/tests/test_svm_sparse_zerodivision.py\nnew file mode 100644\nindex 0000000..c33c7e9\n--- /dev/null\n+++ b/sklearn/svm/tests/test_svm_sparse_zerodivision.py\n@@ -0,0 +1,24 @@\n+import numpy as np\n+import pytest\n+from scipy import sparse\n+from sklearn.svm import SVR\n+\n+def test_svm_sparse_zerodivision():\n+    # Prepare the training data\n+    x_train = np.array([[0, 1, 0, 0],\n+                        [0, 0, 0, 1],\n+                        [0, 0, 1, 0],\n+                        [0, 0, 0, 1]])\n+    y_train = np.array([0.04, 0.04, 0.10, 0.16])\n+\n+    # Initialize the SVR model\n+    model = SVR(C=316.227766017, cache_size=200, coef0=0.0, degree=3, epsilon=0.1,\n+                gamma=1.0, kernel='linear', max_iter=15000,\n+                shrinking=True, tol=0.001, verbose=False)\n+\n+    # Convert x_train to sparse format\n+    x_train_sparse = sparse.csr_matrix(x_train)\n+\n+    # Expect ZeroDivisionError when fitting with sparse data\n+    with pytest.raises(ZeroDivisionError):\n+        model.fit(x_train_sparse, y_train)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/svm/tests/test_svm_sparse_zerodivision_inverted.py b/sklearn/svm/tests/test_svm_sparse_zerodivision_inverted.py\nnew file mode 100644\nindex 0000000..e2be4ee\n--- /dev/null\n+++ b/sklearn/svm/tests/test_svm_sparse_zerodivision_inverted.py\n@@ -0,0 +1,26 @@\n+import numpy as np\n+import pytest\n+from scipy import sparse\n+from sklearn.svm import SVR\n+\n+def test_svm_sparse_zerodivision():\n+    # Prepare the training data\n+    x_train = np.array([[0, 1, 0, 0],\n+                        [0, 0, 0, 1],\n+                        [0, 0, 1, 0],\n+                        [0, 0, 0, 1]])\n+    y_train = np.array([0.04, 0.04, 0.10, 0.16])\n+\n+    # Initialize the SVR model\n+    model = SVR(C=316.227766017, cache_size=200, coef0=0.0, degree=3, epsilon=0.1,\n+                gamma=1.0, kernel='linear', max_iter=15000,\n+                shrinking=True, tol=0.001, verbose=False)\n+\n+    # Convert x_train to sparse format\n+    x_train_sparse = sparse.csr_matrix(x_train)\n+\n+    # Check for ZeroDivisionError when fitting with sparse data\n+    try:\n+        model.fit(x_train_sparse, y_train)\n+    except ZeroDivisionError:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}