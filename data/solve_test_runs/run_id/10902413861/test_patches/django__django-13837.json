{
  "edit_test_file": "tests/utils_tests/test_autoreload.py",
  "test_patch": "diff --git a/tests/utils_tests/test_autoreload_runserver.py b/tests/utils_tests/test_autoreload_runserver.py\nnew file mode 100644\nindex 0000000..38c8b80\n--- /dev/null\n+++ b/tests/utils_tests/test_autoreload_runserver.py\n@@ -0,0 +1,12 @@\n+import sys\n+from unittest import mock\n+from django.test import SimpleTestCase\n+from django.utils import autoreload\n+\n+class TestRunserverAutoreload(SimpleTestCase):\n+    @mock.patch('sys.argv', ['-m', 'pkg_other_than_django', 'runserver'])\n+    @mock.patch('sys.warnoptions', [])\n+    def test_runserver_with_pkg_other_than_django(self):\n+        with self.assertRaises(RuntimeError) as cm:\n+            autoreload.get_child_arguments()\n+        self.assertEqual(str(cm.exception), 'Script -m does not exist.')\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/utils_tests/test_autoreload_runserver_inverted.py b/tests/utils_tests/test_autoreload_runserver_inverted.py\nnew file mode 100644\nindex 0000000..edc0adb\n--- /dev/null\n+++ b/tests/utils_tests/test_autoreload_runserver_inverted.py\n@@ -0,0 +1,12 @@\n+import sys\n+from unittest import mock\n+from django.test import SimpleTestCase\n+from django.utils import autoreload\n+\n+class TestRunserverAutoreload(SimpleTestCase):\n+    @mock.patch('sys.argv', ['-m', 'pkg_other_than_django', 'runserver'])\n+    @mock.patch('sys.warnoptions', [])\n+    def test_runserver_with_pkg_other_than_django(self):\n+        with self.assertRaises(RuntimeError) as cm:\n+            autoreload.get_child_arguments()\n+        self.assertEqual(str(cm.exception), '__BUG__HERE__')\n\\ No newline at end of file\n"
}