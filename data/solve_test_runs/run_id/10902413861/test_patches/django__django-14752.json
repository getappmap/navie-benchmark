{
  "edit_test_file": "tests/modeladmin/test_checks.py",
  "test_patch": "diff --git a/tests/modeladmin/test_autocomplete_json_view_refactor.py b/tests/modeladmin/test_autocomplete_json_view_refactor.py\nnew file mode 100644\nindex 0000000..cec4911\n--- /dev/null\n+++ b/tests/modeladmin/test_autocomplete_json_view_refactor.py\n@@ -0,0 +1,33 @@\n+from django.contrib import admin\n+from django.contrib.admin.views.autocomplete import AutocompleteJsonView\n+from django.core.exceptions import PermissionDenied\n+from django.http import JsonResponse\n+from django.test import RequestFactory, SimpleTestCase\n+from django.urls import path\n+\n+from .models import Band\n+\n+class CustomAutocompleteJsonView(AutocompleteJsonView):\n+    def get(self, request, *args, **kwargs):\n+        self.term, self.model_admin, self.source_field, to_field_name = self.process_request(request)\n+        if not self.has_perm(request):\n+            raise PermissionDenied\n+        self.object_list = self.get_queryset()\n+        context = self.get_context_data()\n+        return JsonResponse({\n+            'results': [\n+                {'id': str(getattr(obj, to_field_name)), 'text': str(obj), 'notes': obj.notes}\n+                for obj in context['object_list']\n+            ],\n+            'pagination': {'more': context['page_obj'].has_next()},\n+        })\n+\n+class AutocompleteJsonViewTests(SimpleTestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.admin_site = admin.AdminSite()\n+\n+    def test_custom_autocomplete_json_view(self):\n+        request = self.factory.get('/autocomplete/', {'term': 'test'})\n+        with self.assertRaises(PermissionDenied):\n+            CustomAutocompleteJsonView.as_view(admin_site=self.admin_site)(request)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/modeladmin/test_autocomplete_json_view_refactor_inverted.py b/tests/modeladmin/test_autocomplete_json_view_refactor_inverted.py\nnew file mode 100644\nindex 0000000..0c11765\n--- /dev/null\n+++ b/tests/modeladmin/test_autocomplete_json_view_refactor_inverted.py\n@@ -0,0 +1,35 @@\n+from django.contrib import admin\n+from django.contrib.admin.views.autocomplete import AutocompleteJsonView\n+from django.core.exceptions import PermissionDenied\n+from django.http import JsonResponse\n+from django.test import RequestFactory, SimpleTestCase\n+from django.urls import path\n+\n+from .models import Band\n+\n+class CustomAutocompleteJsonView(AutocompleteJsonView):\n+    def get(self, request, *args, **kwargs):\n+        self.term, self.model_admin, self.source_field, to_field_name = self.process_request(request)\n+        if not self.has_perm(request):\n+            raise PermissionDenied\n+        self.object_list = self.get_queryset()\n+        context = self.get_context_data()\n+        return JsonResponse({\n+            'results': [\n+                {'id': str(getattr(obj, to_field_name)), 'text': str(obj), 'notes': obj.notes}\n+                for obj in context['object_list']\n+            ],\n+            'pagination': {'more': context['page_obj'].has_next()},\n+        })\n+\n+class AutocompleteJsonViewTests(SimpleTestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.admin_site = admin.AdminSite()\n+\n+    def test_custom_autocomplete_json_view(self):\n+        request = self.factory.get('/autocomplete/', {'term': 'test'})\n+        try:\n+            CustomAutocompleteJsonView.as_view(admin_site=self.admin_site)(request)\n+        except PermissionDenied:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}