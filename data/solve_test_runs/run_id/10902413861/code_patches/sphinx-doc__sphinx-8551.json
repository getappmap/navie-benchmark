{
  "instance_id": "sphinx-doc__sphinx-8551",
  "edit_test_file": null,
  "code_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 79d7e4f..4a4ac17 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -1248,6 +1248,18 @@ class PythonDomain(Domain):\n \n         matches = []  # type: List[Tuple[str, ObjectEntry]]\n \n+        # Adjust search order: current module, parent modules, then others\n+        search_modules = [modname] if modname else []\n+        if modname:\n+            parts = modname.split('.')\n+            for i in range(len(parts) - 1, 0, -1):\n+                search_modules.append('.'.join(parts[:i]))\n+\n+        for module in search_modules:\n+            if module + '.' + name in self.objects:\n+                matches.append((module + '.' + name, self.objects[module + '.' + name]))\n+                break\n+\n         newname = None\n         if searchmode == 1:\n             if type is None:\n@@ -1260,10 +1272,12 @@ class PythonDomain(Domain):\n                     if fullname in self.objects and self.objects[fullname].objtype in objtypes:\n                         newname = fullname\n                 if not newname:\n-                    if modname and modname + '.' + name in self.objects and \\\n-                       self.objects[modname + '.' + name].objtype in objtypes:\n-                        newname = modname + '.' + name\n-                    elif name in self.objects and self.objects[name].objtype in objtypes:\n+                    for module in search_modules:\n+                        if module + '.' + name in self.objects and \\\n+                           self.objects[module + '.' + name].objtype in objtypes:\n+                            newname = module + '.' + name\n+                            break\n+                    if not newname and name in self.objects and self.objects[name].objtype in objtypes:\n                         newname = name\n                     else:\n                         # \"fuzzy\" searching mode\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 376466,
  "num_received_chars": 11201,
  "elapsed_time": 96.23287510871887,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 0,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}