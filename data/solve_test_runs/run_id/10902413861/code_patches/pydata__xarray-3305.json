{
  "instance_id": "pydata__xarray-3305",
  "edit_test_file": "xarray/tests/test_dataarray.py",
  "code_patch": "diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex 807badd..10ff9c5 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -2875,7 +2875,10 @@ class DataArray(AbstractArray, DataWithCoords):\n         ds = self._to_temp_dataset().quantile(\n             q, dim=dim, keep_attrs=keep_attrs, interpolation=interpolation\n         )\n-        return self._from_temp_dataset(ds)\n+        result = self._from_temp_dataset(ds)\n+        if keep_attrs:\n+            result.attrs = self.attrs\n+        return result\n \n     def rank(\n         self, dim: Hashable, pct: bool = False, keep_attrs: bool = None\n",
  "test_patch": "diff --git a/xarray/tests/test_dataarray_quantile.py b/xarray/tests/test_dataarray_quantile.py\nnew file mode 100644\nindex 0000000..bbc96e6\n--- /dev/null\n+++ b/xarray/tests/test_dataarray_quantile.py\n@@ -0,0 +1,11 @@\n+import xarray as xr\n+import unittest\n+\n+class TestDataArrayQuantile(unittest.TestCase):\n+    def test_quantile_keep_attrs(self):\n+        da = xr.DataArray([0, 0], dims=\"x\", attrs={'units': 'K'})\n+        out = da.quantile(.9, dim='x', keep_attrs=True)\n+        self.assertEqual(out.attrs, {})\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/xarray/tests/test_dataarray_quantile_inverted.py b/xarray/tests/test_dataarray_quantile_inverted.py\nnew file mode 100644\nindex 0000000..7633c1d\n--- /dev/null\n+++ b/xarray/tests/test_dataarray_quantile_inverted.py\n@@ -0,0 +1,13 @@\n+import xarray as xr\n+import unittest\n+\n+class TestDataArrayQuantile(unittest.TestCase):\n+    def test_quantile_keep_attrs(self):\n+        da = xr.DataArray([0, 0], dims=\"x\", attrs={'units': 'K'})\n+        out = da.quantile(.9, dim='x', keep_attrs=True)\n+        # The test should now fail if the attributes are not kept\n+        if out.attrs != {'units': 'K'}:\n+            raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "num_sent_chars": 508001,
  "num_received_chars": 6495,
  "elapsed_time": 124.59554195404053,
  "lint_repair_count": 0,
  "test_generation_attempts": 1,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}