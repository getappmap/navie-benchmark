{
  "instance_id": "pydata__xarray-4629",
  "edit_test_file": "xarray/tests/test_merge.py",
  "code_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex ca4e29b..b7722e2 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -501,7 +501,7 @@ def merge_attrs(variable_attrs, combine_attrs):\n     if combine_attrs == \"drop\":\n         return {}\n     elif combine_attrs == \"override\":\n-        return variable_attrs[0]\n+        return dict(variable_attrs[0])  # Create a shallow copy of the attributes\n     elif combine_attrs == \"no_conflicts\":\n         result = dict(variable_attrs[0])\n         for attrs in variable_attrs[1:]:\n",
  "test_patch": "diff --git a/xarray/tests/test_merge_attrs.py b/xarray/tests/test_merge_attrs.py\nnew file mode 100644\nindex 0000000..a835130\n--- /dev/null\n+++ b/xarray/tests/test_merge_attrs.py\n@@ -0,0 +1,19 @@\n+import xarray as xr\n+\n+def test_merge_override_attrs_reference_issue():\n+    xds1 = xr.Dataset(attrs={'a': 'b'})\n+    xds2 = xr.Dataset(attrs={'a': 'c'})\n+    xds3 = xr.merge([xds1, xds2], combine_attrs='override')\n+    \n+    # Check initial attribute values\n+    assert xds1.attrs['a'] == 'b'\n+    assert xds2.attrs['a'] == 'c'\n+    assert xds3.attrs['a'] == 'b'\n+    \n+    # Modify the attribute in the merged dataset\n+    xds3.attrs['a'] = 'd'\n+    \n+    # Check if the change is reflected in the first source, which it should not be\n+    assert xds1.attrs['a'] == 'd', \"Attribute change in merged dataset affected the first source\"\n+    assert xds2.attrs['a'] == 'c'\n+    assert xds3.attrs['a'] == 'd'\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/xarray/tests/test_merge_attrs_inverted.py b/xarray/tests/test_merge_attrs_inverted.py\nnew file mode 100644\nindex 0000000..ed4bbb8\n--- /dev/null\n+++ b/xarray/tests/test_merge_attrs_inverted.py\n@@ -0,0 +1,20 @@\n+import xarray as xr\n+\n+def test_merge_override_attrs_reference_issue():\n+    xds1 = xr.Dataset(attrs={'a': 'b'})\n+    xds2 = xr.Dataset(attrs={'a': 'c'})\n+    xds3 = xr.merge([xds1, xds2], combine_attrs='override')\n+    \n+    # Check initial attribute values\n+    assert xds1.attrs['a'] == 'b'\n+    assert xds2.attrs['a'] == 'c'\n+    assert xds3.attrs['a'] == 'b'\n+    \n+    # Modify the attribute in the merged dataset\n+    xds3.attrs['a'] = 'd'\n+    \n+    # Check if the change is reflected in the first source, which it should not be\n+    # This assertion should now fail if the bug is present\n+    assert xds1.attrs['a'] == 'b', \"__BUG__HERE__\"\n+    assert xds2.attrs['a'] == 'c'\n+    assert xds3.attrs['a'] == 'd'\n\\ No newline at end of file\n",
  "num_sent_chars": 446360,
  "num_received_chars": 5894,
  "elapsed_time": 184.45347952842712,
  "lint_repair_count": 0,
  "test_generation_attempts": 1,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}