{
  "instance_id": "django__django-15554",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 54f3258..8bfe2e8 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1598,6 +1598,9 @@ class Query(BaseExpression):\n                         \"relations deeper than the relation_name (got %r for \"\n                         \"%r).\" % (lookup, filtered_relation.relation_name)\n                     )\n+        # Ensure unique alias for each FilteredRelation\n+        if filtered_relation.alias in self._filtered_relations:\n+            filtered_relation.alias = f\"{filtered_relation.alias}_{len(self._filtered_relations)}\"\n         self._filtered_relations[filtered_relation.alias] = filtered_relation\n \n     def names_to_path(self, names, opts, allow_many=True, fail_on_missing=False):\n@@ -1823,6 +1826,7 @@ class Query(BaseExpression):\n             joins.append(alias)\n             if filtered_relation:\n                 filtered_relation.path = joins[:]\n+                filtered_relation.alias = alias  # Ensure unique alias for each FilteredRelation\n         return JoinInfo(final_field, targets, opts, joins, path, final_transformer)\n \n     def trim_joins(self, targets, joins, path):\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1572357,
  "num_received_chars": 70376,
  "elapsed_time": 561.4804821014404,
  "lint_repair_count": 2,
  "test_generation_attempts": 9,
  "code_generation_attempts": 3,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}