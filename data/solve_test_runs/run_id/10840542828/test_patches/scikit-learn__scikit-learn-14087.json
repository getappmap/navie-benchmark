{
  "edit_test_file": "sklearn/linear_model/tests/test_coordinate_descent.py",
  "test_patch": "diff --git a/sklearn/linear_model/tests/test_logistic_regression_cv_index_error.py b/sklearn/linear_model/tests/test_logistic_regression_cv_index_error.py\nnew file mode 100644\nindex 0000000..27a6bf9\n--- /dev/null\n+++ b/sklearn/linear_model/tests/test_logistic_regression_cv_index_error.py\n@@ -0,0 +1,22 @@\n+import unittest\n+import numpy as np\n+from sklearn.linear_model import LogisticRegressionCV\n+\n+class TestLogisticRegressionCVIndexError(unittest.TestCase):\n+    def test_logistic_regression_cv_index_error(self):\n+        np.random.seed(29)\n+        X = np.random.normal(size=(1000, 3))\n+        beta = np.random.normal(size=3)\n+        intercept = np.random.normal(size=None)\n+        y = np.sign(intercept + X @ beta)\n+\n+        with self.assertRaises(IndexError):\n+            LogisticRegressionCV(\n+                cv=5,\n+                solver='saga',\n+                tol=1e-2,\n+                refit=False\n+            ).fit(X, y)\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/linear_model/tests/test_logistic_regression_cv_index_error_inverted.py b/sklearn/linear_model/tests/test_logistic_regression_cv_index_error_inverted.py\nnew file mode 100644\nindex 0000000..7c50b30\n--- /dev/null\n+++ b/sklearn/linear_model/tests/test_logistic_regression_cv_index_error_inverted.py\n@@ -0,0 +1,24 @@\n+import unittest\n+import numpy as np\n+from sklearn.linear_model import LogisticRegressionCV\n+\n+class TestLogisticRegressionCVIndexError(unittest.TestCase):\n+    def test_logistic_regression_cv_index_error(self):\n+        np.random.seed(29)\n+        X = np.random.normal(size=(1000, 3))\n+        beta = np.random.normal(size=3)\n+        intercept = np.random.normal(size=None)\n+        y = np.sign(intercept + X @ beta)\n+\n+        try:\n+            LogisticRegressionCV(\n+                cv=5,\n+                solver='saga',\n+                tol=1e-2,\n+                refit=False\n+            ).fit(X, y)\n+        except IndexError:\n+            self.fail(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}