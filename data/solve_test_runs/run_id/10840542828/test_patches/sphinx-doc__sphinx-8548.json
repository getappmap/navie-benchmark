{
  "edit_test_file": "tests/test_ext_autodoc_private_members.py",
  "test_patch": "diff --git a/tests/test_ext_autodoc_inherited_attributes.py b/tests/test_ext_autodoc_inherited_attributes.py\nnew file mode 100644\nindex 0000000..4a9b1f5\n--- /dev/null\n+++ b/tests/test_ext_autodoc_inherited_attributes.py\n@@ -0,0 +1,37 @@\n+\"\"\"\n+    test_ext_autodoc_inherited_attributes\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the autodoc extension for inherited attributes.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import unittest\n+from sphinx.application import Sphinx\n+from .test_ext_autodoc import do_autodoc\n+\n+\n+class TestAutodocInheritedAttributes(unittest.TestCase):\n+    def setUp(self):\n+        self.app = Sphinx(\n+            srcdir='tests/roots/test-ext-autodoc',\n+            confdir='tests/roots/test-ext-autodoc',\n+            outdir='tests/roots/test-ext-autodoc/_build',\n+            doctreedir='tests/roots/test-ext-autodoc/_doctrees',\n+            buildername='html'\n+        )\n+\n+    def test_inherited_attributes(self):\n+        options = {'inherited-members': True}\n+        actual = do_autodoc(self.app, 'class', 'target.inheritance.Derived', options)\n+        # The issue is that inherited attributes are not documented\n+        # We expect the output to be missing the inherited attributes\n+        self.assertNotIn('.. py:attribute:: inheritedmeth', actual)\n+        self.assertNotIn('.. py:attribute:: inheritedclassmeth', actual)\n+        self.assertNotIn('.. py:attribute:: inheritedstaticmeth', actual)\n+\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/test_ext_autodoc_inherited_attributes_inverted.py b/tests/test_ext_autodoc_inherited_attributes_inverted.py\nnew file mode 100644\nindex 0000000..ac742fe\n--- /dev/null\n+++ b/tests/test_ext_autodoc_inherited_attributes_inverted.py\n@@ -0,0 +1,38 @@\n+\"\"\"\n+    test_ext_autodoc_inherited_attributes\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the autodoc extension for inherited attributes.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import unittest\n+from sphinx.application import Sphinx\n+from .test_ext_autodoc import do_autodoc\n+\n+\n+class TestAutodocInheritedAttributes(unittest.TestCase):\n+    def setUp(self):\n+        self.app = Sphinx(\n+            srcdir='tests/roots/test-ext-autodoc',\n+            confdir='tests/roots/test-ext-autodoc',\n+            outdir='tests/roots/test-ext-autodoc/_build',\n+            doctreedir='tests/roots/test-ext-autodoc/_doctrees',\n+            buildername='html'\n+        )\n+\n+    def test_inherited_attributes(self):\n+        options = {'inherited-members': True}\n+        actual = do_autodoc(self.app, 'class', 'target.inheritance.Derived', options)\n+        # The issue is that inherited attributes are not documented\n+        # We expect the output to include the inherited attributes\n+        # Change assertions to expect the presence of inherited attributes\n+        self.assertIn('.. py:attribute:: inheritedmeth', actual, \"__BUG__HERE__\")\n+        self.assertIn('.. py:attribute:: inheritedclassmeth', actual, \"__BUG__HERE__\")\n+        self.assertIn('.. py:attribute:: inheritedstaticmeth', actual, \"__BUG__HERE__\")\n+\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}