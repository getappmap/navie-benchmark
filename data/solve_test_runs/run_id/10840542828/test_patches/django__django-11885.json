{
  "edit_test_file": "tests/delete/tests.py",
  "test_patch": "diff --git a/tests/delete/test_combine_fast_delete_queries.py b/tests/delete/test_combine_fast_delete_queries.py\nnew file mode 100644\nindex 0000000..d082f21\n--- /dev/null\n+++ b/tests/delete/test_combine_fast_delete_queries.py\n@@ -0,0 +1,23 @@\n+from django.test import TestCase\n+from django.db import models\n+\n+class Person(models.Model):\n+    friends = models.ManyToManyField('self')\n+\n+class UserTestModel(models.Model):\n+    pass\n+\n+class Entry(models.Model):\n+    created_by = models.ForeignKey(UserTestModel, on_delete=models.CASCADE, related_name='created_entries')\n+    updated_by = models.ForeignKey(UserTestModel, on_delete=models.CASCADE, related_name='updated_entries')\n+\n+class CombineFastDeleteQueriesTest(TestCase):\n+    def test_combine_fast_delete_queries(self):\n+        user = UserTestModel.objects.create()\n+        person = Person.objects.create()\n+        person.friends.add(person)\n+        entry = Entry.objects.create(created_by=user, updated_by=user)\n+\n+        with self.assertNumQueries(6):\n+            user.delete()\n+            person.delete()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/delete/test_combine_fast_delete_queries_inverted.py b/tests/delete/test_combine_fast_delete_queries_inverted.py\nnew file mode 100644\nindex 0000000..34465d7\n--- /dev/null\n+++ b/tests/delete/test_combine_fast_delete_queries_inverted.py\n@@ -0,0 +1,25 @@\n+from django.test import TestCase\n+from django.db import models\n+\n+class Person(models.Model):\n+    friends = models.ManyToManyField('self')\n+\n+class UserTestModel(models.Model):\n+    pass\n+\n+class Entry(models.Model):\n+    created_by = models.ForeignKey(UserTestModel, on_delete=models.CASCADE, related_name='created_entries')\n+    updated_by = models.ForeignKey(UserTestModel, on_delete=models.CASCADE, related_name='updated_entries')\n+\n+class CombineFastDeleteQueriesTest(TestCase):\n+    def test_combine_fast_delete_queries(self):\n+        user = UserTestModel.objects.create()\n+        person = Person.objects.create()\n+        person.friends.add(person)\n+        entry = Entry.objects.create(created_by=user, updated_by=user)\n+\n+        # The test should now fail if the bug is observed, expecting fewer queries\n+        with self.assertRaisesMessage(AssertionError, \"__BUG__HERE__\"):\n+            with self.assertNumQueries(3):\n+                user.delete()\n+                person.delete()\n\\ No newline at end of file\n"
}