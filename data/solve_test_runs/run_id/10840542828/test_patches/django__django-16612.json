{
  "edit_test_file": "tests/middleware/tests.py",
  "test_patch": "diff --git a/tests/middleware/test_catch_all_view_redirect.py b/tests/middleware/test_catch_all_view_redirect.py\nnew file mode 100644\nindex 0000000..c9bc7e1\n--- /dev/null\n+++ b/tests/middleware/test_catch_all_view_redirect.py\n@@ -0,0 +1,17 @@\n+from django.test import TestCase, RequestFactory, override_settings\n+from django.http import Http404\n+from django.contrib.admin.sites import AdminSite\n+\n+class AdminSiteRedirectTest(TestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.admin_site = AdminSite()\n+\n+    @override_settings(APPEND_SLASH=True)\n+    def test_catch_all_view_drops_query_string(self):\n+        \"\"\"\n+        Test that AdminSite.catch_all_view() drops query string in redirects.\n+        \"\"\"\n+        request = self.factory.get('/admin/auth/foo?id=123')\n+        with self.assertRaises(Http404):\n+            self.admin_site.catch_all_view(request, 'auth/foo?id=123')\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/middleware/test_catch_all_view_redirect_inverted.py b/tests/middleware/test_catch_all_view_redirect_inverted.py\nnew file mode 100644\nindex 0000000..0382bb9\n--- /dev/null\n+++ b/tests/middleware/test_catch_all_view_redirect_inverted.py\n@@ -0,0 +1,19 @@\n+from django.test import TestCase, RequestFactory, override_settings\n+from django.http import Http404\n+from django.contrib.admin.sites import AdminSite\n+\n+class AdminSiteRedirectTest(TestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.admin_site = AdminSite()\n+\n+    @override_settings(APPEND_SLASH=True)\n+    def test_catch_all_view_drops_query_string(self):\n+        \"\"\"\n+        Test that AdminSite.catch_all_view() drops query string in redirects.\n+        \"\"\"\n+        request = self.factory.get('/admin/auth/foo?id=123')\n+        try:\n+            self.admin_site.catch_all_view(request, 'auth/foo?id=123')\n+        except Http404:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}