{
  "edit_test_file": "tests/auth_tests/test_forms.py",
  "test_patch": "diff --git a/tests/auth_tests/test_auth_form_maxlength.py b/tests/auth_tests/test_auth_form_maxlength.py\nnew file mode 100644\nindex 0000000..6a994e7\n--- /dev/null\n+++ b/tests/auth_tests/test_auth_form_maxlength.py\n@@ -0,0 +1,9 @@\n+from django.test import TestCase\n+from django.contrib.auth.forms import AuthenticationForm\n+\n+class AuthenticationFormMaxLengthTest(TestCase):\n+    def test_username_field_max_length_attribute(self):\n+        form = AuthenticationForm()\n+        username_field = form.fields['username']\n+        # Check if the maxlength attribute is not set in the widget's attrs\n+        self.assertNotIn('maxlength', username_field.widget.attrs)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/auth_tests/test_auth_form_maxlength_inverted.py b/tests/auth_tests/test_auth_form_maxlength_inverted.py\nnew file mode 100644\nindex 0000000..c91e0a0\n--- /dev/null\n+++ b/tests/auth_tests/test_auth_form_maxlength_inverted.py\n@@ -0,0 +1,10 @@\n+from django.test import TestCase\n+from django.contrib.auth.forms import AuthenticationForm\n+\n+class AuthenticationFormMaxLengthTest(TestCase):\n+    def test_username_field_max_length_attribute(self):\n+        form = AuthenticationForm()\n+        username_field = form.fields['username']\n+        # Check if the maxlength attribute is set in the widget's attrs\n+        if 'maxlength' not in username_field.widget.attrs:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}