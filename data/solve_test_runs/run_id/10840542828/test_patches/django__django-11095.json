{
  "edit_test_file": "tests/modeladmin/tests.py",
  "test_patch": "diff --git a/tests/modeladmin/test_get_inlines_hook.py b/tests/modeladmin/test_get_inlines_hook.py\nnew file mode 100644\nindex 0000000..b49ec4b\n--- /dev/null\n+++ b/tests/modeladmin/test_get_inlines_hook.py\n@@ -0,0 +1,22 @@\n+from django.contrib import admin\n+from django.test import TestCase, RequestFactory\n+from .models import ValidationTestModel, ValidationTestInlineModel\n+\n+class CustomInline(admin.TabularInline):\n+    model = ValidationTestInlineModel\n+\n+class CustomModelAdmin(admin.ModelAdmin):\n+    def get_inlines(self, request, obj=None):\n+        return [CustomInline]\n+\n+class GetInlinesHookTest(TestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.admin_site = admin.AdminSite()\n+        self.model_admin = CustomModelAdmin(ValidationTestModel, self.admin_site)\n+\n+    def test_get_inlines_hook(self):\n+        request = self.factory.get('/')\n+        inlines = self.model_admin.get_inlines(request)\n+        self.assertEqual(len(inlines), 1)\n+        self.assertIsInstance(inlines[0], type(CustomInline))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/modeladmin/test_get_inlines_hook_inverted.py b/tests/modeladmin/test_get_inlines_hook_inverted.py\nnew file mode 100644\nindex 0000000..a9af78d\n--- /dev/null\n+++ b/tests/modeladmin/test_get_inlines_hook_inverted.py\n@@ -0,0 +1,23 @@\n+from django.contrib import admin\n+from django.test import TestCase, RequestFactory\n+from .models import ValidationTestModel, ValidationTestInlineModel\n+\n+class CustomInline(admin.TabularInline):\n+    model = ValidationTestInlineModel\n+\n+class CustomModelAdmin(admin.ModelAdmin):\n+    def get_inlines(self, request, obj=None):\n+        return [CustomInline]\n+\n+class GetInlinesHookTest(TestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.admin_site = admin.AdminSite()\n+        self.model_admin = CustomModelAdmin(ValidationTestModel, self.admin_site)\n+\n+    def test_get_inlines_hook(self):\n+        request = self.factory.get('/')\n+        inlines = self.model_admin.get_inlines(request)\n+        # Altered the test to fail when the issue is observed\n+        if len(inlines) == 1 and isinstance(inlines[0], type(CustomInline)):\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}