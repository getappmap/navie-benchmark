{
  "edit_test_file": "tests/forms_tests/field_tests/test_base.py",
  "test_patch": "diff --git a/tests/forms_tests/field_tests/test_readonlypasswordhashfield.py b/tests/forms_tests/field_tests/test_readonlypasswordhashfield.py\nnew file mode 100644\nindex 0000000..ecac6df\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_readonlypasswordhashfield.py\n@@ -0,0 +1,11 @@\n+from django.test import SimpleTestCase\n+from django.contrib.auth.forms import ReadOnlyPasswordHashField\n+from django.forms import Form\n+\n+class ReadOnlyPasswordHashFieldTest(SimpleTestCase):\n+    def test_readonlypasswordhashfield_disabled(self):\n+        class TestForm(Form):\n+            password = ReadOnlyPasswordHashField()\n+\n+        form = TestForm(initial={'password': 'initial_password'})\n+        self.assertFalse(form.fields['password'].disabled)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/forms_tests/field_tests/test_readonlypasswordhashfield_inverted.py b/tests/forms_tests/field_tests/test_readonlypasswordhashfield_inverted.py\nnew file mode 100644\nindex 0000000..ffd37f6\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_readonlypasswordhashfield_inverted.py\n@@ -0,0 +1,13 @@\n+from django.test import SimpleTestCase\n+from django.contrib.auth.forms import ReadOnlyPasswordHashField\n+from django.forms import Form\n+\n+class ReadOnlyPasswordHashFieldTest(SimpleTestCase):\n+    def test_readonlypasswordhashfield_disabled(self):\n+        class TestForm(Form):\n+            password = ReadOnlyPasswordHashField()\n+\n+        form = TestForm(initial={'password': 'initial_password'})\n+        # The test should now fail if the 'disabled' property is not set to True\n+        if not form.fields['password'].disabled:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}