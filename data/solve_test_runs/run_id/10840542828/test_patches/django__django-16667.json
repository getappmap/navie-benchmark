{
  "edit_test_file": "tests/forms_tests/widget_tests/test_selectdatewidget.py",
  "test_patch": "diff --git a/tests/forms_tests/widget_tests/test_overflowerror_handling.py b/tests/forms_tests/widget_tests/test_overflowerror_handling.py\nnew file mode 100644\nindex 0000000..db32903\n--- /dev/null\n+++ b/tests/forms_tests/widget_tests/test_overflowerror_handling.py\n@@ -0,0 +1,27 @@\n+from django import forms\n+from django.forms import SelectDateWidget\n+from django.test import TestCase\n+from django.http import HttpRequest\n+from django.http import HttpResponse\n+\n+class ReproForm(forms.Form):\n+    my_date = forms.DateField(widget=SelectDateWidget())\n+\n+def repro_view(request):\n+    form = ReproForm(request.GET)  # for ease of reproducibility\n+    if form.is_valid():\n+        return HttpResponse(\"ok\")\n+    else:\n+        return HttpResponse(\"not ok\")\n+\n+class SelectDateWidgetOverflowErrorTest(TestCase):\n+    def test_overflow_error(self):\n+        request = HttpRequest()\n+        request.method = 'GET'\n+        request.GET = {\n+            'my_date_day': '1',\n+            'my_date_month': '1',\n+            'my_date_year': '1234567821345678'\n+        }\n+        with self.assertRaises(OverflowError):\n+            repro_view(request)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/forms_tests/widget_tests/test_overflowerror_handling_inverted.py b/tests/forms_tests/widget_tests/test_overflowerror_handling_inverted.py\nnew file mode 100644\nindex 0000000..c26f86b\n--- /dev/null\n+++ b/tests/forms_tests/widget_tests/test_overflowerror_handling_inverted.py\n@@ -0,0 +1,29 @@\n+from django import forms\n+from django.forms import SelectDateWidget\n+from django.test import TestCase\n+from django.http import HttpRequest\n+from django.http import HttpResponse\n+\n+class ReproForm(forms.Form):\n+    my_date = forms.DateField(widget=SelectDateWidget())\n+\n+def repro_view(request):\n+    form = ReproForm(request.GET)  # for ease of reproducibility\n+    if form.is_valid():\n+        return HttpResponse(\"ok\")\n+    else:\n+        return HttpResponse(\"not ok\")\n+\n+class SelectDateWidgetOverflowErrorTest(TestCase):\n+    def test_overflow_error(self):\n+        request = HttpRequest()\n+        request.method = 'GET'\n+        request.GET = {\n+            'my_date_day': '1',\n+            'my_date_month': '1',\n+            'my_date_year': '1234567821345678'\n+        }\n+        try:\n+            repro_view(request)\n+        except OverflowError:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}