{
  "instance_id": "django__django-13820",
  "edit_test_file": "tests/migrations/test_loader.py",
  "code_patch": "diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py\nindex 95a5062..5e51194 100644\n--- a/django/db/migrations/loader.py\n+++ b/django/db/migrations/loader.py\n@@ -90,7 +90,7 @@ class MigrationLoader:\n             else:\n                 # Empty directories are namespaces.\n                 # getattr() needed on PY36 and older (replace w/attribute access).\n-                if getattr(module, '__file__', None) is None:\n+                if getattr(module, '__file__', None) is None and not isinstance(getattr(module, '__path__', None), list):\n                     self.unmigrated_apps.add(app_config.label)\n                     continue\n                 # Module is not a package (e.g. migrations.py).\n",
  "test_patch": "diff --git a/tests/migrations/test_migrations_support_frozen_envs.py b/tests/migrations/test_migrations_support_frozen_envs.py\nnew file mode 100644\nindex 0000000..a768063\n--- /dev/null\n+++ b/tests/migrations/test_migrations_support_frozen_envs.py\n@@ -0,0 +1,14 @@\n+import unittest\n+from django.db.migrations.loader import MigrationLoader\n+from django.test import override_settings\n+from django.db import connection\n+\n+class NonNamespacePackageTests(unittest.TestCase):\n+    @override_settings(MIGRATION_MODULES={\"migrations\": \"migrations.test_migrations_non_namespace\"})\n+    def test_non_namespace_package_without_file(self):\n+        \"\"\"\n+        Test that a non-namespace package without __file__ raises an ImportError.\n+        \"\"\"\n+        with self.assertRaises(ImportError):\n+            loader = MigrationLoader(connection)\n+            loader.load_disk()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/migrations/test_migrations_support_frozen_envs_inverted.py b/tests/migrations/test_migrations_support_frozen_envs_inverted.py\nnew file mode 100644\nindex 0000000..dbe2176\n--- /dev/null\n+++ b/tests/migrations/test_migrations_support_frozen_envs_inverted.py\n@@ -0,0 +1,16 @@\n+import unittest\n+from django.db.migrations.loader import MigrationLoader\n+from django.test import override_settings\n+from django.db import connection\n+\n+class NonNamespacePackageTests(unittest.TestCase):\n+    @override_settings(MIGRATION_MODULES={\"migrations\": \"migrations.test_migrations_non_namespace\"})\n+    def test_non_namespace_package_without_file(self):\n+        \"\"\"\n+        Test that a non-namespace package without __file__ raises an ImportError.\n+        \"\"\"\n+        try:\n+            loader = MigrationLoader(connection)\n+            loader.load_disk()\n+        except ImportError:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1425657,
  "num_received_chars": 49303,
  "elapsed_time": 477.32066583633423,
  "lint_repair_count": 3,
  "test_generation_attempts": 2,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}