{
  "instance_id": "django__django-13512",
  "edit_test_file": "tests/forms_tests/field_tests/test_jsonfield.py",
  "code_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex a249f4c..99218da 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -81,7 +81,7 @@ class JSONField(CheckFieldDefaultMixin, Field):\n     def get_prep_value(self, value):\n         if value is None:\n             return value\n-        return json.dumps(value, cls=self.encoder)\n+        return json.dumps(value, cls=self.encoder, ensure_ascii=False)\n \n     def get_transform(self, name):\n         transform = super().get_transform(name)\n@@ -92,7 +92,7 @@ class JSONField(CheckFieldDefaultMixin, Field):\n     def validate(self, value, model_instance):\n         super().validate(value, model_instance)\n         try:\n-            json.dumps(value, cls=self.encoder)\n+            json.dumps(value, cls=self.encoder, ensure_ascii=False)\n         except TypeError:\n             raise exceptions.ValidationError(\n                 self.error_messages['invalid'],\n@@ -108,6 +108,7 @@ class JSONField(CheckFieldDefaultMixin, Field):\n             'form_class': forms.JSONField,\n             'encoder': self.encoder,\n             'decoder': self.decoder,\n+            'ensure_ascii': False,\n             **kwargs,\n         })\n \n",
  "test_patch": "diff --git a/tests/forms_tests/field_tests/test_jsonfield_unicode_handling.py b/tests/forms_tests/field_tests/test_jsonfield_unicode_handling.py\nnew file mode 100644\nindex 0000000..1ba4ca3\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_jsonfield_unicode_handling.py\n@@ -0,0 +1,12 @@\n+import json\n+from django.forms import JSONField, ValidationError\n+from django.test import SimpleTestCase\n+\n+class UnicodeJSONFieldTest(SimpleTestCase):\n+    def test_unicode_jsonfield_display(self):\n+        field = JSONField()\n+        json_data = json.dumps('\u4e2d\u56fd')\n+        # The issue is that JSONField should display unicode characters properly,\n+        # but it defaults to ASCII encoding, resulting in escaped unicode.\n+        expected_output = '\"\\\\u4e2d\\\\u56fd\"'\n+        self.assertEqual(json_data, expected_output)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/forms_tests/field_tests/test_jsonfield_unicode_handling_inverted.py b/tests/forms_tests/field_tests/test_jsonfield_unicode_handling_inverted.py\nnew file mode 100644\nindex 0000000..c45ad0b\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_jsonfield_unicode_handling_inverted.py\n@@ -0,0 +1,14 @@\n+import json\n+from django.forms import JSONField, ValidationError\n+from django.test import SimpleTestCase\n+\n+class UnicodeJSONFieldTest(SimpleTestCase):\n+    def test_unicode_jsonfield_display(self):\n+        field = JSONField()\n+        json_data = json.dumps('\u4e2d\u56fd')\n+        # The issue is that JSONField should display unicode characters properly,\n+        # but it defaults to ASCII encoding, resulting in escaped unicode.\n+        expected_output = '\"\u4e2d\u56fd\"'\n+        # Altered the test to fail when the issue is observed\n+        if json_data != expected_output:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1001446,
  "num_received_chars": 24824,
  "elapsed_time": 289.5645549297333,
  "lint_repair_count": 0,
  "test_generation_attempts": 2,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}