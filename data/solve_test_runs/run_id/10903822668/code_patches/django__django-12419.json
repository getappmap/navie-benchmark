{
  "instance_id": "django__django-12419",
  "edit_test_file": "tests/middleware/test_security.py",
  "code_patch": "diff --git a/django/middleware/security.py b/django/middleware/security.py\nindex c0877b3..74fdd59 100644\n--- a/django/middleware/security.py\n+++ b/django/middleware/security.py\n@@ -15,7 +15,7 @@ class SecurityMiddleware(MiddlewareMixin):\n         self.redirect = settings.SECURE_SSL_REDIRECT\n         self.redirect_host = settings.SECURE_SSL_HOST\n         self.redirect_exempt = [re.compile(r) for r in settings.SECURE_REDIRECT_EXEMPT]\n-        self.referrer_policy = settings.SECURE_REFERRER_POLICY\n+        self.referrer_policy = settings.SECURE_REFERRER_POLICY or 'same-origin'\n         self.get_response = get_response\n \n     def process_request(self, request):\n",
  "test_patch": "diff --git a/tests/middleware/test_referrer_policy.py b/tests/middleware/test_referrer_policy.py\nnew file mode 100644\nindex 0000000..accd370\n--- /dev/null\n+++ b/tests/middleware/test_referrer_policy.py\n@@ -0,0 +1,21 @@\n+from django.test import SimpleTestCase, override_settings\n+from django.http import HttpResponse\n+from django.middleware.security import SecurityMiddleware\n+from django.test import RequestFactory\n+\n+class ReferrerPolicyTest(SimpleTestCase):\n+    @property\n+    def middleware(self):\n+        return SecurityMiddleware()\n+\n+    def process_response(self, request):\n+        response = HttpResponse()\n+        return self.middleware.process_response(request, response)\n+\n+    def test_default_referrer_policy(self):\n+        \"\"\"\n+        Test that the default Referrer-Policy is not set to 'same-origin'.\n+        \"\"\"\n+        request = RequestFactory().get('/')\n+        response = self.process_response(request)\n+        self.assertNotEqual(response.get('Referrer-Policy'), 'same-origin')\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/middleware/test_referrer_policy_inverted.py b/tests/middleware/test_referrer_policy_inverted.py\nnew file mode 100644\nindex 0000000..82c184a\n--- /dev/null\n+++ b/tests/middleware/test_referrer_policy_inverted.py\n@@ -0,0 +1,22 @@\n+from django.test import SimpleTestCase, override_settings\n+from django.http import HttpResponse\n+from django.middleware.security import SecurityMiddleware\n+from django.test import RequestFactory\n+\n+class ReferrerPolicyTest(SimpleTestCase):\n+    @property\n+    def middleware(self):\n+        return SecurityMiddleware()\n+\n+    def process_response(self, request):\n+        response = HttpResponse()\n+        return self.middleware.process_response(request, response)\n+\n+    def test_default_referrer_policy(self):\n+        \"\"\"\n+        Test that the default Referrer-Policy is set to 'same-origin'.\n+        \"\"\"\n+        request = RequestFactory().get('/')\n+        response = self.process_response(request)\n+        if response.get('Referrer-Policy') != 'same-origin':\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1007750,
  "num_received_chars": 33605,
  "elapsed_time": 391.4135797023773,
  "lint_repair_count": 0,
  "test_generation_attempts": 1,
  "code_generation_attempts": 9,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}