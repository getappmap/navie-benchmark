{
  "edit_test_file": "tests/test_ext_autodoc_private_members.py",
  "test_patch": "diff --git a/tests/test_ext_autodoc_selective_private_members.py b/tests/test_ext_autodoc_selective_private_members.py\nnew file mode 100644\nindex 0000000..b650905\n--- /dev/null\n+++ b/tests/test_ext_autodoc_selective_private_members.py\n@@ -0,0 +1,43 @@\n+\"\"\"\n+    test_ext_autodoc_selective_private_members\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the autodoc extension for selective private-members option.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+\n+from test_ext_autodoc import do_autodoc\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_specific_private_members(app):\n+    app.config.autoclass_content = 'class'\n+    options = {\"members\": None,\n+               \"private-members\": \"_public_function\"}\n+    actual = do_autodoc(app, 'module', 'target.private', options)\n+    # Expecting only _public_function to be documented, but both are documented\n+    assert list(actual) == [\n+        '',\n+        '.. py:module:: target.private',\n+        '',\n+        '',\n+        '.. py:function:: _public_function(name)',\n+        '   :module: target.private',\n+        '',\n+        '   public_function is a docstring().',\n+        '',\n+        '   :meta public:',\n+        '',\n+        '',\n+        '.. py:function:: private_function(name)',\n+        '   :module: target.private',\n+        '',\n+        '   private_function is a docstring().',\n+        '',\n+        '   :meta private:',\n+        '',\n+    ]\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/test_ext_autodoc_selective_private_members_inverted.py b/tests/test_ext_autodoc_selective_private_members_inverted.py\nnew file mode 100644\nindex 0000000..b3be94e\n--- /dev/null\n+++ b/tests/test_ext_autodoc_selective_private_members_inverted.py\n@@ -0,0 +1,44 @@\n+\"\"\"\n+    test_ext_autodoc_selective_private_members\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the autodoc extension for selective private-members option.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+\n+from test_ext_autodoc import do_autodoc\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_specific_private_members(app):\n+    app.config.autoclass_content = 'class'\n+    options = {\"members\": None,\n+               \"private-members\": \"_public_function\"}\n+    actual = do_autodoc(app, 'module', 'target.private', options)\n+    # Expecting only _public_function to be documented, but both are documented\n+    if list(actual) == [\n+        '',\n+        '.. py:module:: target.private',\n+        '',\n+        '',\n+        '.. py:function:: _public_function(name)',\n+        '   :module: target.private',\n+        '',\n+        '   public_function is a docstring().',\n+        '',\n+        '   :meta public:',\n+        '',\n+        '',\n+        '.. py:function:: private_function(name)',\n+        '   :module: target.private',\n+        '',\n+        '   private_function is a docstring().',\n+        '',\n+        '   :meta private:',\n+        '',\n+    ]:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}