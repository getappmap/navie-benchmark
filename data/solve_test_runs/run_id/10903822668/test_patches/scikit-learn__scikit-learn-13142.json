{
  "edit_test_file": "sklearn/cluster/tests/test_k_means.py",
  "test_patch": "diff --git a/sklearn/cluster/tests/test_gaussian_mixture_predict_discrepancy.py b/sklearn/cluster/tests/test_gaussian_mixture_predict_discrepancy.py\nnew file mode 100644\nindex 0000000..40784ad\n--- /dev/null\n+++ b/sklearn/cluster/tests/test_gaussian_mixture_predict_discrepancy.py\n@@ -0,0 +1,21 @@\n+import numpy as np\n+from sklearn.mixture import GaussianMixture\n+from sklearn.utils.testing import assert_array_equal\n+import pytest\n+\n+def test_gaussian_mixture_predict_discrepancy():\n+    # Generate random data\n+    X = np.random.randn(1000, 5)\n+\n+    # Test without n_init\n+    gm = GaussianMixture(n_components=5)\n+    c1 = gm.fit_predict(X)\n+    c2 = gm.predict(X)\n+    assert_array_equal(c1, c2)\n+\n+    # Test with n_init=5\n+    gm = GaussianMixture(n_components=5, n_init=5)\n+    c1 = gm.fit_predict(X)\n+    c2 = gm.predict(X)\n+    with pytest.raises(AssertionError):\n+        assert_array_equal(c1, c2)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/cluster/tests/test_gaussian_mixture_predict_discrepancy_inverted.py b/sklearn/cluster/tests/test_gaussian_mixture_predict_discrepancy_inverted.py\nnew file mode 100644\nindex 0000000..3178df3\n--- /dev/null\n+++ b/sklearn/cluster/tests/test_gaussian_mixture_predict_discrepancy_inverted.py\n@@ -0,0 +1,19 @@\n+import numpy as np\n+from sklearn.mixture import GaussianMixture\n+import pytest\n+\n+def test_gaussian_mixture_predict_discrepancy():\n+    # Generate random data\n+    X = np.random.randn(1000, 5)\n+\n+    # Test without n_init\n+    gm = GaussianMixture(n_components=5)\n+    c1 = gm.fit_predict(X)\n+    c2 = gm.predict(X)\n+    assert np.array_equal(c1, c2), \"__BUG__HERE__\"\n+\n+    # Test with n_init=5\n+    gm = GaussianMixture(n_components=5, n_init=5)\n+    c1 = gm.fit_predict(X)\n+    c2 = gm.predict(X)\n+    assert np.array_equal(c1, c2), \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}