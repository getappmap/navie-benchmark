{
  "edit_test_file": "lib/matplotlib/tests/test_category.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_deprecation_warning.py b/lib/matplotlib/tests/test_deprecation_warning.py\nnew file mode 100644\nindex 0000000..92a29dc\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_deprecation_warning.py\n@@ -0,0 +1,13 @@\n+import unittest\n+import matplotlib.pyplot as plt\n+from matplotlib._api import MatplotlibDeprecationWarning\n+\n+class TestDeprecationWarning(unittest.TestCase):\n+    def test_empty_data_deprecation_warning(self):\n+        fig, ax = plt.subplots()\n+        ax.xaxis.update_units([\"a\", \"b\"])\n+        with self.assertWarns(MatplotlibDeprecationWarning):\n+            ax.plot([], [])\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_deprecation_warning_inverted.py b/lib/matplotlib/tests/test_deprecation_warning_inverted.py\nnew file mode 100644\nindex 0000000..fbd4d1b\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_deprecation_warning_inverted.py\n@@ -0,0 +1,14 @@\n+import unittest\n+import matplotlib.pyplot as plt\n+from matplotlib._api import MatplotlibDeprecationWarning\n+\n+class TestDeprecationWarning(unittest.TestCase):\n+    def test_empty_data_deprecation_warning(self):\n+        fig, ax = plt.subplots()\n+        ax.xaxis.update_units([\"a\", \"b\"])\n+        with self.assertRaises(AssertionError, msg=\"__BUG__HERE__\"):\n+            with self.assertWarns(MatplotlibDeprecationWarning):\n+                ax.plot([], [])\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n"
}