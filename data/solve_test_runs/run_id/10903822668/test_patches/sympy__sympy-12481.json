{
  "edit_test_file": "sympy/combinatorics/tests/test_permutations.py",
  "test_patch": "diff --git a/sympy/combinatorics/tests/test_cycle_order.py b/sympy/combinatorics/tests/test_cycle_order.py\nnew file mode 100644\nindex 0000000..a82d593\n--- /dev/null\n+++ b/sympy/combinatorics/tests/test_cycle_order.py\n@@ -0,0 +1,6 @@\n+from sympy.combinatorics.permutations import Permutation\n+from sympy.utilities.pytest import raises\n+\n+def test_non_disjoint_cycles():\n+    # This test reproduces the issue where non-disjoint cycles raise a ValueError\n+    raises(ValueError, lambda: Permutation([[0, 1], [0, 1]]))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/combinatorics/tests/test_cycle_order_inverted.py b/sympy/combinatorics/tests/test_cycle_order_inverted.py\nnew file mode 100644\nindex 0000000..fa1342c\n--- /dev/null\n+++ b/sympy/combinatorics/tests/test_cycle_order_inverted.py\n@@ -0,0 +1,8 @@\n+from sympy.combinatorics.permutations import Permutation\n+\n+def test_non_disjoint_cycles():\n+    # This test should fail when the issue is observed\n+    try:\n+        Permutation([[0, 1], [0, 1]])\n+    except ValueError:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}