{
  "edit_test_file": "lib/matplotlib/tests/test_pickle.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_backend_get.py b/lib/matplotlib/tests/test_backend_get.py\nnew file mode 100644\nindex 0000000..832f09f\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_backend_get.py\n@@ -0,0 +1,16 @@\n+import matplotlib.pyplot as plt\n+from matplotlib import get_backend, rc_context\n+import unittest\n+\n+class TestBackendGet(unittest.TestCase):\n+    def test_get_backend_clears_figures(self):\n+        with rc_context():\n+            fig2 = plt.figure()\n+        before = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+        get_backend()\n+        after = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+\n+        self.assertEqual(before, after, f'\\n{before}\\n{after}')\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_backend_get_inverted.py b/lib/matplotlib/tests/test_backend_get_inverted.py\nnew file mode 100644\nindex 0000000..5a7a50a\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_backend_get_inverted.py\n@@ -0,0 +1,17 @@\n+import matplotlib.pyplot as plt\n+from matplotlib import get_backend, rc_context\n+import unittest\n+\n+class TestBackendGet(unittest.TestCase):\n+    def test_get_backend_clears_figures(self):\n+        with rc_context():\n+            fig2 = plt.figure()\n+        before = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+        get_backend()\n+        after = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+\n+        # Alter the test to fail when the issue is observed\n+        self.assertNotEqual(before, after, '__BUG__HERE__')\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}