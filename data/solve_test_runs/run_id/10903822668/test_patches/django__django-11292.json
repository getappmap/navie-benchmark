{
  "edit_test_file": "tests/admin_scripts/tests.py",
  "test_patch": "diff --git a/tests/admin_scripts/add_skip_checks_option_management.py b/tests/admin_scripts/add_skip_checks_option_management.py\nnew file mode 100644\nindex 0000000..b786b69\n--- /dev/null\n+++ b/tests/admin_scripts/add_skip_checks_option_management.py\n@@ -0,0 +1,26 @@\n+\"\"\"\n+Test case to reproduce the issue of missing --skip-checks option in management commands.\n+\"\"\"\n+\n+import os\n+import unittest\n+from io import StringIO\n+from django.core.management import call_command\n+from django.test import SimpleTestCase\n+from django.core.management.base import CommandError\n+\n+class SkipChecksOptionTest(SimpleTestCase):\n+    def setUp(self):\n+        self.output = StringIO()\n+\n+    def test_skip_checks_option(self):\n+        \"\"\"\n+        Test that running a management command with --skip-checks option\n+        raises a CommandError due to unrecognized argument.\n+        \"\"\"\n+        with self.assertRaises(CommandError) as cm:\n+            call_command('check', '--skip-checks', stdout=self.output)\n+        self.assertIn(\"unrecognized arguments: --skip-checks\", str(cm.exception))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/admin_scripts/add_skip_checks_option_management_inverted.py b/tests/admin_scripts/add_skip_checks_option_management_inverted.py\nnew file mode 100644\nindex 0000000..ab40ff6\n--- /dev/null\n+++ b/tests/admin_scripts/add_skip_checks_option_management_inverted.py\n@@ -0,0 +1,28 @@\n+\"\"\"\n+Test case to reproduce the issue of missing --skip-checks option in management commands.\n+\"\"\"\n+\n+import os\n+import unittest\n+from io import StringIO\n+from django.core.management import call_command\n+from django.test import SimpleTestCase\n+from django.core.management.base import CommandError\n+\n+class SkipChecksOptionTest(SimpleTestCase):\n+    def setUp(self):\n+        self.output = StringIO()\n+\n+    def test_skip_checks_option(self):\n+        \"\"\"\n+        Test that running a management command with --skip-checks option\n+        raises a CommandError due to unrecognized argument.\n+        \"\"\"\n+        try:\n+            call_command('check', '--skip-checks', stdout=self.output)\n+        except CommandError as e:\n+            if \"unrecognized arguments: --skip-checks\" in str(e):\n+                raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}