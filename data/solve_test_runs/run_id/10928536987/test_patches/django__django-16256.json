{
  "edit_test_file": "tests/get_or_create/tests.py",
  "test_patch": "diff --git a/tests/get_or_create/test_related_manager_async_methods.py b/tests/get_or_create/test_related_manager_async_methods.py\nnew file mode 100644\nindex 0000000..504ee32\n--- /dev/null\n+++ b/tests/get_or_create/test_related_manager_async_methods.py\n@@ -0,0 +1,19 @@\n+import unittest\n+from django.test import TestCase\n+from .models import Publisher, Book\n+\n+class RelatedManagerAsyncMethodsTest(TestCase):\n+    def test_async_methods_on_related_manager(self):\n+        # Create a Publisher instance\n+        publisher = Publisher.objects.create(name=\"Async Publishing\")\n+\n+        # Get the related manager for books\n+        related_manager = publisher.books\n+\n+        # Check if async methods are present on the related manager\n+        self.assertTrue(\n+            hasattr(related_manager, 'acreate') and\n+            hasattr(related_manager, 'aget_or_create') and\n+            hasattr(related_manager, 'aupdate_or_create'),\n+            \"Async methods are not present on related managers\"\n+        )\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/get_or_create/test_related_manager_async_methods_inverted.py b/tests/get_or_create/test_related_manager_async_methods_inverted.py\nnew file mode 100644\nindex 0000000..5902151\n--- /dev/null\n+++ b/tests/get_or_create/test_related_manager_async_methods_inverted.py\n@@ -0,0 +1,20 @@\n+import unittest\n+from django.test import TestCase\n+from asgiref.sync import sync_to_async\n+from .models import Publisher, Book\n+\n+class RelatedManagerAsyncMethodsTest(TestCase):\n+    async def test_async_methods_on_related_manager(self):\n+        # Create a Publisher instance\n+        publisher = await sync_to_async(Publisher.objects.create)(name=\"Async Publishing\")\n+\n+        # Get the related manager for books\n+        related_manager = publisher.books\n+\n+        # Check if async methods on the related manager work as intended\n+        try:\n+            await related_manager.acreate(title=\"Async Book\", publisher=publisher)\n+            await related_manager.aget_or_create(title=\"Async Book\", publisher=publisher)\n+            await related_manager.aupdate_or_create(title=\"Async Book\", publisher=publisher)\n+        except Exception:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}