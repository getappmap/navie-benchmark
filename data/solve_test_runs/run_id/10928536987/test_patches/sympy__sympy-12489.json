{
  "edit_test_file": "sympy/combinatorics/tests/test_tensor_can.py",
  "test_patch": "diff --git a/sympy/combinatorics/tests/test_subclass_permutation.py b/sympy/combinatorics/tests/test_subclass_permutation.py\nnew file mode 100644\nindex 0000000..e9c7d93\n--- /dev/null\n+++ b/sympy/combinatorics/tests/test_subclass_permutation.py\n@@ -0,0 +1,9 @@\n+from sympy.combinatorics.permutations import Permutation\n+\n+class SubclassedPermutation(Permutation):\n+    pass\n+\n+def test_subclass_permutation():\n+    subclass_instance = SubclassedPermutation([0, 1, 2])\n+    assert isinstance(subclass_instance, SubclassedPermutation), \\\n+        \"Subclassing Permutation does not create an instance of the subclass, but rather an instance of Permutation.\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/combinatorics/tests/test_subclass_permutation_inverted.py b/sympy/combinatorics/tests/test_subclass_permutation_inverted.py\nnew file mode 100644\nindex 0000000..1d145b6\n--- /dev/null\n+++ b/sympy/combinatorics/tests/test_subclass_permutation_inverted.py\n@@ -0,0 +1,8 @@\n+from sympy.combinatorics.permutations import Permutation\n+\n+class SubclassedPermutation(Permutation):\n+    pass\n+\n+def test_subclass_permutation():\n+    subclass_instance = SubclassedPermutation([0, 1, 2])\n+    assert not isinstance(subclass_instance, SubclassedPermutation), \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}