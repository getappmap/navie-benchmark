{
  "edit_test_file": "tests/one_to_one/tests.py",
  "test_patch": "diff --git a/tests/one_to_one/test_reset_primary_key_issue.py b/tests/one_to_one/test_reset_primary_key_issue.py\nnew file mode 100644\nindex 0000000..68cd6ac\n--- /dev/null\n+++ b/tests/one_to_one/test_reset_primary_key_issue.py\n@@ -0,0 +1,25 @@\n+from django.test import TestCase\n+from django.db import models\n+\n+class Item(models.Model):\n+    uid = models.AutoField(primary_key=True, editable=False)\n+    f = models.BooleanField(default=False)\n+\n+    def reset(self):\n+        self.uid = None\n+        self.f = False\n+\n+class Derived(Item):\n+    pass\n+\n+class ResetPrimaryKeyIssueTestCase(TestCase):\n+    def setUp(self):\n+        self.derived = Derived.objects.create(f=True)  # create the first object\n+        item = Item.objects.get(pk=self.derived.pk)\n+        obj1 = item.derived\n+        obj1.reset()\n+        obj1.save()  # the first object is overwritten\n+\n+    def test_reset_primary_key(self):\n+        obj = Item.objects.get(pk=self.derived.pk)\n+        self.assertIsNotNone(obj.pk)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/one_to_one/test_reset_primary_key_issue_inverted.py b/tests/one_to_one/test_reset_primary_key_issue_inverted.py\nnew file mode 100644\nindex 0000000..c8afb0a\n--- /dev/null\n+++ b/tests/one_to_one/test_reset_primary_key_issue_inverted.py\n@@ -0,0 +1,26 @@\n+from django.test import TestCase\n+from django.db import models\n+\n+class Item(models.Model):\n+    uid = models.AutoField(primary_key=True, editable=False)\n+    f = models.BooleanField(default=False)\n+\n+    def reset(self):\n+        self.uid = None\n+        self.f = False\n+\n+class Derived(Item):\n+    pass\n+\n+class ResetPrimaryKeyIssueTestCase(TestCase):\n+    def setUp(self):\n+        self.derived = Derived.objects.create(f=True)  # create the first object\n+        item = Item.objects.get(pk=self.derived.pk)\n+        obj1 = item.derived\n+        obj1.reset()\n+        obj1.save()  # the first object is overwritten\n+\n+    def test_reset_primary_key(self):\n+        obj = Item.objects.get(pk=self.derived.pk)\n+        if obj.pk is not None:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}