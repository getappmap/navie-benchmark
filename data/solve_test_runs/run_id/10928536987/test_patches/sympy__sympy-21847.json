{
  "edit_test_file": "sympy/polys/tests/test_monomials.py",
  "test_patch": "diff --git a/sympy/polys/tests/test_itermonomials.py b/sympy/polys/tests/test_itermonomials.py\nnew file mode 100644\nindex 0000000..ea76d71\n--- /dev/null\n+++ b/sympy/polys/tests/test_itermonomials.py\n@@ -0,0 +1,10 @@\n+import sympy as sp\n+from sympy.polys.orderings import monomial_key\n+\n+def test_itermonomials_min_degrees_issue():\n+    x1, x2, x3 = sp.symbols('x1, x2, x3')\n+    states = [x1, x2, x3]\n+    max_degrees = 3\n+    min_degrees = 3\n+    monomials = list(sp.itermonomials(states, max_degrees, min_degrees=min_degrees))\n+    assert sorted(monomials, key=monomial_key('grlex', states)) == [x3**3, x2**3, x1**3]\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/polys/tests/test_itermonomials_inverted.py b/sympy/polys/tests/test_itermonomials_inverted.py\nnew file mode 100644\nindex 0000000..fa3abdc\n--- /dev/null\n+++ b/sympy/polys/tests/test_itermonomials_inverted.py\n@@ -0,0 +1,12 @@\n+import sympy as sp\n+from sympy.polys.orderings import monomial_key\n+\n+def test_itermonomials_min_degrees_issue():\n+    x1, x2, x3 = sp.symbols('x1, x2, x3')\n+    states = [x1, x2, x3]\n+    max_degrees = 3\n+    min_degrees = 3\n+    monomials = list(sp.itermonomials(states, max_degrees, min_degrees=min_degrees))\n+    expected_monomials = {x1**3, x2**3, x3**3, x1*x2**2, x1*x3**2, x2*x1**2, x2*x3**2, x3*x1**2, x3*x2**2, x1*x2*x3}\n+    if set(monomials) != expected_monomials:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}