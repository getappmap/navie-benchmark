{
  "edit_test_file": "sklearn/ensemble/tests/test_forest.py",
  "test_patch": "diff --git a/sklearn/ensemble/tests/test_isolation_forest_contamination.py b/sklearn/ensemble/tests/test_isolation_forest_contamination.py\nnew file mode 100644\nindex 0000000..0fe48d2\n--- /dev/null\n+++ b/sklearn/ensemble/tests/test_isolation_forest_contamination.py\n@@ -0,0 +1,8 @@\n+import pytest\n+import pandas as pd\n+from sklearn.ensemble import IsolationForest\n+\n+def test_isolation_forest_contamination_warning():\n+    X = pd.DataFrame({\"a\": [-1.1, 0.3, 0.5, 100]})\n+    with pytest.warns(UserWarning, match=\"X does not have valid feature names, but IsolationForest was fitted with feature names\"):\n+        clf = IsolationForest(random_state=0, contamination=0.05).fit(X)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/ensemble/tests/test_isolation_forest_contamination_inverted.py b/sklearn/ensemble/tests/test_isolation_forest_contamination_inverted.py\nnew file mode 100644\nindex 0000000..89888a3\n--- /dev/null\n+++ b/sklearn/ensemble/tests/test_isolation_forest_contamination_inverted.py\n@@ -0,0 +1,9 @@\n+import pytest\n+import pandas as pd\n+from sklearn.ensemble import IsolationForest\n+\n+def test_isolation_forest_contamination_warning():\n+    X = pd.DataFrame({\"a\": [-1.1, 0.3, 0.5, 100]})\n+    with pytest.warns(UserWarning, match=\"X does not have valid feature names, but IsolationForest was fitted with feature names\") as record:\n+        clf = IsolationForest(random_state=0, contamination=0.05).fit(X)\n+    assert \"X does not have valid feature names, but IsolationForest was fitted with feature names\" in str(record[0].message), \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}