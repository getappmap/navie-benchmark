{
  "edit_test_file": "tests/forms_tests/widget_tests/test_checkboxinput.py",
  "test_patch": "diff --git a/tests/forms_tests/widget_tests/test_splitarrayfield.py b/tests/forms_tests/widget_tests/test_splitarrayfield.py\nnew file mode 100644\nindex 0000000..f8c70a3\n--- /dev/null\n+++ b/tests/forms_tests/widget_tests/test_splitarrayfield.py\n@@ -0,0 +1,15 @@\n+from django.forms import CheckboxInput\n+from django.test import SimpleTestCase\n+\n+class SplitArrayFieldTest(SimpleTestCase):\n+    def test_checkbox_input_context_modification(self):\n+        # This test reproduces the issue where CheckboxInput modifies the attrs dict\n+        # and causes subsequent widgets to be checked incorrectly.\n+        \n+        # Initial context with True value\n+        context_true = CheckboxInput().get_context('test', True, {})\n+        self.assertTrue(context_true['widget']['attrs'].get('checked'))\n+\n+        # Context with False value but 'checked' already set to True\n+        context_false = CheckboxInput().get_context('test', False, {'checked': True})\n+        self.assertTrue(context_false['widget']['attrs'].get('checked'))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/forms_tests/widget_tests/test_splitarrayfield_inverted.py b/tests/forms_tests/widget_tests/test_splitarrayfield_inverted.py\nnew file mode 100644\nindex 0000000..cfee4c7\n--- /dev/null\n+++ b/tests/forms_tests/widget_tests/test_splitarrayfield_inverted.py\n@@ -0,0 +1,18 @@\n+from django.forms import CheckboxInput\n+from django.test import SimpleTestCase\n+\n+class SplitArrayFieldTest(SimpleTestCase):\n+    def test_checkbox_input_context_modification(self):\n+        # This test reproduces the issue where CheckboxInput modifies the attrs dict\n+        # and causes subsequent widgets to be checked incorrectly.\n+        \n+        # Initial context with True value\n+        context_true = CheckboxInput().get_context('test', True, {})\n+        self.assertTrue(context_true['widget']['attrs'].get('checked'))\n+        \n+        # Context with False value but 'checked' already set to True\n+        context_false = CheckboxInput().get_context('test', False, {'checked': True})\n+        \n+        # Alter the assertion to fail when the bug is observed\n+        if context_false['widget']['attrs'].get('checked'):\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}