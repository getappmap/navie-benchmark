{
  "edit_test_file": "tests/auth_tests/test_basic.py",
  "test_patch": "diff --git a/tests/auth_tests/test_deferred_fields_prefetch_issue.py b/tests/auth_tests/test_deferred_fields_prefetch_issue.py\nnew file mode 100644\nindex 0000000..b10a26f\n--- /dev/null\n+++ b/tests/auth_tests/test_deferred_fields_prefetch_issue.py\n@@ -0,0 +1,33 @@\n+from django.db import models\n+from django.test import TestCase\n+from django.db.models import Prefetch\n+\n+class User(models.Model):\n+    email = models.EmailField()\n+    kind = models.CharField(\n+        max_length=10, choices=[(\"ADMIN\", \"Admin\"), (\"REGULAR\", \"Regular\")]\n+    )\n+\n+class Profile(models.Model):\n+    full_name = models.CharField(max_length=255)\n+    user = models.OneToOneField(User, on_delete=models.CASCADE)\n+\n+class DeferredFieldsPrefetchIssueTest(TestCase):\n+    def test_only_related_queryset(self):\n+        user = User.objects.create(\n+            email=\"test@example.com\",\n+            kind=\"ADMIN\",\n+        )\n+        Profile.objects.create(user=user, full_name=\"Test Tester\")\n+        queryset = User.objects.only(\"email\").prefetch_related(\n+            Prefetch(\n+                \"profile\",\n+                queryset=Profile.objects.prefetch_related(\n+                    Prefetch(\"user\", queryset=User.objects.only(\"kind\"))\n+                ),\n+            )\n+        )\n+        with self.assertNumQueries(3):\n+            user = queryset.first()\n+        with self.assertNumQueries(0):\n+            self.assertEqual(user.profile.user.get_deferred_fields(), {'kind'})\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/auth_tests/test_deferred_fields_prefetch_issue_inverted.py b/tests/auth_tests/test_deferred_fields_prefetch_issue_inverted.py\nnew file mode 100644\nindex 0000000..f96c875\n--- /dev/null\n+++ b/tests/auth_tests/test_deferred_fields_prefetch_issue_inverted.py\n@@ -0,0 +1,34 @@\n+from django.db import models\n+from django.test import TestCase\n+from django.db.models import Prefetch\n+\n+class User(models.Model):\n+    email = models.EmailField()\n+    kind = models.CharField(\n+        max_length=10, choices=[(\"ADMIN\", \"Admin\"), (\"REGULAR\", \"Regular\")]\n+    )\n+\n+class Profile(models.Model):\n+    full_name = models.CharField(max_length=255)\n+    user = models.OneToOneField(User, on_delete=models.CASCADE)\n+\n+class DeferredFieldsPrefetchIssueTest(TestCase):\n+    def test_only_related_queryset(self):\n+        user = User.objects.create(\n+            email=\"test@example.com\",\n+            kind=\"ADMIN\",\n+        )\n+        Profile.objects.create(user=user, full_name=\"Test Tester\")\n+        queryset = User.objects.only(\"email\").prefetch_related(\n+            Prefetch(\n+                \"profile\",\n+                queryset=Profile.objects.prefetch_related(\n+                    Prefetch(\"user\", queryset=User.objects.only(\"kind\"))\n+                ),\n+            )\n+        )\n+        with self.assertNumQueries(3):\n+            user = queryset.first()\n+        with self.assertNumQueries(0):\n+            if user.profile.user.kind != \"ADMIN\":\n+                raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}