{
  "edit_test_file": "tests/fixtures_model_package/tests.py",
  "test_patch": "diff --git a/tests/fixtures_model_package/test_sqlite_reserved_word_table_names.py b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names.py\nnew file mode 100644\nindex 0000000..0b4ccd1\n--- /dev/null\n+++ b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names.py\n@@ -0,0 +1,24 @@\n+from django.core import management\n+from django.core.management import CommandError\n+from django.test import TestCase\n+from django.db import models\n+\n+class Order(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'fixtures_model_package'\n+\n+class LoadDataWithReservedKeywordsTestCase(TestCase):\n+    def test_loaddata_with_reserved_keyword(self):\n+        with self.assertRaises(CommandError):\n+            management.call_command('loaddata', 'order_fixture.json', verbosity=0)\n+[\n+    {\n+        \"pk\": \"1\",\n+        \"model\": \"fixtures_model_package.order\",\n+        \"fields\": {\n+            \"name\": \"Sample Order\"\n+        }\n+    }\n+]\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/fixtures_model_package/test_sqlite_reserved_word_table_names_inverted.py b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names_inverted.py\nnew file mode 100644\nindex 0000000..e1b2235\n--- /dev/null\n+++ b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names_inverted.py\n@@ -0,0 +1,17 @@\n+from django.core import management\n+from django.core.management import CommandError\n+from django.test import TestCase\n+from django.db import models\n+\n+class Order(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'fixtures_model_package'\n+\n+class LoadDataWithReservedKeywordsTestCase(TestCase):\n+    def test_loaddata_with_reserved_keyword(self):\n+        try:\n+            management.call_command('loaddata', 'order_fixture.json', verbosity=0)\n+        except CommandError:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}