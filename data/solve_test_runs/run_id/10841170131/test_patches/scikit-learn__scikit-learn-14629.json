{
  "edit_test_file": "sklearn/tests/test_multioutput.py",
  "test_patch": "diff --git a/sklearn/tests/test_cross_val_predict_multioutput.py b/sklearn/tests/test_cross_val_predict_multioutput.py\nnew file mode 100644\nindex 0000000..a20bef4\n--- /dev/null\n+++ b/sklearn/tests/test_cross_val_predict_multioutput.py\n@@ -0,0 +1,23 @@\n+import unittest\n+from sklearn.datasets import make_multilabel_classification\n+from sklearn.multioutput import MultiOutputClassifier\n+from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n+from sklearn.model_selection import cross_val_predict\n+from sklearn.exceptions import NotFittedError\n+\n+class TestCrossValPredictMultiOutput(unittest.TestCase):\n+    def test_cross_val_predict_proba_with_multioutputclassifier(self):\n+        X, Y = make_multilabel_classification()\n+        mo_lda = MultiOutputClassifier(LinearDiscriminantAnalysis())\n+        \n+        # This should work fine\n+        pred = cross_val_predict(mo_lda, X, Y, cv=5)\n+        \n+        # This should raise an AttributeError\n+        with self.assertRaises(AttributeError) as context:\n+            pred_proba = cross_val_predict(mo_lda, X, Y, cv=5, method='predict_proba')\n+        \n+        self.assertIn(\"object has no attribute 'classes_'\", str(context.exception))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/tests/test_cross_val_predict_multioutput_inverted.py b/sklearn/tests/test_cross_val_predict_multioutput_inverted.py\nnew file mode 100644\nindex 0000000..e6b2cbd\n--- /dev/null\n+++ b/sklearn/tests/test_cross_val_predict_multioutput_inverted.py\n@@ -0,0 +1,23 @@\n+import unittest\n+from sklearn.datasets import make_multilabel_classification\n+from sklearn.multioutput import MultiOutputClassifier\n+from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n+from sklearn.model_selection import cross_val_predict\n+\n+class TestCrossValPredictMultiOutput(unittest.TestCase):\n+    def test_cross_val_predict_proba_with_multioutputclassifier(self):\n+        X, Y = make_multilabel_classification()\n+        mo_lda = MultiOutputClassifier(LinearDiscriminantAnalysis())\n+        \n+        # This should work fine\n+        pred = cross_val_predict(mo_lda, X, Y, cv=5)\n+        \n+        # This should raise an AttributeError\n+        with self.assertRaises(AttributeError) as context:\n+            pred_proba = cross_val_predict(mo_lda, X, Y, cv=5, method='predict_proba')\n+        \n+        # Alter the test to fail when the bug is observed\n+        self.assertNotIn(\"object has no attribute 'classes_'\", str(context.exception), \"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}