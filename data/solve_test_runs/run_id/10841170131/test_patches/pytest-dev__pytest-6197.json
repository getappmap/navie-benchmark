{
  "edit_test_file": "testing/example_scripts/collect/collect_init_tests/tests/__init__.py",
  "test_patch": "diff --git a/testing/example_scripts/collect/collect_init_tests/tests/test_regression_pytest_init.py b/testing/example_scripts/collect/collect_init_tests/tests/test_regression_pytest_init.py\nnew file mode 100644\nindex 0000000..fd9bca9\n--- /dev/null\n+++ b/testing/example_scripts/collect/collect_init_tests/tests/test_regression_pytest_init.py\n@@ -0,0 +1,14 @@\n+import os\n+import pytest\n+\n+def test_regression_pytest_collects_init_py(tmpdir):\n+    # Create a directory structure with an __init__.py file\n+    foobar_dir = tmpdir.mkdir(\"foobar\")\n+    init_file = foobar_dir.join(\"__init__.py\")\n+    init_file.write(\"assert False\")\n+\n+    # Run pytest in the temporary directory\n+    result = pytest.main([str(tmpdir)])\n+\n+    # Assert that pytest collected the __init__.py file and failed\n+    assert result == pytest.ExitCode.INTERRUPTED\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/testing/example_scripts/collect/collect_init_tests/tests/test_regression_pytest_init_inverted.py b/testing/example_scripts/collect/collect_init_tests/tests/test_regression_pytest_init_inverted.py\nnew file mode 100644\nindex 0000000..67fa3c4\n--- /dev/null\n+++ b/testing/example_scripts/collect/collect_init_tests/tests/test_regression_pytest_init_inverted.py\n@@ -0,0 +1,18 @@\n+import os\n+import pytest\n+\n+def test_regression_pytest_collects_init_py(tmpdir):\n+    # Create a directory structure with an __init__.py file\n+    foobar_dir = tmpdir.mkdir(\"foobar\")\n+    init_file = foobar_dir.join(\"__init__.py\")\n+    init_file.write(\"assert False\")\n+\n+    # Run pytest in the temporary directory\n+    result = pytest.main([str(tmpdir)])\n+\n+    # Assert that pytest collected the __init__.py file and failed\n+    # Change the assertion to fail when the bug is observed\n+    if result == pytest.ExitCode.INTERRUPTED:\n+        raise AssertionError(\"__BUG__HERE__\")\n+    else:\n+        assert result != pytest.ExitCode.OK\n\\ No newline at end of file\n"
}