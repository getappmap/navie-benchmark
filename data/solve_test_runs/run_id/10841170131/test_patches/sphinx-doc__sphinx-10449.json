{
  "edit_test_file": "tests/test_ext_autodoc_autodata.py",
  "test_patch": "diff --git a/tests/test_autodoc_typehints_return_issue.py b/tests/test_autodoc_typehints_return_issue.py\nnew file mode 100644\nindex 0000000..150b414\n--- /dev/null\n+++ b/tests/test_autodoc_typehints_return_issue.py\n@@ -0,0 +1,28 @@\n+import os\n+import sys\n+import unittest\n+from sphinx.application import Sphinx\n+from sphinx.errors import ConfigError\n+\n+class TestAutodocTypehintsReturnIssue(unittest.TestCase):\n+    @classmethod\n+    def setUpClass(cls):\n+        cls.srcdir = os.path.abspath(os.path.dirname(__file__))\n+        cls.outdir = os.path.join(cls.srcdir, '_build')\n+        cls.doctreedir = os.path.join(cls.srcdir, '_doctrees')\n+        cls.confdir = os.path.join(cls.srcdir, 'test-ext-autodoc')\n+\n+    def test_autodoc_typehints_description_includes_return_type(self):\n+        with self.assertRaises(ConfigError):\n+            app = Sphinx(\n+                srcdir=self.srcdir,\n+                confdir=self.confdir,\n+                outdir=self.outdir,\n+                doctreedir=self.doctreedir,\n+                buildername='html',\n+                confoverrides={'autodoc_typehints': 'description'},\n+            )\n+            app.build()\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": null
}