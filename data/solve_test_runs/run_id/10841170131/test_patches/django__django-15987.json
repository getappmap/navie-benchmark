{
  "edit_test_file": "tests/fixtures_regress/tests.py",
  "test_patch": "diff --git a/tests/fixtures_regress/test_fixture_dirs_duplicate_detection.py b/tests/fixtures_regress/test_fixture_dirs_duplicate_detection.py\nnew file mode 100644\nindex 0000000..6810dde\n--- /dev/null\n+++ b/tests/fixtures_regress/test_fixture_dirs_duplicate_detection.py\n@@ -0,0 +1,22 @@\n+import os\n+from pathlib import Path\n+from django.core import management\n+from django.core.exceptions import ImproperlyConfigured\n+from django.test import TestCase, override_settings\n+\n+class TestFixtureDirsDuplicateDetection(TestCase):\n+    @override_settings(\n+        FIXTURE_DIRS=[\n+            Path(os.path.join(os.path.dirname(__file__), \"fixtures_1\")),\n+            Path(os.path.join(os.path.dirname(__file__), \"fixtures_1\")),\n+        ]\n+    )\n+    def test_fixture_dirs_with_path_duplicates(self):\n+        \"\"\"\n+        Test that FIXTURE_DIRS containing Path instances with duplicates\n+        does not raise ImproperlyConfigured, reproducing the issue.\n+        \"\"\"\n+        with self.assertRaisesMessage(\n+            ImproperlyConfigured, \"settings.FIXTURE_DIRS contains duplicates.\"\n+        ):\n+            management.call_command(\"loaddata\", \"absolute.json\", verbosity=0)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/fixtures_regress/test_fixture_dirs_duplicate_detection_inverted.py b/tests/fixtures_regress/test_fixture_dirs_duplicate_detection_inverted.py\nnew file mode 100644\nindex 0000000..3a4cd7d\n--- /dev/null\n+++ b/tests/fixtures_regress/test_fixture_dirs_duplicate_detection_inverted.py\n@@ -0,0 +1,22 @@\n+import os\n+from pathlib import Path\n+from django.core import management\n+from django.core.exceptions import ImproperlyConfigured\n+from django.test import TestCase, override_settings\n+\n+class TestFixtureDirsDuplicateDetection(TestCase):\n+    @override_settings(\n+        FIXTURE_DIRS=[\n+            Path(os.path.join(os.path.dirname(__file__), \"fixtures_1\")),\n+            Path(os.path.join(os.path.dirname(__file__), \"fixtures_1\")),\n+        ]\n+    )\n+    def test_fixture_dirs_with_path_duplicates(self):\n+        \"\"\"\n+        Test that FIXTURE_DIRS containing Path instances with duplicates\n+        raises ImproperlyConfigured, indicating the presence of the bug.\n+        \"\"\"\n+        try:\n+            management.call_command(\"loaddata\", \"absolute.json\", verbosity=0)\n+        except ImproperlyConfigured as e:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}