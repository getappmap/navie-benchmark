{
  "edit_test_file": "tests/test_ext_apidoc.py",
  "test_patch": "diff --git a/tests/test_ext_autodoc_all_handling.py b/tests/test_ext_autodoc_all_handling.py\nnew file mode 100644\nindex 0000000..af16e51\n--- /dev/null\n+++ b/tests/test_ext_autodoc_all_handling.py\n@@ -0,0 +1,44 @@\n+import os\n+import sys\n+import pytest\n+from sphinx.application import Sphinx\n+from sphinx.testing.path import path\n+from io import StringIO\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_autodoc_empty_all(app, status, warning):\n+    # Create a temporary directory for the test\n+    srcdir = path(app.srcdir)\n+    example_py = srcdir / 'example.py'\n+    index_rst = srcdir / 'index.rst'\n+\n+    # Write the example.py file with an empty __all__ attribute\n+    example_py.write_text(\"\"\"\n+__all__ = []\n+\n+def foo():\n+    \"docstring\"\n+\n+def bar():\n+    \"docstring\"\n+\n+def baz():\n+    \"docstring\"\n+\"\"\")\n+\n+    # Write the index.rst file to include the example module\n+    index_rst.write_text(\"\"\"\n+.. automodule:: example\n+   :members:\n+\"\"\")\n+\n+    # Build the documentation\n+    app.builder.build_all()\n+\n+    # Read the generated HTML content\n+    content = (app.outdir / 'index.html').read_text()\n+\n+    # Check that foo, bar, and baz are incorrectly shown\n+    assert 'foo' in content\n+    assert 'bar' in content\n+    assert 'baz' in content\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/test_ext_autodoc_all_handling_inverted.py b/tests/test_ext_autodoc_all_handling_inverted.py\nnew file mode 100644\nindex 0000000..91ca66f\n--- /dev/null\n+++ b/tests/test_ext_autodoc_all_handling_inverted.py\n@@ -0,0 +1,44 @@\n+import os\n+import sys\n+import pytest\n+from sphinx.application import Sphinx\n+from sphinx.testing.path import path\n+from io import StringIO\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_autodoc_empty_all(app, status, warning):\n+    # Create a temporary directory for the test\n+    srcdir = path(app.srcdir)\n+    example_py = srcdir / 'example.py'\n+    index_rst = srcdir / 'index.rst'\n+\n+    # Write the example.py file with an empty __all__ attribute\n+    example_py.write_text(\"\"\"\n+__all__ = []\n+\n+def foo():\n+    \"docstring\"\n+\n+def bar():\n+    \"docstring\"\n+\n+def baz():\n+    \"docstring\"\n+\"\"\")\n+\n+    # Write the index.rst file to include the example module\n+    index_rst.write_text(\"\"\"\n+.. automodule:: example\n+   :members:\n+\"\"\")\n+\n+    # Build the documentation\n+    app.builder.build_all()\n+\n+    # Read the generated HTML content\n+    content = (app.outdir / 'index.html').read_text()\n+\n+    # Check that foo, bar, and baz are incorrectly shown\n+    # This should now fail if the bug is present\n+    if 'foo' in content or 'bar' in content or 'baz' in content:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}