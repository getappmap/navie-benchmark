{
  "edit_test_file": "lib/matplotlib/tests/test_units.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_span_selector_limits.py b/lib/matplotlib/tests/test_span_selector_limits.py\nnew file mode 100644\nindex 0000000..e02876d\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_span_selector_limits.py\n@@ -0,0 +1,17 @@\n+import matplotlib.pyplot as plt\n+from matplotlib.widgets import SpanSelector\n+import unittest\n+\n+class TestSpanSelectorLimits(unittest.TestCase):\n+    def test_interactive_span_selector_forces_zero_limit(self):\n+        fig, ax = plt.subplots()\n+        ax.plot([10, 20], [10, 20])\n+        ss = SpanSelector(ax, print, \"horizontal\", interactive=True)\n+        fig.canvas.draw_idle()  # Trigger the drawing\n+\n+        # Check if the x-axis limits include 0, which is the incorrect behavior\n+        xlim = ax.get_xlim()\n+        self.assertTrue(0 in xlim, \"The x-axis limits incorrectly include 0.\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_span_selector_limits_inverted.py b/lib/matplotlib/tests/test_span_selector_limits_inverted.py\nnew file mode 100644\nindex 0000000..14a1823\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_span_selector_limits_inverted.py\n@@ -0,0 +1,19 @@\n+import matplotlib.pyplot as plt\n+from matplotlib.widgets import SpanSelector\n+import unittest\n+\n+class TestSpanSelectorLimits(unittest.TestCase):\n+    def test_interactive_span_selector_forces_zero_limit(self):\n+        fig, ax = plt.subplots()\n+        ax.plot([10, 20], [10, 20])\n+        ss = SpanSelector(ax, print, \"horizontal\", interactive=True)\n+        fig.canvas.draw_idle()  # Trigger the drawing\n+\n+        # Check if the x-axis limits include 0, which is the incorrect behavior\n+        xlim = ax.get_xlim()\n+        # Alter the test to fail when the bug is observed\n+        if 0 in xlim:\n+            raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n"
}