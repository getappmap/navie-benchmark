{
  "edit_test_file": "tests/backends/mysql/test_operations.py",
  "test_patch": "diff --git a/tests/backends/mysql/test_performance_regression.py b/tests/backends/mysql/test_performance_regression.py\nnew file mode 100644\nindex 0000000..c9eda91\n--- /dev/null\n+++ b/tests/backends/mysql/test_performance_regression.py\n@@ -0,0 +1,28 @@\n+import unittest\n+from django.db import connection\n+from django.test import TestCase\n+from ..models import Author\n+\n+class MySQLPerformanceRegressionTests(TestCase):\n+    @unittest.skipUnless(connection.vendor == 'mysql', 'MySQL tests.')\n+    def test_deletion_subquery_performance_regression(self):\n+        # Create a test table with some data\n+        Author.objects.bulk_create([\n+            Author(name='Author 1'),\n+            Author(name='Author 2'),\n+            Author(name='Author 3'),\n+        ])\n+\n+        # Capture the SQL generated by the delete operation\n+        with connection.cursor() as cursor:\n+            with self.assertLogs('django.db.backends', level='DEBUG') as cm:\n+                Author.objects.all().delete()\n+\n+        # Check that the SQL contains the problematic subquery pattern\n+        self.assertTrue(\n+            any(\n+                'DELETE FROM `tests_custom_lookups_author` WHERE `tests_custom_lookups_author`.`id` IN (SELECT `tests_custom_lookups_author`.`id` FROM `tests_custom_lookups_author`)' in message\n+                for message in cm.output\n+            ),\n+            \"The SQL generated does not match the expected subquery pattern.\"\n+        )\n\\ No newline at end of file\n",
  "inverted_patch": null
}