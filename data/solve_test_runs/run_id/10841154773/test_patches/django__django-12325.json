{
  "edit_test_file": "tests/model_inheritance/tests.py",
  "test_patch": "diff --git a/tests/model_inheritance/test_mti_one_to_one_conflict.py b/tests/model_inheritance/test_mti_one_to_one_conflict.py\nnew file mode 100644\nindex 0000000..fe9e581\n--- /dev/null\n+++ b/tests/model_inheritance/test_mti_one_to_one_conflict.py\n@@ -0,0 +1,15 @@\n+from django.db import models\n+from django.core.exceptions import ImproperlyConfigured\n+from django.test import TestCase\n+\n+class Document(models.Model):\n+    pass\n+\n+class MTIOnetoOneConfusionTest(TestCase):\n+    def test_mti_onetoone_confusion(self):\n+        with self.assertRaises(ImproperlyConfigured) as cm:\n+            class Picking(Document):\n+                document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n+                origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n+        \n+        self.assertIn(\"Add parent_link=True to model_inheritance.Picking.origin.\", str(cm.exception))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/model_inheritance/test_mti_one_to_one_conflict_inverted.py b/tests/model_inheritance/test_mti_one_to_one_conflict_inverted.py\nnew file mode 100644\nindex 0000000..d74f657\n--- /dev/null\n+++ b/tests/model_inheritance/test_mti_one_to_one_conflict_inverted.py\n@@ -0,0 +1,16 @@\n+from django.db import models\n+from django.core.exceptions import ImproperlyConfigured\n+from django.test import TestCase\n+\n+class Document(models.Model):\n+    pass\n+\n+class MTIOnetoOneConfusionTest(TestCase):\n+    def test_mti_onetoone_confusion(self):\n+        with self.assertRaises(ImproperlyConfigured) as cm:\n+            class Picking(Document):\n+                document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n+                origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n+        \n+        # Alter the assertion to ensure the test fails when the bug is observed\n+        self.assertNotIn(\"Add parent_link=True to model_inheritance.Picking.origin.\", str(cm.exception), \"__BUG__HERE__\")\n\\ No newline at end of file\n"
}