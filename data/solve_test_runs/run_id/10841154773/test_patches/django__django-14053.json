{
  "edit_test_file": "tests/staticfiles_tests/test_storage.py",
  "test_patch": "diff --git a/tests/staticfiles_tests/test_hashedfilesmixin_post_process.py b/tests/staticfiles_tests/test_hashedfilesmixin_post_process.py\nnew file mode 100644\nindex 0000000..5559b02\n--- /dev/null\n+++ b/tests/staticfiles_tests/test_hashedfilesmixin_post_process.py\n@@ -0,0 +1,26 @@\n+import os\n+import shutil\n+import tempfile\n+from io import StringIO\n+from django.core.management import call_command\n+from django.test import SimpleTestCase, override_settings\n+\n+class TestHashedFilesMixinPostProcess(SimpleTestCase):\n+    @override_settings(STATICFILES_STORAGE='django.contrib.staticfiles.storage.ManifestStaticFilesStorage')\n+    def test_duplicate_yield_in_post_process(self):\n+        \"\"\"\n+        Test that post_process yields multiple times for the same file.\n+        \"\"\"\n+        temp_dir = tempfile.mkdtemp()\n+        self.addCleanup(shutil.rmtree, temp_dir)\n+        os.makedirs(os.path.join(temp_dir, 'admin', 'css'))\n+        with open(os.path.join(temp_dir, 'admin', 'css', 'base.css'), 'w') as f:\n+            f.write('body { background: white; }')\n+\n+        stdout = StringIO()\n+        call_command('collectstatic', interactive=False, verbosity=2, stdout=stdout, ignore_patterns=[])\n+        output = stdout.getvalue()\n+\n+        # Count occurrences of 'admin/css/base.css' in the output\n+        base_css_count = output.count(\"Post-processed 'admin/css/base.css'\")\n+        self.assertGreater(base_css_count, 1, \"Expected multiple post-processings for 'admin/css/base.css'\")\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/staticfiles_tests/test_hashedfilesmixin_post_process_inverted.py b/tests/staticfiles_tests/test_hashedfilesmixin_post_process_inverted.py\nnew file mode 100644\nindex 0000000..c4a4cc1\n--- /dev/null\n+++ b/tests/staticfiles_tests/test_hashedfilesmixin_post_process_inverted.py\n@@ -0,0 +1,28 @@\n+import os\n+import shutil\n+import tempfile\n+from io import StringIO\n+from django.core.management import call_command\n+from django.test import SimpleTestCase, override_settings\n+\n+class TestHashedFilesMixinPostProcess(SimpleTestCase):\n+    @override_settings(STATICFILES_STORAGE='django.contrib.staticfiles.storage.ManifestStaticFilesStorage')\n+    def test_duplicate_yield_in_post_process(self):\n+        \"\"\"\n+        Test that post_process yields multiple times for the same file.\n+        \"\"\"\n+        temp_dir = tempfile.mkdtemp()\n+        self.addCleanup(shutil.rmtree, temp_dir)\n+        os.makedirs(os.path.join(temp_dir, 'admin', 'css'))\n+        with open(os.path.join(temp_dir, 'admin', 'css', 'base.css'), 'w') as f:\n+            f.write('body { background: white; }')\n+\n+        stdout = StringIO()\n+        call_command('collectstatic', interactive=False, verbosity=2, stdout=stdout, ignore_patterns=[])\n+        output = stdout.getvalue()\n+\n+        # Count occurrences of 'admin/css/base.css' in the output\n+        base_css_count = output.count(\"Post-processed 'admin/css/base.css'\")\n+        \n+        # Alter the assertion to fail when the issue is observed\n+        self.assertLessEqual(base_css_count, 1, \"__BUG__HERE__\")\n\\ No newline at end of file\n"
}