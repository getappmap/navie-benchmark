{
  "edit_test_file": "tests/auth_tests/test_validators.py",
  "test_patch": "diff --git a/tests/auth_tests/test_username_validation.py b/tests/auth_tests/test_username_validation.py\nnew file mode 100644\nindex 0000000..f38df1a\n--- /dev/null\n+++ b/tests/auth_tests/test_username_validation.py\n@@ -0,0 +1,24 @@\n+from django.core.exceptions import ValidationError\n+from django.test import SimpleTestCase\n+from django.contrib.auth import validators\n+\n+class UsernameValidationTests(SimpleTestCase):\n+    def test_ascii_validator_allows_trailing_newline(self):\n+        # This test reproduces the issue where ASCIIUsernameValidator allows trailing newlines.\n+        username_with_newline = 'validusername\\n'\n+        v = validators.ASCIIUsernameValidator()\n+        try:\n+            v(username_with_newline)\n+            self.assertTrue(True, \"ASCIIUsernameValidator incorrectly allows trailing newline.\")\n+        except ValidationError:\n+            self.fail(\"ASCIIUsernameValidator should allow trailing newline due to the issue.\")\n+\n+    def test_unicode_validator_allows_trailing_newline(self):\n+        # This test reproduces the issue where UnicodeUsernameValidator allows trailing newlines.\n+        username_with_newline = 'validusername\\n'\n+        v = validators.UnicodeUsernameValidator()\n+        try:\n+            v(username_with_newline)\n+            self.assertTrue(True, \"UnicodeUsernameValidator incorrectly allows trailing newline.\")\n+        except ValidationError:\n+            self.fail(\"UnicodeUsernameValidator should allow trailing newline due to the issue.\")\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/auth_tests/test_username_validation_inverted.py b/tests/auth_tests/test_username_validation_inverted.py\nnew file mode 100644\nindex 0000000..f956521\n--- /dev/null\n+++ b/tests/auth_tests/test_username_validation_inverted.py\n@@ -0,0 +1,24 @@\n+from django.core.exceptions import ValidationError\n+from django.test import SimpleTestCase\n+from django.contrib.auth import validators\n+\n+class UsernameValidationTests(SimpleTestCase):\n+    def test_ascii_validator_allows_trailing_newline(self):\n+        # This test should fail if ASCIIUsernameValidator allows trailing newlines.\n+        username_with_newline = 'validusername\\n'\n+        v = validators.ASCIIUsernameValidator()\n+        try:\n+            v(username_with_newline)\n+            self.fail(\"__BUG__HERE__\")\n+        except ValidationError:\n+            self.assertTrue(True, \"ASCIIUsernameValidator correctly raises ValidationError for trailing newline.\")\n+\n+    def test_unicode_validator_allows_trailing_newline(self):\n+        # This test should fail if UnicodeUsernameValidator allows trailing newlines.\n+        username_with_newline = 'validusername\\n'\n+        v = validators.UnicodeUsernameValidator()\n+        try:\n+            v(username_with_newline)\n+            self.fail(\"__BUG__HERE__\")\n+        except ValidationError:\n+            self.assertTrue(True, \"UnicodeUsernameValidator correctly raises ValidationError for trailing newline.\")\n\\ No newline at end of file\n"
}