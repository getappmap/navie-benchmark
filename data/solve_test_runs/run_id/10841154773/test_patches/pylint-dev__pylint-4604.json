{
  "edit_test_file": "tests/functional/u/unused/unused_typing_imports.rc",
  "test_patch": "diff --git a/tests/functional/u/unused/unused_import_in_type_comment.py b/tests/functional/u/unused/unused_import_in_type_comment.py\nnew file mode 100644\nindex 0000000..73d9852\n--- /dev/null\n+++ b/tests/functional/u/unused/unused_import_in_type_comment.py\n@@ -0,0 +1,36 @@\n+\"\"\"Test for unused-import false positive with type comments.\"\"\"\n+\n+import unittest\n+import subprocess\n+import os\n+\n+class TestUnusedImportInTypeComment(unittest.TestCase):\n+    def test_unused_import_in_type_comment(self):\n+        # Create a temporary Python file to test the issue\n+        test_file_content = '''\"\"\"Docstring.\"\"\"\n+\n+import abc\n+from abc import ABC\n+\n+X = ...  # type: abc.ABC\n+Y = ...  # type: ABC\n+'''\n+        test_file_path = '/tmp/test_unused_import_in_type_comment.py'\n+        with open(test_file_path, 'w') as test_file:\n+            test_file.write(test_file_content)\n+\n+        # Run pylint on the temporary file\n+        result = subprocess.run(\n+            ['pylint', test_file_path],\n+            capture_output=True,\n+            text=True\n+        )\n+\n+        # Check if the output contains the false positive warning\n+        self.assertIn(\"Unused import abc\", result.stdout)\n+\n+        # Clean up the temporary file\n+        os.remove(test_file_path)\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/functional/u/unused/unused_import_in_type_comment_inverted.py b/tests/functional/u/unused/unused_import_in_type_comment_inverted.py\nnew file mode 100644\nindex 0000000..c96221f\n--- /dev/null\n+++ b/tests/functional/u/unused/unused_import_in_type_comment_inverted.py\n@@ -0,0 +1,37 @@\n+\"\"\"Test for unused-import false positive with type comments.\"\"\"\n+\n+import unittest\n+import subprocess\n+import os\n+\n+class TestUnusedImportInTypeComment(unittest.TestCase):\n+    def test_unused_import_in_type_comment(self):\n+        # Create a temporary Python file to test the issue\n+        test_file_content = '''\"\"\"Docstring.\"\"\"\n+\n+import abc\n+from abc import ABC\n+\n+X = ...  # type: abc.ABC\n+Y = ...  # type: ABC\n+'''\n+        test_file_path = '/tmp/test_unused_import_in_type_comment.py'\n+        with open(test_file_path, 'w') as test_file:\n+            test_file.write(test_file_content)\n+\n+        # Run pylint on the temporary file\n+        result = subprocess.run(\n+            ['pylint', test_file_path],\n+            capture_output=True,\n+            text=True\n+        )\n+\n+        # Check if the output contains the false positive warning\n+        if \"Unused import abc\" in result.stdout:\n+            raise AssertionError(\"__BUG__HERE__\")\n+\n+        # Clean up the temporary file\n+        os.remove(test_file_path)\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}