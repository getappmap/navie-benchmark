{
  "edit_test_file": "lib/matplotlib/tests/test_figure.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_axes_clearing.py b/lib/matplotlib/tests/test_axes_clearing.py\nnew file mode 100644\nindex 0000000..e4b37b5\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_axes_clearing.py\n@@ -0,0 +1,16 @@\n+import matplotlib.pyplot as plt\n+import unittest\n+\n+class TestAxesClearing(unittest.TestCase):\n+    def test_cla_does_not_unset_axes_attribute(self):\n+        # Create a figure and axes\n+        fig, ax = plt.subplots()\n+        # Plot a line and get the line artist\n+        line, = ax.plot([1, 2])\n+        # Clear the axes\n+        ax.cla()\n+        # Check if the line's axes attribute is still set\n+        self.assertIsNotNone(line.axes, \"Expected line.axes to be set, but it was None\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_axes_clearing_inverted.py b/lib/matplotlib/tests/test_axes_clearing_inverted.py\nnew file mode 100644\nindex 0000000..54a2c73\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_axes_clearing_inverted.py\n@@ -0,0 +1,17 @@\n+import matplotlib.pyplot as plt\n+import unittest\n+\n+class TestAxesClearing(unittest.TestCase):\n+    def test_cla_unsets_axes_attribute(self):\n+        # Create a figure and axes\n+        fig, ax = plt.subplots()\n+        # Plot a line and get the line artist\n+        line, = ax.plot([1, 2])\n+        # Clear the axes\n+        ax.cla()\n+        # Check if the line's axes attribute is unset\n+        if line.axes is not None:\n+            raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}