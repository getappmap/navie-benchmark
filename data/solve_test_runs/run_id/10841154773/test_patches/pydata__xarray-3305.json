{
  "edit_test_file": "xarray/tests/test_groupby.py",
  "test_patch": "diff --git a/xarray/tests/test_quantile.py b/xarray/tests/test_quantile.py\nnew file mode 100644\nindex 0000000..9fcda40\n--- /dev/null\n+++ b/xarray/tests/test_quantile.py\n@@ -0,0 +1,12 @@\n+import xarray as xr\n+from xarray.testing import assert_identical\n+\n+def test_dataarray_quantile_keep_attrs():\n+    # Create a DataArray with attributes\n+    da = xr.DataArray([0, 0], dims=\"x\", attrs={'units': 'K'})\n+    \n+    # Compute the quantile with keep_attrs=True\n+    out = da.quantile(0.9, dim='x', keep_attrs=True)\n+    \n+    # Check that the attributes are not retained\n+    assert out.attrs == {}, \"Attributes should not be retained, but they are.\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/xarray/tests/test_quantile_inverted.py b/xarray/tests/test_quantile_inverted.py\nnew file mode 100644\nindex 0000000..38aa656\n--- /dev/null\n+++ b/xarray/tests/test_quantile_inverted.py\n@@ -0,0 +1,12 @@\n+import xarray as xr\n+from xarray.testing import assert_identical\n+\n+def test_dataarray_quantile_keep_attrs():\n+    # Create a DataArray with attributes\n+    da = xr.DataArray([0, 0], dims=\"x\", attrs={'units': 'K'})\n+    \n+    # Compute the quantile with keep_attrs=True\n+    out = da.quantile(0.9, dim='x', keep_attrs=True)\n+    \n+    # Check that the attributes are retained\n+    assert out.attrs == {'units': 'K'}, \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}