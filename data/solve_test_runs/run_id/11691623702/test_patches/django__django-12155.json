{
  "edit_test_file": "tests/admin_docs/test_utils.py",
  "test_patch": "diff --git a/tests/admin_docs/test_docstring_indentation.py b/tests/admin_docs/test_docstring_indentation.py\nnew file mode 100644\nindex 0000000..991a6f3\n--- /dev/null\n+++ b/tests/admin_docs/test_docstring_indentation.py\n@@ -0,0 +1,21 @@\n+import unittest\n+\n+from django.contrib.admindocs.utils import docutils_is_available, parse_rst\n+from django.test import SimpleTestCase\n+\n+\n+@unittest.skipUnless(docutils_is_available, \"no docutils installed.\")\n+class TestDocstringIndentation(SimpleTestCase):\n+    \"\"\"This docstring starts on first line.\n+    It should cause docutils to raise an error when processed\n+    because there is no empty first line.\n+    \"\"\"\n+\n+    def test_docstring_no_empty_first_line(self):\n+        \"\"\"This docstring starts on first line.\n+        It should trigger a docutils error when processed.\n+        \"\"\"\n+        title = self.__doc__\n+        with self.assertRaises(Exception):\n+            # This should raise an error since the docstring starts on first line\n+            parse_rst(title, 'model', 'model:test')\n\\ No newline at end of file\n",
  "inverted_patch": null
}