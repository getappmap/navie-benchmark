{
  "edit_test_file": "tests/model_fields/test_datetimefield.py",
  "test_patch": "diff --git a/tests/model_fields/test_timezone_database_settings.py b/tests/model_fields/test_timezone_database_settings.py\nnew file mode 100644\nindex 0000000..fddb54d\n--- /dev/null\n+++ b/tests/model_fields/test_timezone_database_settings.py\n@@ -0,0 +1,47 @@\n+import datetime\n+\n+from django.test import TestCase, override_settings\n+from django.utils import timezone\n+\n+from .models import DateTimeModel\n+\n+\n+@override_settings(USE_TZ=True, TIME_ZONE='Europe/Paris')\n+class DatabaseTimeZoneTests(TestCase):\n+    @classmethod\n+    def setUpClass(cls):\n+        super().setUpClass()\n+        # Create a timezone-aware datetime in Europe/Paris\n+        cls.test_datetime = datetime.datetime(2017, 7, 6, 20, 50)\n+        cls.test_datetime = timezone.make_aware(cls.test_datetime)\n+\n+    def setUp(self):\n+        super().setUp()\n+        # Create test data with the timezone-aware datetime\n+        self.test_model = DateTimeModel.objects.create(\n+            d=self.test_datetime.date(),\n+            dt=self.test_datetime,\n+            t=self.test_datetime.time()\n+        )\n+\n+    def test_date_lookup_with_database_timezone(self):\n+        \"\"\"\n+        When USE_TZ=True and the database has a TIME_ZONE setting matching Django's TIME_ZONE,\n+        date lookups should work correctly without timezone conversion.\n+        \"\"\"\n+        # Override database settings to set TIME_ZONE\n+        with self.settings(DATABASES={\n+            'default': {\n+                'ENGINE': 'django.db.backends.sqlite3',\n+                'NAME': ':memory:',\n+                'TIME_ZONE': 'Europe/Paris',  # Same as Django TIME_ZONE\n+            }\n+        }):\n+            # Query using the date portion of our test datetime\n+            exists = DateTimeModel.objects.filter(\n+                dt__date=self.test_datetime.date()\n+            ).exists()\n+\n+            # This should be True since the database timezone matches Django's timezone,\n+            # but will be False due to the bug where Django incorrectly converts from UTC\n+            self.assertTrue(exists)\n\\ No newline at end of file\n",
  "inverted_patch": null
}