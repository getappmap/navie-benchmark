{
  "edit_test_file": "tests/model_formsets/tests.py",
  "test_patch": "diff --git a/tests/model_formsets/test_uuid_inline_admin.py b/tests/model_formsets/test_uuid_inline_admin.py\nnew file mode 100644\nindex 0000000..41fd65e\n--- /dev/null\n+++ b/tests/model_formsets/test_uuid_inline_admin.py\n@@ -0,0 +1,55 @@\n+import uuid\n+\n+from django.db import models\n+from django.forms.models import inlineformset_factory\n+from django.test import TestCase\n+\n+\n+class UUIDModel(models.Model):\n+    pkid = models.BigAutoField(primary_key=True, editable=False)\n+    id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n+\n+    class Meta:\n+        abstract = True\n+\n+\n+class Thing(UUIDModel):\n+    name = models.CharField(max_length=191)\n+\n+\n+class SubThing(models.Model):\n+    name = models.CharField(max_length=191)\n+    thing = models.ForeignKey(\n+        Thing,\n+        to_field='id',\n+        on_delete=models.CASCADE,\n+        related_name='subthings',\n+    )\n+\n+\n+class UUIDInlineFormsetTest(TestCase):\n+    def test_uuid_inline_formset_default_value(self):\n+        \"\"\"\n+        Test that inline formsets properly handle UUIDField default values.\n+        The issue is that when saving a model with a UUIDField and inline forms,\n+        the UUID field is incorrectly set to null instead of using its default value.\n+        \"\"\"\n+        SubThingFormSet = inlineformset_factory(Thing, SubThing, fields=['name'])\n+        \n+        # Create the main form data\n+        data = {\n+            'name': 'Test Thing',\n+            'subthings-TOTAL_FORMS': '1',\n+            'subthings-INITIAL_FORMS': '0',\n+            'subthings-MAX_NUM_FORMS': '',\n+            'subthings-0-name': 'Test SubThing',\n+        }\n+\n+        # This should raise an IntegrityError because the UUID field is being\n+        # incorrectly set to null when it should use the default value\n+        with self.assertRaises(Exception):\n+            thing = Thing(name=data['name'])\n+            formset = SubThingFormSet(data, instance=thing)\n+            self.assertTrue(formset.is_valid())\n+            thing.save()\n+            formset.save()\n\\ No newline at end of file\n",
  "inverted_patch": null
}