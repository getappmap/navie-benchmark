{
  "edit_test_file": "sympy/physics/vector/tests/test_output.py",
  "test_patch": "diff --git a/sympy/physics/vector/tests/test_vector_addition.py b/sympy/physics/vector/tests/test_vector_addition.py\nnew file mode 100644\nindex 0000000..1a18995\n--- /dev/null\n+++ b/sympy/physics/vector/tests/test_vector_addition.py\n@@ -0,0 +1,8 @@\n+from sympy.physics.vector import ReferenceFrame, Vector\n+from sympy.utilities.pytest import raises\n+\n+def test_vector_sum_with_zero():\n+    \"\"\"Test that summing a list containing a vector and zero times a vector raises TypeError\"\"\"\n+    N = ReferenceFrame('N')\n+    with raises(TypeError):\n+        sum([N.x, (0 * N.x)])\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/physics/vector/tests/test_vector_addition_inverted.py b/sympy/physics/vector/tests/test_vector_addition_inverted.py\nnew file mode 100644\nindex 0000000..662aa0e\n--- /dev/null\n+++ b/sympy/physics/vector/tests/test_vector_addition_inverted.py\n@@ -0,0 +1,13 @@\n+from sympy.physics.vector import ReferenceFrame, Vector\n+from sympy.utilities.pytest import raises\n+\n+def test_vector_sum_with_zero():\n+    \"\"\"Test that summing a list containing a vector and zero times a vector works correctly\"\"\"\n+    N = ReferenceFrame('N')\n+    try:\n+        result = sum([N.x, (0 * N.x)])\n+    except TypeError:\n+        raise AssertionError(\"__BUG__HERE__\")\n+        \n+    # The result should equal N.x since adding zero to a vector should return the original vector\n+    assert result == N.x\n\\ No newline at end of file\n"
}