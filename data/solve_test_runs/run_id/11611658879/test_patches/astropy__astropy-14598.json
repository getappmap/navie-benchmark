{
  "edit_test_file": "astropy/io/fits/tests/test_header.py",
  "test_patch": "diff --git a/astropy/io/fits/tests/test_fits_card_quotes.py b/astropy/io/fits/tests/test_fits_card_quotes.py\nnew file mode 100644\nindex 0000000..abdf7d7\n--- /dev/null\n+++ b/astropy/io/fits/tests/test_fits_card_quotes.py\n@@ -0,0 +1,35 @@\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+\n+import pytest\n+from astropy.io import fits\n+\n+\n+def test_double_single_quote_handling():\n+    \"\"\"\n+    Test that verifies the inconsistent handling of double single-quotes ('') \n+    in FITS card values at certain string lengths.\n+    \"\"\"\n+    # Test cases where double quotes are at the end of the string\n+    problematic_lengths = [65, 67, 68, 69]  # Lengths where the issue occurs\n+    \n+    for length in problematic_lengths:\n+        # Create a card with a string of x's followed by double single quotes\n+        card1 = fits.Card('CONFIG', 'x' * length + \"''\")\n+        # Create a new card by parsing the string representation of the first card\n+        card2 = fits.Card.fromstring(str(card1))\n+        \n+        # The issue manifests as the double quotes being reduced to a single quote\n+        # So this assertion should pass when the issue exists\n+        assert card1.value != card2.value\n+        assert card2.value == 'x' * length + \"'\"\n+        \n+    # Test cases where double quotes are followed by more characters\n+    problematic_suffix_lengths = [55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69]\n+    \n+    for length in problematic_suffix_lengths:\n+        # Create a card with a string of x's, double quotes, and more x's\n+        card1 = fits.Card('CONFIG', 'x' * length + \"''\" + 'x' * 10)\n+        card2 = fits.Card.fromstring(str(card1))\n+        \n+        # Verify that the values don't match due to the quote handling issue\n+        assert card1.value != card2.value\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/astropy/io/fits/tests/test_fits_card_quotes_inverted.py b/astropy/io/fits/tests/test_fits_card_quotes_inverted.py\nnew file mode 100644\nindex 0000000..450e67f\n--- /dev/null\n+++ b/astropy/io/fits/tests/test_fits_card_quotes_inverted.py\n@@ -0,0 +1,35 @@\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+\n+import pytest\n+from astropy.io import fits\n+\n+\n+def test_double_single_quote_handling():\n+    \"\"\"\n+    Test that verifies the inconsistent handling of double single-quotes ('') \n+    in FITS card values at certain string lengths.\n+    \"\"\"\n+    # Test cases where double quotes are at the end of the string\n+    problematic_lengths = [65, 67, 68, 69]  # Lengths where the issue occurs\n+    \n+    for length in problematic_lengths:\n+        # Create a card with a string of x's followed by double single quotes\n+        card1 = fits.Card('CONFIG', 'x' * length + \"''\")\n+        # Create a new card by parsing the string representation of the first card\n+        card2 = fits.Card.fromstring(str(card1))\n+        \n+        # The test should fail when the values don't match\n+        if card1.value != card2.value:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        \n+    # Test cases where double quotes are followed by more characters\n+    problematic_suffix_lengths = [55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69]\n+    \n+    for length in problematic_suffix_lengths:\n+        # Create a card with a string of x's, double quotes, and more x's\n+        card1 = fits.Card('CONFIG', 'x' * length + \"''\" + 'x' * 10)\n+        card2 = fits.Card.fromstring(str(card1))\n+        \n+        # The test should fail when the values don't match\n+        if card1.value != card2.value:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}