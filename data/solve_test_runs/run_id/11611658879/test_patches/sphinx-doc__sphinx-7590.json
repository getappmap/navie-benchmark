{
  "edit_test_file": "tests/test_domain_cpp.py",
  "test_patch": "diff --git a/tests/test_cpp_user_defined_literals.py b/tests/test_cpp_user_defined_literals.py\nnew file mode 100644\nindex 0000000..00688bb\n--- /dev/null\n+++ b/tests/test_cpp_user_defined_literals.py\n@@ -0,0 +1,21 @@\n+import pytest\n+from sphinx.domains.cpp import DefinitionParser, DefinitionError\n+\n+def test_user_defined_literals():\n+    # Test that user-defined literals are not supported\n+    text = 'constexpr auto planck_constant = 6.62607015e-34q_J * 1q_s'\n+    \n+    class Config:\n+        cpp_id_attributes = [\"id_attr\"]\n+        cpp_paren_attributes = [\"paren_attr\"]\n+    \n+    parser = DefinitionParser(text, location=None, config=Config())\n+    \n+    # The parser should fail when encountering user-defined literals\n+    with pytest.raises(DefinitionError) as excinfo:\n+        parser.parse_declaration(\"member\", \"member\")\n+        parser.assert_end()\n+    \n+    # Verify the error message indicates it failed at the user-defined literal\n+    assert \"Expected end of definition.\" in str(excinfo.value)\n+    assert \"6.62607015e-34q_J * 1q_s\" in str(excinfo.value)\n",
  "inverted_patch": "diff --git a/tests/test_cpp_user_defined_literals_inverted.py b/tests/test_cpp_user_defined_literals_inverted.py\nnew file mode 100644\nindex 0000000..7023811\n--- /dev/null\n+++ b/tests/test_cpp_user_defined_literals_inverted.py\n@@ -0,0 +1,22 @@\n+import pytest\n+from sphinx.domains.cpp import DefinitionParser, DefinitionError\n+\n+def test_user_defined_literals():\n+    \"\"\"Test that user-defined literals are properly supported.\"\"\"\n+    text = 'constexpr auto planck_constant = 6.62607015e-34q_J * 1q_s'\n+    \n+    class Config:\n+        cpp_id_attributes = [\"id_attr\"]\n+        cpp_paren_attributes = [\"paren_attr\"]\n+    \n+    parser = DefinitionParser(text, location=None, config=Config())\n+    \n+    try:\n+        parser.parse_declaration(\"member\", \"member\")\n+        parser.assert_end()\n+    except DefinitionError:\n+        # If we get here, user-defined literals are not supported\n+        raise AssertionError(\"__BUG__HERE__: User-defined literals are not supported\")\n+    \n+    # If we get here, the parser successfully handled user-defined literals\n+    # No exception means test passed\n"
}