{
  "edit_test_file": "sklearn/impute/tests/test_impute.py",
  "test_patch": "diff --git a/sklearn/impute/tests/test_iterative_imputer_fill_value.py b/sklearn/impute/tests/test_iterative_imputer_fill_value.py\nnew file mode 100644\nindex 0000000..abdb101\n--- /dev/null\n+++ b/sklearn/impute/tests/test_iterative_imputer_fill_value.py\n@@ -0,0 +1,14 @@\n+# sklearn/impute/tests/test_iterative_imputer_fill_value.py\n+\n+import pytest\n+import numpy as np\n+from sklearn.experimental import enable_iterative_imputer  # noqa\n+from sklearn.impute import IterativeImputer\n+\n+def test_iterative_imputer_fill_value():\n+    # Test that IterativeImputer raises an error when trying to use a fill_value\n+    X = np.array([[np.nan, 1], [2, np.nan]])\n+\n+    with pytest.raises(TypeError, match=\"got an unexpected keyword argument 'fill_value'\"):\n+        imputer = IterativeImputer(initial_strategy=\"constant\", fill_value=0)\n+        imputer.fit_transform(X)\n",
  "inverted_patch": "diff --git a/sklearn/impute/tests/test_iterative_imputer_fill_value_inverted.py b/sklearn/impute/tests/test_iterative_imputer_fill_value_inverted.py\nnew file mode 100644\nindex 0000000..6a9f04f\n--- /dev/null\n+++ b/sklearn/impute/tests/test_iterative_imputer_fill_value_inverted.py\n@@ -0,0 +1,15 @@\n+# sklearn/impute/tests/test_iterative_imputer_fill_value.py\n+\n+import pytest\n+import numpy as np\n+from sklearn.experimental import enable_iterative_imputer  # noqa\n+from sklearn.impute import IterativeImputer\n+\n+def test_iterative_imputer_fill_value():\n+    # Test that IterativeImputer raises an error when trying to use a fill_value\n+    X = np.array([[np.nan, 1], [2, np.nan]])\n+\n+    # The test should now fail with the error message \"__BUG__HERE__\" when the issue is observed\n+    with pytest.raises(Exception, match=\"__BUG__HERE__\"):\n+        imputer = IterativeImputer(initial_strategy=\"constant\", fill_value=0)\n+        imputer.fit_transform(X)\n"
}