{
  "edit_test_file": "tests/backends/sqlite/tests.py",
  "test_patch": "diff --git a/tests/backends/sqlite/test_sql_keywords.py b/tests/backends/sqlite/test_sql_keywords.py\nnew file mode 100644\nindex 0000000..43bcf3f\n--- /dev/null\n+++ b/tests/backends/sqlite/test_sql_keywords.py\n@@ -0,0 +1,16 @@\n+import unittest\n+\n+from django.db import connection\n+from django.db.utils import OperationalError\n+from django.test import TestCase\n+\n+\n+@unittest.skipUnless(connection.vendor == 'sqlite', 'SQLite tests')\n+class SQLKeywordTableNameTests(TestCase):\n+    def test_check_constraints_with_sql_keyword_table(self):\n+        \"\"\"\n+        check_constraints() should properly quote table names that are SQL keywords\n+        to avoid syntax errors.\n+        \"\"\"\n+        with self.assertRaisesMessage(OperationalError, 'near \"order\": syntax error'):\n+            connection.check_constraints(['order'])\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/backends/sqlite/test_sql_keywords_inverted.py b/tests/backends/sqlite/test_sql_keywords_inverted.py\nnew file mode 100644\nindex 0000000..d37b383\n--- /dev/null\n+++ b/tests/backends/sqlite/test_sql_keywords_inverted.py\n@@ -0,0 +1,21 @@\n+import unittest\n+\n+from django.db import connection\n+from django.test import TestCase\n+from django.db.utils import OperationalError\n+\n+\n+@unittest.skipUnless(connection.vendor == 'sqlite', 'SQLite tests')\n+class SQLKeywordTableNameTests(TestCase):\n+    def test_check_constraints_with_sql_keyword_table(self):\n+        \"\"\"\n+        check_constraints() should properly quote SQL keyword table names to prevent syntax errors.\n+        This test verifies that using 'order' as a table name (SQL keyword) works correctly.\n+        The test should fail if the table name is not properly quoted.\n+        \"\"\"\n+        try:\n+            connection.check_constraints(['order'])\n+            raise AssertionError('__BUG__HERE__')\n+        except OperationalError as e:\n+            if 'near \"order\": syntax error' in str(e):\n+                raise AssertionError('__BUG__HERE__')\n\\ No newline at end of file\n"
}