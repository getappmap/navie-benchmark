{
  "edit_test_file": "sympy/geometry/tests/test_point.py",
  "test_patch": "diff --git a/sympy/geometry/tests/test_point_evaluate.py b/sympy/geometry/tests/test_point_evaluate.py\nnew file mode 100644\nindex 0000000..9283dac\n--- /dev/null\n+++ b/sympy/geometry/tests/test_point_evaluate.py\n@@ -0,0 +1,16 @@\n+from sympy.core.sympify import sympify\n+from sympy.testing.pytest import raises\n+from sympy.core.parameters import evaluate\n+\n+def test_point2d_evaluate_false():\n+    \"\"\"Test that Point2D with evaluate(False) raises ValueError about imaginary coordinates\"\"\"\n+    expr = 'Point2D(Integer(1),Integer(2))'\n+    \n+    # These should work normally\n+    sympify(expr)\n+    sympify(expr, evaluate=False)\n+    \n+    # This should raise ValueError\n+    with evaluate(False):\n+        with raises(ValueError):\n+            sympify(expr)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/geometry/tests/test_point_evaluate_inverted.py b/sympy/geometry/tests/test_point_evaluate_inverted.py\nnew file mode 100644\nindex 0000000..4fc985a\n--- /dev/null\n+++ b/sympy/geometry/tests/test_point_evaluate_inverted.py\n@@ -0,0 +1,20 @@\n+from sympy.core.sympify import sympify\n+from sympy.testing.pytest import raises\n+from sympy.core.parameters import evaluate\n+\n+def test_point2d_evaluate_false():\n+    \"\"\"Test that Point2D with evaluate(False) should not raise ValueError about imaginary coordinates\"\"\"\n+    expr = 'Point2D(Integer(1),Integer(2))'\n+    \n+    # These should work normally\n+    sympify(expr)\n+    sympify(expr, evaluate=False)\n+    \n+    # This should NOT raise ValueError - if it does, it's a bug\n+    with evaluate(False):\n+        try:\n+            sympify(expr)\n+        except ValueError as e:\n+            if str(e) == 'Imaginary coordinates are not permitted.':\n+                raise AssertionError(\"__BUG__HERE__\") from e\n+            raise  # Re-raise if it's a different ValueError\n\\ No newline at end of file\n"
}