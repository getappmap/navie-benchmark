{
  "edit_test_file": "sklearn/ensemble/tests/test_bagging.py",
  "test_patch": "diff --git a/sklearn/ensemble/tests/test_isolation_forest_warm_start.py b/sklearn/ensemble/tests/test_isolation_forest_warm_start.py\nnew file mode 100644\nindex 0000000..a1c45bb\n--- /dev/null\n+++ b/sklearn/ensemble/tests/test_isolation_forest_warm_start.py\n@@ -0,0 +1,16 @@\n+import numpy as np\n+from sklearn.ensemble import IsolationForest\n+from sklearn.datasets import make_blobs\n+from sklearn.utils.testing import assert_raises\n+\n+def test_isolation_forest_warm_start():\n+    # Generate synthetic data\n+    X, _ = make_blobs(n_samples=100, centers=1, cluster_std=0.1, random_state=42)\n+\n+    # Initialize IsolationForest without warm_start exposed\n+    iso_forest = IsolationForest(n_estimators=5, random_state=42)\n+    iso_forest.fit(X)\n+\n+    # Attempt to manually set warm_start to True and increment n_estimators\n+    # This should raise a ValueError since warm_start is not exposed\n+    assert_raises(ValueError, iso_forest.set_params, warm_start=True)\n",
  "inverted_patch": "diff --git a/sklearn/ensemble/tests/test_isolation_forest_warm_start_inverted.py b/sklearn/ensemble/tests/test_isolation_forest_warm_start_inverted.py\nnew file mode 100644\nindex 0000000..2e9fb62\n--- /dev/null\n+++ b/sklearn/ensemble/tests/test_isolation_forest_warm_start_inverted.py\n@@ -0,0 +1,19 @@\n+import numpy as np\n+from sklearn.ensemble import IsolationForest\n+from sklearn.datasets import make_blobs\n+import pytest\n+\n+def test_isolation_forest_warm_start():\n+    # Generate synthetic data\n+    X, _ = make_blobs(n_samples=100, centers=1, cluster_std=0.1, random_state=42)\n+\n+    # Initialize IsolationForest without warm_start exposed\n+    iso_forest = IsolationForest(n_estimators=5, random_state=42)\n+    iso_forest.fit(X)\n+\n+    # Attempt to manually set warm_start to True and increment n_estimators\n+    # This should raise a ValueError since warm_start is not exposed\n+    with pytest.raises(ValueError, match=\"__BUG__HERE__\"):\n+        iso_forest.set_params(warm_start=True)\n+        iso_forest.set_params(n_estimators=10)\n+        iso_forest.fit(X)\n"
}