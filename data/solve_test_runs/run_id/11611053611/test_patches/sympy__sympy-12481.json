{
  "edit_test_file": "sympy/combinatorics/tests/test_permutations.py",
  "test_patch": "diff --git a/sympy/combinatorics/tests/test_cycles.py b/sympy/combinatorics/tests/test_cycles.py\nnew file mode 100644\nindex 0000000..752bb54\n--- /dev/null\n+++ b/sympy/combinatorics/tests/test_cycles.py\n@@ -0,0 +1,6 @@\n+from sympy.combinatorics.permutations import Permutation\n+from sympy.utilities.pytest import raises\n+\n+def test_non_disjoint_cycles():\n+    # Test for non-disjoint cycles in Permutation constructor\n+    raises(ValueError, lambda: Permutation([[0, 1], [0, 1]]))\n",
  "inverted_patch": "diff --git a/sympy/combinatorics/tests/test_cycles_inverted.py b/sympy/combinatorics/tests/test_cycles_inverted.py\nnew file mode 100644\nindex 0000000..3dc51dd\n--- /dev/null\n+++ b/sympy/combinatorics/tests/test_cycles_inverted.py\n@@ -0,0 +1,8 @@\n+from sympy.combinatorics.permutations import Permutation\n+\n+def test_non_disjoint_cycles():\n+    # Test for non-disjoint cycles in Permutation constructor\n+    try:\n+        Permutation([[0, 1], [0, 1]])\n+    except ValueError:\n+        raise AssertionError(\"__BUG__HERE__\")\n"
}