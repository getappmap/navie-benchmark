{
  "edit_test_file": "tests/staticfiles_tests/test_storage.py",
  "test_patch": "diff --git a/tests/staticfiles_tests/test_manifest_storage_passes.py b/tests/staticfiles_tests/test_manifest_storage_passes.py\nnew file mode 100644\nindex 0000000..fb24ebe\n--- /dev/null\n+++ b/tests/staticfiles_tests/test_manifest_storage_passes.py\n@@ -0,0 +1,29 @@\n+import os\n+from io import StringIO\n+\n+from django.contrib.staticfiles.management.commands.collectstatic import Command as CollectstaticCommand\n+from django.contrib.staticfiles.storage import ManifestStaticFilesStorage\n+from django.core.management import call_command\n+from django.test import SimpleTestCase, override_settings\n+\n+\n+class ZeroPassesStorage(ManifestStaticFilesStorage):\n+    \"\"\"Storage class that sets max_post_process_passes to 0.\"\"\"\n+    max_post_process_passes = 0\n+\n+\n+@override_settings(STATICFILES_STORAGE='staticfiles_tests.test_manifest_storage_passes.ZeroPassesStorage')\n+class TestManifestStorageZeroPasses(SimpleTestCase):\n+    \"\"\"Test ManifestStaticFilesStorage with max_post_process_passes = 0.\"\"\"\n+\n+    def test_zero_passes_raises_error(self):\n+        \"\"\"\n+        Test that setting max_post_process_passes to 0 raises UnboundLocalError\n+        when running collectstatic.\n+        \"\"\"\n+        err = StringIO()\n+        with self.assertRaisesMessage(\n+            UnboundLocalError,\n+            \"local variable 'substitutions' referenced before assignment\"\n+        ):\n+            call_command('collectstatic', interactive=False, verbosity=0, stderr=err)\n\\ No newline at end of file\n",
  "inverted_patch": null
}