{
  "edit_test_file": "tests/auth_tests/test_forms.py",
  "test_patch": "diff --git a/tests/auth_tests/test_user_admin_access.py b/tests/auth_tests/test_user_admin_access.py\nnew file mode 100644\nindex 0000000..14ea2bc\n--- /dev/null\n+++ b/tests/auth_tests/test_user_admin_access.py\n@@ -0,0 +1,22 @@\n+import re\n+from django.test import TestCase\n+from django.contrib.auth.models import User\n+from django.contrib.auth.forms import UserChangeForm\n+from django.utils.translation import gettext as _\n+\n+class UserAdminTest(TestCase):\n+    def setUp(self):\n+        self.user = User.objects.create_user(username='testuser', password='password')\n+\n+    def test_password_reset_link_broken(self):\n+        form = UserChangeForm(instance=self.user)\n+        password_field = form.fields['password']\n+        help_text = password_field.help_text\n+\n+        # The expected incorrect link due to the issue\n+        expected_link = \"../password/\"\n+        self.assertIn(expected_link, help_text)\n+\n+        # The expected correct link if the issue were fixed\n+        incorrect_link = f\"../../{self.user.pk}/password/\"\n+        self.assertNotIn(incorrect_link, help_text)\n",
  "inverted_patch": "diff --git a/tests/auth_tests/test_user_admin_access_inverted.py b/tests/auth_tests/test_user_admin_access_inverted.py\nnew file mode 100644\nindex 0000000..c6f879e\n--- /dev/null\n+++ b/tests/auth_tests/test_user_admin_access_inverted.py\n@@ -0,0 +1,22 @@\n+import re\n+from django.test import TestCase\n+from django.contrib.auth.models import User\n+from django.contrib.auth.forms import UserChangeForm\n+from django.utils.translation import gettext as _\n+\n+class UserAdminTest(TestCase):\n+    def setUp(self):\n+        self.user = User.objects.create_user(username='testuser', password='password')\n+\n+    def test_password_reset_link_broken(self):\n+        form = UserChangeForm(instance=self.user)\n+        password_field = form.fields['password']\n+        help_text = password_field.help_text\n+\n+        # The expected incorrect link due to the issue\n+        expected_link = \"../password/\"\n+        self.assertNotIn(expected_link, help_text, \"__BUG__HERE__\")\n+\n+        # The expected correct link if the issue were fixed\n+        incorrect_link = f\"../../{self.user.pk}/password/\"\n+        self.assertIn(incorrect_link, help_text, \"__BUG__HERE__\")\n"
}