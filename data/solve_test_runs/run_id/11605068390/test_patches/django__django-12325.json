{
  "edit_test_file": "tests/model_inheritance/tests.py",
  "test_patch": "diff --git a/tests/model_inheritance/test_mti_one_to_one_ordering_issue.py b/tests/model_inheritance/test_mti_one_to_one_ordering_issue.py\nnew file mode 100644\nindex 0000000..7e9f15f\n--- /dev/null\n+++ b/tests/model_inheritance/test_mti_one_to_one_ordering_issue.py\n@@ -0,0 +1,13 @@\n+from django.core.exceptions import ImproperlyConfigured\n+from django.db import models\n+from django.test import SimpleTestCase\n+\n+class OneToOneOrderIssueTests(SimpleTestCase):\n+    def test_onetoone_order_issue(self):\n+        class Document(models.Model):\n+            pass\n+\n+        with self.assertRaisesMessage(ImproperlyConfigured, \"Add parent_link=True to model_inheritance.Picking.origin.\"):\n+            class Picking(Document):\n+                document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n+                origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n",
  "inverted_patch": "diff --git a/tests/model_inheritance/test_mti_one_to_one_ordering_issue_inverted.py b/tests/model_inheritance/test_mti_one_to_one_ordering_issue_inverted.py\nnew file mode 100644\nindex 0000000..4a7b02b\n--- /dev/null\n+++ b/tests/model_inheritance/test_mti_one_to_one_ordering_issue_inverted.py\n@@ -0,0 +1,14 @@\n+from django.core.exceptions import ImproperlyConfigured\n+from django.db import models\n+from django.test import SimpleTestCase\n+\n+class OneToOneOrderIssueTests(SimpleTestCase):\n+    def test_onetoone_order_issue(self):\n+        class Document(models.Model):\n+            pass\n+\n+        # Alter the test to expect the bug and raise the specific error message\n+        with self.assertRaisesMessage(ImproperlyConfigured, \"__BUG__HERE__\"):\n+            class Picking(Document):\n+                document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n+                origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n"
}