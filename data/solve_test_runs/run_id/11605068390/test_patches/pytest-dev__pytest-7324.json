{
  "edit_test_file": "testing/code/test_source.py",
  "test_patch": "diff --git a/testing/code/test_expression_compile_literals.py b/testing/code/test_expression_compile_literals.py\nnew file mode 100644\nindex 0000000..9f27a17\n--- /dev/null\n+++ b/testing/code/test_expression_compile_literals.py\n@@ -0,0 +1,20 @@\n+import pytest\n+import sys\n+from _pytest.mark.expression import Expression\n+\n+def test_compile_literal_false_crashes_interpreter():\n+    \"\"\"Test that compiling \"False\" literal crashes the interpreter on debug builds of Python 3.8+\"\"\"\n+    # Only run this test on Python 3.8+ debug builds\n+    if not hasattr(sys, 'gettotalrefcount'):  # gettotalrefcount only available in debug builds\n+        pytest.skip(\"This test only runs on debug builds\")\n+    if sys.version_info < (3, 8):\n+        pytest.skip(\"This test only runs on Python 3.8+\")\n+\n+    # The test passes if this crashes the interpreter with an assertion error\n+    # in compiler_nameop containing the message about None/True/False literals\n+    with pytest.raises(SystemError) as excinfo:\n+        Expression.compile(\"False\")\n+        \n+    # If we get here on a debug build (which we shouldn't), fail the test\n+    if hasattr(sys, 'gettotalrefcount'):\n+        pytest.fail(\"Expected interpreter to crash but it didn't\")\n\\ No newline at end of file\n",
  "inverted_patch": null
}