{
  "edit_test_file": "tests/apps/tests.py",
  "test_patch": "diff --git a/tests/apps/test_auto_field_subclass_validation.py b/tests/apps/test_auto_field_subclass_validation.py\nnew file mode 100644\nindex 0000000..312700c\n--- /dev/null\n+++ b/tests/apps/test_auto_field_subclass_validation.py\n@@ -0,0 +1,27 @@\n+from django.db import models\n+from django.test import SimpleTestCase, override_settings\n+from django.test.utils import isolate_apps\n+\n+\n+class MyBigAutoField(models.BigAutoField):\n+    \"\"\"A custom BigAutoField subclass for testing.\"\"\"\n+    pass\n+\n+\n+@isolate_apps('apps')\n+class AutoFieldSubclassValidationTests(SimpleTestCase):\n+    \"\"\"Tests for validation of AutoField subclasses used as DEFAULT_AUTO_FIELD.\"\"\"\n+\n+    @override_settings(DEFAULT_AUTO_FIELD='apps.test_auto_field_subclass_validation.MyBigAutoField')\n+    def test_bigautofield_subclass_validation(self):\n+        \"\"\"\n+        Using a BigAutoField subclass as DEFAULT_AUTO_FIELD should be allowed,\n+        but currently raises ValueError due to incorrect subclass checking.\n+        \"\"\"\n+        msg = (\n+            \"Primary key 'apps.test_auto_field_subclass_validation.MyBigAutoField' \"\n+            \"referred by DEFAULT_AUTO_FIELD must subclass AutoField.\"\n+        )\n+        with self.assertRaisesMessage(ValueError, msg):\n+            class ModelWithCustomAutoField(models.Model):\n+                pass\n\\ No newline at end of file\n",
  "inverted_patch": null
}