{
  "edit_test_file": "astropy/io/ascii/tests/test_cds.py",
  "test_patch": "diff --git a/astropy/io/ascii/tests/test_cds_composite_units.py b/astropy/io/ascii/tests/test_cds_composite_units.py\nnew file mode 100644\nindex 0000000..ecb5e87\n--- /dev/null\n+++ b/astropy/io/ascii/tests/test_cds_composite_units.py\n@@ -0,0 +1,44 @@\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+\n+\"\"\"\n+Test parsing of composite units in CDS/MRT format files.\n+\"\"\"\n+\n+from io import StringIO\n+\n+from astropy.io import ascii\n+from astropy import units as u\n+\n+\n+def test_composite_units_parsing():\n+    \"\"\"Test that composite units in CDS/MRT format are parsed incorrectly as described.\n+\n+    This test verifies the current incorrect behavior where:\n+    - For SBCONT: '10+3J/m/s/kpc2' becomes '1e+3 J s / (kpc2 m)'\n+    - For SBLINE: '10-7J/s/kpc2' becomes '1e-7 J kpc2 / s'\n+    \"\"\"\n+    table_text = \"\"\"Title:\n+Authors:\n+Table:\n+================================================================================\n+Byte-by-byte Description of file: tab.txt\n+--------------------------------------------------------------------------------\n+   Bytes Format Units          Label      Explanations\n+--------------------------------------------------------------------------------\n+   1- 10 A10    ---           ID         ID\n+  12- 21 F10.5  10+3J/m/s/kpc2 SBCONT    Cont surface brightness\n+  23- 32 F10.5  10-7J/s/kpc2  SBLINE     Line surface brightness\n+--------------------------------------------------------------------------------\n+ID0001     70.99200   38.51040\n+ID0001     13.05120   28.19240\n+\"\"\"\n+\n+    # Read the table\n+    table = ascii.read(table_text, format='cds')\n+\n+    # Verify the incorrect unit parsing\n+    expected_sbcont_unit = u.Unit('1e3 J s / (kpc2 m)')  # Incorrect order\n+    expected_sbline_unit = u.Unit('1e-7 J kpc2 / s')     # Incorrect order\n+\n+    assert table['SBCONT'].unit == expected_sbcont_unit\n+    assert table['SBLINE'].unit == expected_sbline_unit\n",
  "inverted_patch": "diff --git a/astropy/io/ascii/tests/test_cds_composite_units_inverted.py b/astropy/io/ascii/tests/test_cds_composite_units_inverted.py\nnew file mode 100644\nindex 0000000..5e0de68\n--- /dev/null\n+++ b/astropy/io/ascii/tests/test_cds_composite_units_inverted.py\n@@ -0,0 +1,45 @@\n+from io import StringIO\n+from astropy.io import ascii\n+from astropy import units as u\n+\n+def test_composite_units_parsing():\n+    \"\"\"Test that composite units in CDS/MRT format are parsed correctly.\n+    \n+    This test will FAIL when units are parsed incorrectly, specifically:\n+    - For SBCONT: '10+3J/m/s/kpc2' should NOT become '1e+3 J s / (kpc2 m)'\n+    - For SBLINE: '10-7J/s/kpc2' should NOT become '1e-7 J kpc2 / s'\n+    \"\"\"\n+    table_text = \"\"\"Title:\n+Authors:\n+Table:\n+================================================================================\n+Byte-by-byte Description of file: tab.txt\n+--------------------------------------------------------------------------------\n+   Bytes Format Units          Label      Explanations\n+--------------------------------------------------------------------------------\n+   1- 10 A10    ---           ID         ID\n+  12- 21 F10.5  10+3J/m/s/kpc2 SBCONT    Cont surface brightness\n+  23- 32 F10.5  10-7J/s/kpc2  SBLINE     Line surface brightness\n+--------------------------------------------------------------------------------\n+ID0001     70.99200   38.51040\n+ID0001     13.05120   28.19240\n+\"\"\"\n+\n+    # Read the table\n+    table = ascii.read(table_text, format='cds')\n+\n+    # Expected correct units according to CDS standard\n+    expected_sbcont_unit = u.Unit('1e3 J / (m s kpc2)')  # Correct order\n+    expected_sbline_unit = u.Unit('1e-7 J / (s kpc2)')   # Correct order\n+\n+    # Check SBCONT unit\n+    if table['SBCONT'].unit == u.Unit('1e3 J s / (kpc2 m)'):\n+        raise AssertionError(\"__BUG__HERE__: SBCONT unit incorrectly parsed as '1e3 J s / (kpc2 m)'\")\n+    \n+    # Check SBLINE unit\n+    if table['SBLINE'].unit == u.Unit('1e-7 J kpc2 / s'):\n+        raise AssertionError(\"__BUG__HERE__: SBLINE unit incorrectly parsed as '1e-7 J kpc2 / s'\")\n+\n+    # These assertions should pass when the bug is fixed\n+    assert table['SBCONT'].unit == expected_sbcont_unit\n+    assert table['SBLINE'].unit == expected_sbline_unit\n\\ No newline at end of file\n"
}