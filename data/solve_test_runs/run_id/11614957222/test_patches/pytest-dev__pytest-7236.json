{
  "edit_test_file": "testing/test_nose.py",
  "test_patch": "diff --git a/testing/test_skip_teardown_pdb.py b/testing/test_skip_teardown_pdb.py\nnew file mode 100644\nindex 0000000..0cf7ec5\n--- /dev/null\n+++ b/testing/test_skip_teardown_pdb.py\n@@ -0,0 +1,33 @@\n+import pytest\n+\n+def test_skip_with_pdb_executes_teardown(testdir):\n+    \"\"\"Verify that tearDown is incorrectly executed on skipped tests when using --pdb.\"\"\"\n+    testdir.makepyfile(\n+        \"\"\"\n+        import unittest\n+\n+        class MyTestCase(unittest.TestCase):\n+            def setUp(self):\n+                xxx\n+                \n+            @unittest.skip(\"hello\")\n+            def test_one(self):\n+                pass\n+                \n+            def tearDown(self):\n+                xxx\n+        \"\"\"\n+    )\n+    \n+    # Without --pdb, test should be skipped cleanly\n+    result = testdir.runpytest()\n+    result.stdout.fnmatch_lines([\"*1 skipped*\"])\n+    assert result.ret == 0\n+    \n+    # With --pdb, tearDown is incorrectly executed\n+    result = testdir.runpytest(\"--pdb\")\n+    result.stdout.fnmatch_lines([\n+        \"*NameError: name 'xxx' is not defined*\",  # Error from tearDown execution\n+        \"*1 skipped, 1 error*\"  # Both skipped and error status\n+    ])\n+    assert result.ret != 0  # Test run should fail due to tearDown error\n",
  "inverted_patch": "diff --git a/testing/test_skip_teardown_pdb_inverted.py b/testing/test_skip_teardown_pdb_inverted.py\nnew file mode 100644\nindex 0000000..6630dde\n--- /dev/null\n+++ b/testing/test_skip_teardown_pdb_inverted.py\n@@ -0,0 +1,33 @@\n+import pytest\n+\n+def test_skip_with_pdb_executes_teardown(testdir):\n+    \"\"\"Verify that tearDown should not be executed on skipped tests when using --pdb.\"\"\"\n+    testdir.makepyfile(\n+        \"\"\"\n+        import unittest\n+\n+        class MyTestCase(unittest.TestCase):\n+            def setUp(self):\n+                self.setup_called = False\n+                \n+            @unittest.skip(\"hello\")\n+            def test_one(self):\n+                pass\n+                \n+            def tearDown(self):\n+                # This should never be called for skipped tests\n+                raise AssertionError(\"__BUG__HERE__\")\n+        \"\"\"\n+    )\n+    \n+    # Without --pdb, test should be skipped cleanly\n+    result = testdir.runpytest()\n+    result.stdout.fnmatch_lines([\"*1 skipped*\"])\n+    assert result.ret == 0\n+    \n+    # With --pdb, tearDown should still not be executed\n+    # If it is executed (which is the bug), the test will fail with __BUG__HERE__\n+    result = testdir.runpytest(\"--pdb\")\n+    result.stdout.no_fnmatch_line(\"*__BUG__HERE__*\")\n+    result.stdout.fnmatch_lines([\"*1 skipped*\"])\n+    assert result.ret == 0\n"
}