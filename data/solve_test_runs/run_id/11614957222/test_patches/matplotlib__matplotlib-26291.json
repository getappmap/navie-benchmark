{
  "edit_test_file": "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py",
  "test_patch": "diff --git a/lib/mpl_toolkits/axes_grid1/tests/test_inset_axes_renderer.py b/lib/mpl_toolkits/axes_grid1/tests/test_inset_axes_renderer.py\nnew file mode 100644\nindex 0000000..7bc15d3\n--- /dev/null\n+++ b/lib/mpl_toolkits/axes_grid1/tests/test_inset_axes_renderer.py\n@@ -0,0 +1,20 @@\n+import matplotlib.pyplot as plt\n+import pytest\n+from mpl_toolkits.axes_grid1.inset_locator import inset_axes\n+\n+def test_inset_axes_missing_renderer():\n+    \"\"\"\n+    Test that creating an inset axes without a renderer raises an AttributeError.\n+    This reproduces the issue where inset_axes() fails when no renderer is available.\n+    \"\"\"\n+    # Create figure without drawing it, so no renderer is created\n+    fig, (ax, ax2) = plt.subplots(1, 2, figsize=[5.5, 2.8])\n+    \n+    # Create inset axes and try to get its window extent, which requires a renderer\n+    axins = inset_axes(ax, width=1.3, height=0.9)\n+    \n+    # Force the inset axes to try to get its window extent by accessing bbox_inches\n+    with pytest.raises(AttributeError, match=\"'NoneType' object has no attribute '_get_renderer'\"):\n+        fig.savefig('test.png', bbox_inches='tight')\n+    \n+    plt.close(fig)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/mpl_toolkits/axes_grid1/tests/test_inset_axes_renderer_inverted.py b/lib/mpl_toolkits/axes_grid1/tests/test_inset_axes_renderer_inverted.py\nnew file mode 100644\nindex 0000000..10f6be2\n--- /dev/null\n+++ b/lib/mpl_toolkits/axes_grid1/tests/test_inset_axes_renderer_inverted.py\n@@ -0,0 +1,29 @@\n+import matplotlib.pyplot as plt\n+from mpl_toolkits.axes_grid1.inset_locator import inset_axes\n+\n+def test_inset_axes_missing_renderer():\n+    \"\"\"\n+    Test that creating an inset axes without a renderer should fail.\n+    This test verifies that the bug where inset_axes() fails when no renderer\n+    is available is properly detected and reported.\n+    \"\"\"\n+    # Create figure without drawing it, so no renderer is created\n+    fig, (ax, ax2) = plt.subplots(1, 2, figsize=[5.5, 2.8])\n+    \n+    # Create inset axes\n+    axins = inset_axes(ax, width=1.3, height=0.9)\n+    \n+    try:\n+        # Force the inset axes to try to get its window extent by accessing bbox_inches\n+        fig.savefig('test.png', bbox_inches='tight')\n+        # If we get here, the bug is not present (unexpected)\n+        plt.close(fig)\n+        raise AssertionError(\"Expected AttributeError was not raised\")\n+    except AttributeError as e:\n+        if \"'NoneType' object has no attribute '_get_renderer'\" in str(e):\n+            # The bug is present\n+            plt.close(fig)\n+            raise RuntimeError(\"__BUG__HERE__\") from e\n+        # If we get a different AttributeError, re-raise it\n+        plt.close(fig)\n+        raise\n\\ No newline at end of file\n"
}