{
  "edit_test_file": "tests/migrations/test_multidb.py",
  "test_patch": "diff --git a/tests/migrations/test_migrations_check_consistency.py b/tests/migrations/test_migrations_check_consistency.py\nnew file mode 100644\nindex 0000000..d92bfb0\n--- /dev/null\n+++ b/tests/migrations/test_migrations_check_consistency.py\n@@ -0,0 +1,22 @@\n+import os\n+import subprocess\n+from django.test import SimpleTestCase\n+\n+class TestMakemigrationsCheckConsistency(SimpleTestCase):\n+    def test_makemigrations_check_inconsistency(self):\n+        \"\"\"\n+        Test that `makemigrations --check` generates migrations, which is inconsistent\n+        with other uses of --check.\n+        \"\"\"\n+        # Run the makemigrations command with --check\n+        result = subprocess.run(\n+            [\"python\", \"manage.py\", \"makemigrations\", \"--check\"],\n+            capture_output=True,\n+            text=True\n+        )\n+\n+        # Check if migrations were generated\n+        migrations_generated = \"No changes detected\" not in result.stdout\n+\n+        # Assert that migrations were generated, which is the issue\n+        self.assertTrue(migrations_generated, \"makemigrations --check should not generate migrations\")\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/migrations/test_migrations_check_consistency_inverted.py b/tests/migrations/test_migrations_check_consistency_inverted.py\nnew file mode 100644\nindex 0000000..4da9e3c\n--- /dev/null\n+++ b/tests/migrations/test_migrations_check_consistency_inverted.py\n@@ -0,0 +1,22 @@\n+import os\n+import subprocess\n+from django.test import SimpleTestCase\n+\n+class TestMakemigrationsCheckConsistency(SimpleTestCase):\n+    def test_makemigrations_check_inconsistency(self):\n+        \"\"\"\n+        Test that `makemigrations --check` does not generate migrations, which is consistent\n+        with other uses of --check.\n+        \"\"\"\n+        # Run the makemigrations command with --check\n+        result = subprocess.run(\n+            [\"python\", \"manage.py\", \"makemigrations\", \"--check\"],\n+            capture_output=True,\n+            text=True\n+        )\n+\n+        # Check if migrations were generated\n+        migrations_generated = \"No changes detected\" not in result.stdout\n+\n+        # Assert that migrations were not generated, which is the expected behavior\n+        self.assertFalse(migrations_generated, \"__BUG__HERE__\")\n\\ No newline at end of file\n"
}