{
  "edit_test_file": "tests/admin_custom_urls/tests.py",
  "test_patch": "diff --git a/tests/admin_custom_urls/test_custom_admin_readonly_field_url.py b/tests/admin_custom_urls/test_custom_admin_readonly_field_url.py\nnew file mode 100644\nindex 0000000..3cb6488\n--- /dev/null\n+++ b/tests/admin_custom_urls/test_custom_admin_readonly_field_url.py\n@@ -0,0 +1,33 @@\n+from django.test import TestCase, override_settings\n+from django.urls import reverse\n+from django.contrib.auth.models import User\n+from django.contrib import admin\n+from django.http import HttpRequest\n+from admin_custom_urls.models import Action\n+from admin_custom_urls.models import site\n+\n+class CustomAdminReadonlyFieldURLTest(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')\n+        cls.action = Action.objects.create(name='test_action', description='Test action description')\n+\n+    def setUp(self):\n+        self.client.force_login(self.superuser)\n+\n+    @override_settings(ROOT_URLCONF='admin_custom_urls.urls')\n+    def test_readonly_field_url_in_custom_admin(self):\n+        \"\"\"\n+        Test that the URL for a readonly ForeignKey field in a custom Admin Site\n+        is incorrectly generated as /admin/... instead of /custom-admin/...\n+        \"\"\"\n+        request = HttpRequest()\n+        request.user = self.superuser\n+        request.current_app = site.name\n+\n+        # Simulate accessing the admin change view for the Action model\n+        url = reverse('admin_custom_urls:admin_custom_urls_action_change', args=[self.action.pk])\n+        response = self.client.get(url)\n+\n+        # Check if the URL for the readonly field is incorrect\n+        self.assertContains(response, '/admin/admin_custom_urls/action/')\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/admin_custom_urls/test_custom_admin_readonly_field_url_inverted.py b/tests/admin_custom_urls/test_custom_admin_readonly_field_url_inverted.py\nnew file mode 100644\nindex 0000000..1a38648\n--- /dev/null\n+++ b/tests/admin_custom_urls/test_custom_admin_readonly_field_url_inverted.py\n@@ -0,0 +1,34 @@\n+from django.test import TestCase, override_settings\n+from django.urls import reverse\n+from django.contrib.auth.models import User\n+from django.http import HttpRequest\n+from admin_custom_urls.models import Action\n+from admin_custom_urls.models import site\n+\n+class CustomAdminReadonlyFieldURLTest(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')\n+        cls.action = Action.objects.create(name='test_action', description='Test action description')\n+\n+    def setUp(self):\n+        self.client.force_login(self.superuser)\n+\n+    @override_settings(ROOT_URLCONF='admin_custom_urls.urls')\n+    def test_readonly_field_url_in_custom_admin(self):\n+        \"\"\"\n+        Test that the URL for a readonly ForeignKey field in a custom Admin Site\n+        is incorrectly generated as /admin/... instead of /custom-admin/...\n+        \"\"\"\n+        request = HttpRequest()\n+        request.user = self.superuser\n+        request.current_app = site.name\n+\n+        # Simulate accessing the admin change view for the Action model\n+        url = reverse('admin_custom_urls:admin_custom_urls_action_change', args=[self.action.pk])\n+        response = self.client.get(url)\n+\n+        # Check if the URL for the readonly field is incorrect\n+        # This assertion should now fail if the bug is present\n+        if '/admin/admin_custom_urls/action/' in response.content.decode():\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}