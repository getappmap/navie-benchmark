{
  "edit_test_file": "sklearn/cluster/tests/test_optics.py",
  "test_patch": "diff --git a/sklearn/cluster/tests/test_optics_min_samples_bug.py b/sklearn/cluster/tests/test_optics_min_samples_bug.py\nnew file mode 100644\nindex 0000000..744b3f0\n--- /dev/null\n+++ b/sklearn/cluster/tests/test_optics_min_samples_bug.py\n@@ -0,0 +1,14 @@\n+import numpy as np\n+from sklearn.cluster import OPTICS\n+from sklearn.datasets import make_blobs\n+from sklearn.utils.testing import assert_raises\n+\n+def test_optics_float_min_samples():\n+    # Generate some sample data\n+    X, _ = make_blobs(n_samples=100, centers=3, random_state=42)\n+\n+    # Instantiate OPTICS with min_samples as a float\n+    clust = OPTICS(metric='minkowski', n_jobs=-1, min_samples=0.1)\n+\n+    # Expect a TypeError due to float min_samples\n+    assert_raises(TypeError, clust.fit, X)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/cluster/tests/test_optics_min_samples_bug_inverted.py b/sklearn/cluster/tests/test_optics_min_samples_bug_inverted.py\nnew file mode 100644\nindex 0000000..5ae9400\n--- /dev/null\n+++ b/sklearn/cluster/tests/test_optics_min_samples_bug_inverted.py\n@@ -0,0 +1,20 @@\n+import numpy as np\n+from sklearn.cluster import OPTICS\n+from sklearn.datasets import make_blobs\n+\n+def test_optics_float_min_samples():\n+    # Generate some sample data\n+    X, _ = make_blobs(n_samples=100, centers=3, random_state=42)\n+\n+    # Instantiate OPTICS with min_samples as a float\n+    clust = OPTICS(metric='minkowski', n_jobs=-1, min_samples=0.1)\n+\n+    try:\n+        # Attempt to fit the model, expecting a TypeError due to float min_samples\n+        clust.fit(X)\n+    except TypeError:\n+        # If a TypeError is raised, the test should fail with the specific error message\n+        raise AssertionError(\"__BUG__HERE__\")\n+    else:\n+        # If no error is raised, the test should fail because the bug is not observed\n+        raise AssertionError(\"Expected TypeError was not raised\")\n\\ No newline at end of file\n"
}