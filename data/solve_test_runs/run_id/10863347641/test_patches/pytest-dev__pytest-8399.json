{
  "edit_test_file": "testing/test_setupplan.py",
  "test_patch": "diff --git a/testing/test_unittest_setupclass_fixtures.py b/testing/test_unittest_setupclass_fixtures.py\nnew file mode 100644\nindex 0000000..6dcab20\n--- /dev/null\n+++ b/testing/test_unittest_setupclass_fixtures.py\n@@ -0,0 +1,23 @@\n+import unittest\n+from _pytest.pytester import Pytester\n+\n+def test_unittest_setUpClass_fixture_visibility(pytester: Pytester) -> None:\n+    \"\"\"Reproduce issue where unittest setUpClass fixtures are not private.\"\"\"\n+    pytester.makepyfile(\n+        \"\"\"\n+        import unittest\n+\n+        class Tests(unittest.TestCase):\n+            @classmethod\n+            def setUpClass(cls):\n+                pass\n+\n+            def test_1(self):\n+                pass\n+        \"\"\"\n+    )\n+\n+    result = pytester.runpytest(\"--fixtures\")\n+    result.stdout.fnmatch_lines(\n+        [\"*unittest_setUpClass_fixture_Tests*\"]\n+    )\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/testing/test_unittest_setupclass_fixtures_inverted.py b/testing/test_unittest_setupclass_fixtures_inverted.py\nnew file mode 100644\nindex 0000000..21208ab\n--- /dev/null\n+++ b/testing/test_unittest_setupclass_fixtures_inverted.py\n@@ -0,0 +1,22 @@\n+import unittest\n+from _pytest.pytester import Pytester\n+\n+def test_unittest_setUpClass_fixture_visibility(pytester: Pytester) -> None:\n+    \"\"\"Reproduce issue where unittest setUpClass fixtures are not private.\"\"\"\n+    pytester.makepyfile(\n+        \"\"\"\n+        import unittest\n+\n+        class Tests(unittest.TestCase):\n+            @classmethod\n+            def setUpClass(cls):\n+                pass\n+\n+            def test_1(self):\n+                pass\n+        \"\"\"\n+    )\n+\n+    result = pytester.runpytest(\"--fixtures\")\n+    # Alter the test to fail when the issue is observed\n+    assert not any(\"unittest_setUpClass_fixture_Tests\" in line for line in result.stdout.lines), \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}