{
  "edit_test_file": "lib/matplotlib/tests/test_pickle.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_backend_management.py b/lib/matplotlib/tests/test_backend_management.py\nnew file mode 100644\nindex 0000000..0e41cd4\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_backend_management.py\n@@ -0,0 +1,13 @@\n+import matplotlib.pyplot as plt\n+from matplotlib import get_backend, rc_context\n+from unittest import TestCase\n+\n+class TestBackendManagement(TestCase):\n+    def test_backend_clears_figures(self):\n+        with rc_context():\n+            fig2 = plt.figure()\n+        before = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+        get_backend()\n+        after = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+\n+        self.assertEqual(before, after, f'\\n{before}\\n{after}')\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_backend_management_inverted.py b/lib/matplotlib/tests/test_backend_management_inverted.py\nnew file mode 100644\nindex 0000000..aa452eb\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_backend_management_inverted.py\n@@ -0,0 +1,14 @@\n+import matplotlib.pyplot as plt\n+from matplotlib import get_backend, rc_context\n+from unittest import TestCase\n+\n+class TestBackendManagement(TestCase):\n+    def test_backend_clears_figures(self):\n+        with rc_context():\n+            fig2 = plt.figure()\n+        before = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+        get_backend()\n+        after = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n+\n+        # Alter the test to fail when the issue is observed\n+        self.assertNotEqual(before, after, \"__BUG__HERE__\")\n\\ No newline at end of file\n"
}