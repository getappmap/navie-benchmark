{
  "edit_test_file": "sympy/printing/tests/test_repr.py",
  "test_patch": "diff --git a/sympy/printing/tests/test_function_symbols.py b/sympy/printing/tests/test_function_symbols.py\nnew file mode 100644\nindex 0000000..4da92c0\n--- /dev/null\n+++ b/sympy/printing/tests/test_function_symbols.py\n@@ -0,0 +1,6 @@\n+import sympy as smp\n+from sympy.testing.pytest import raises\n+\n+def test_symbols_with_extra_parentheses():\n+    q, u = smp.symbols(('q:2', 'u:2'), cls=smp.Function)\n+    assert isinstance(q[0], smp.Symbol), \"Expected q[0] to be of type Symbol, but got UndefinedFunction\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/printing/tests/test_function_symbols_inverted.py b/sympy/printing/tests/test_function_symbols_inverted.py\nnew file mode 100644\nindex 0000000..3eff74b\n--- /dev/null\n+++ b/sympy/printing/tests/test_function_symbols_inverted.py\n@@ -0,0 +1,6 @@\n+import sympy as smp\n+from sympy.testing.pytest import raises\n+\n+def test_symbols_with_extra_parentheses():\n+    q, u = smp.symbols(('q:2', 'u:2'), cls=smp.Function)\n+    assert not isinstance(q[0], smp.Symbol), \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}