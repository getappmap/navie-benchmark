{
  "edit_test_file": "sympy/algebras/tests/test_quaternion.py",
  "test_patch": "diff --git a/sympy/algebras/tests/test_quaternion_rotation_matrix_error.py b/sympy/algebras/tests/test_quaternion_rotation_matrix_error.py\nnew file mode 100644\nindex 0000000..1e6b776\n--- /dev/null\n+++ b/sympy/algebras/tests/test_quaternion_rotation_matrix_error.py\n@@ -0,0 +1,13 @@\n+from sympy.algebras.quaternion import Quaternion\n+from sympy import symbols, cos, sin, trigsimp, Matrix\n+\n+def test_quaternion_to_rotation_matrix_error():\n+    x = symbols('x')\n+    q = Quaternion(cos(x/2), sin(x/2), 0, 0)\n+    result = trigsimp(q.to_rotation_matrix())\n+    expected = Matrix([\n+        [1,      0,      0],\n+        [0, cos(x), sin(x)],\n+        [0, sin(x), cos(x)]\n+    ])\n+    assert result == expected, f\"Expected {expected}, but got {result}\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/algebras/tests/test_quaternion_rotation_matrix_error_inverted.py b/sympy/algebras/tests/test_quaternion_rotation_matrix_error_inverted.py\nnew file mode 100644\nindex 0000000..873f632\n--- /dev/null\n+++ b/sympy/algebras/tests/test_quaternion_rotation_matrix_error_inverted.py\n@@ -0,0 +1,13 @@\n+from sympy.algebras.quaternion import Quaternion\n+from sympy import symbols, cos, sin, trigsimp, Matrix\n+\n+def test_quaternion_to_rotation_matrix_error():\n+    x = symbols('x')\n+    q = Quaternion(cos(x/2), sin(x/2), 0, 0)\n+    result = trigsimp(q.to_rotation_matrix())\n+    expected = Matrix([\n+        [1,      0,      0],\n+        [0, cos(x), sin(x)],\n+        [0, -sin(x), cos(x)]  # Corrected expected matrix with negative sin(x)\n+    ])\n+    assert result == expected, f\"__BUG__HERE__: Expected {expected}, but got {result}\"\n\\ No newline at end of file\n"
}