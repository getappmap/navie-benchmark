{
  "edit_test_file": "sympy/polys/tests/test_monomials.py",
  "test_patch": "diff --git a/sympy/polys/tests/test_itermonomials.py b/sympy/polys/tests/test_itermonomials.py\nnew file mode 100644\nindex 0000000..55a58cd\n--- /dev/null\n+++ b/sympy/polys/tests/test_itermonomials.py\n@@ -0,0 +1,13 @@\n+import sympy as sp\n+from sympy.polys.orderings import monomial_key\n+from sympy.testing.pytest import raises\n+\n+def test_itermonomials_min_degrees_issue():\n+    x1, x2, x3 = sp.symbols('x1, x2, x3')\n+    states = [x1, x2, x3]\n+    max_degrees = 3\n+    min_degrees = 3\n+    monomials = sorted(sp.itermonomials(states, max_degrees, min_degrees=min_degrees), \n+                       key=monomial_key('grlex', states))\n+    # The test should pass if the incorrect output is produced\n+    assert monomials == [x3**3, x2**3, x1**3], \"The output is incorrect, missing monomials with total degree of 3\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/polys/tests/test_itermonomials_inverted.py b/sympy/polys/tests/test_itermonomials_inverted.py\nnew file mode 100644\nindex 0000000..60ecc58\n--- /dev/null\n+++ b/sympy/polys/tests/test_itermonomials_inverted.py\n@@ -0,0 +1,12 @@\n+import sympy as sp\n+from sympy.polys.orderings import monomial_key\n+\n+def test_itermonomials_min_degrees_issue():\n+    x1, x2, x3 = sp.symbols('x1, x2, x3')\n+    states = [x1, x2, x3]\n+    max_degrees = 3\n+    min_degrees = 3\n+    monomials = sorted(sp.itermonomials(states, max_degrees, min_degrees=min_degrees), \n+                       key=monomial_key('grlex', states))\n+    # The test should fail if the incorrect output is produced\n+    assert monomials != [x3**3, x2**3, x1**3], \"__BUG__HERE__\"\n\\ No newline at end of file\n"
}