{
  "edit_test_file": "sympy/physics/quantum/tests/test_matrixutils.py",
  "test_patch": "diff --git a/sympy/physics/quantum/tests/test_is_zero_complex.py b/sympy/physics/quantum/tests/test_is_zero_complex.py\nnew file mode 100644\nindex 0000000..ecf9ecc\n--- /dev/null\n+++ b/sympy/physics/quantum/tests/test_is_zero_complex.py\n@@ -0,0 +1,7 @@\n+from sympy import I, simplify\n+from sympy.core.add import Add\n+\n+def test_is_zero_complex():\n+    e = -2*I + (1 + I)**2\n+    assert e.is_zero is False, \"Expected is_zero to be False before simplification\"\n+    assert simplify(e).is_zero is True, \"Expected is_zero to be True after simplification\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/physics/quantum/tests/test_is_zero_complex_inverted.py b/sympy/physics/quantum/tests/test_is_zero_complex_inverted.py\nnew file mode 100644\nindex 0000000..16f08e3\n--- /dev/null\n+++ b/sympy/physics/quantum/tests/test_is_zero_complex_inverted.py\n@@ -0,0 +1,7 @@\n+from sympy import I, simplify\n+from sympy.core.add import Add\n+\n+def test_is_zero_complex():\n+    e = -2*I + (1 + I)**2\n+    assert e.is_zero is None, \"__BUG__HERE__\"\n+    assert simplify(e).is_zero is True, \"Expected is_zero to be True after simplification\"\n\\ No newline at end of file\n"
}