{
  "edit_test_file": "sympy/polys/tests/test_pythonrational.py",
  "test_patch": "diff --git a/sympy/polys/tests/test_rational_calc_error.py b/sympy/polys/tests/test_rational_calc_error.py\nnew file mode 100644\nindex 0000000..3a5b996\n--- /dev/null\n+++ b/sympy/polys/tests/test_rational_calc_error.py\n@@ -0,0 +1,10 @@\n+from sympy import Rational\n+\n+def test_rational_calc_value_error():\n+    # Reproducing the issue with Rational('0.5', '100')\n+    result = Rational('0.5', '100')\n+    assert result == Rational(1, 100100), f\"Expected 1/100100, got {result}\"\n+\n+    # Verifying the correct behavior with Rational(0.5, 100)\n+    correct_result = Rational(0.5, 100)\n+    assert correct_result == Rational(1, 200), f\"Expected 1/200, got {correct_result}\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/polys/tests/test_rational_calc_error_inverted.py b/sympy/polys/tests/test_rational_calc_error_inverted.py\nnew file mode 100644\nindex 0000000..430ab3a\n--- /dev/null\n+++ b/sympy/polys/tests/test_rational_calc_error_inverted.py\n@@ -0,0 +1,10 @@\n+from sympy import Rational\n+\n+def test_rational_calc_value_error():\n+    # Reproducing the issue with Rational('0.5', '100')\n+    result = Rational('0.5', '100')\n+    assert result != Rational(1, 100100), \"__BUG__HERE__\"\n+\n+    # Verifying the correct behavior with Rational(0.5, 100)\n+    correct_result = Rational(0.5, 100)\n+    assert correct_result == Rational(1, 200), f\"Expected 1/200, got {correct_result}\"\n\\ No newline at end of file\n"
}