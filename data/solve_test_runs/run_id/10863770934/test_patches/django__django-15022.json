{
  "edit_test_file": "tests/postgres_tests/test_search.py",
  "test_patch": "diff --git a/tests/postgres_tests/test_admin_changelist_query_optimization.py b/tests/postgres_tests/test_admin_changelist_query_optimization.py\nnew file mode 100644\nindex 0000000..0496e06\n--- /dev/null\n+++ b/tests/postgres_tests/test_admin_changelist_query_optimization.py\n@@ -0,0 +1,34 @@\n+from django.test import TestCase\n+from django.contrib.admin.sites import AdminSite\n+from django.contrib.admin.options import ModelAdmin\n+from django.db import models\n+from django.utils.translation import gettext_lazy as _\n+\n+class Client(models.Model):\n+    name = models.CharField(_('name'), max_length=256)\n+    name2 = models.CharField(_('unofficial or obsolete name'), max_length=256, blank=True, null=True)\n+    contact_person = models.CharField(_('contact person'), max_length=256, blank=True, null=True)\n+\n+class ClientOffice(models.Model):\n+    name = models.CharField(_('name'), max_length=256)\n+    name2 = models.CharField(_('unofficial or obsolete name'), max_length=256, blank=True, null=True)\n+    client = models.ForeignKey(Client, verbose_name=_('client'), on_delete=models.CASCADE)\n+\n+class ClientAdmin(ModelAdmin):\n+    search_fields = ('name', 'name2', 'contact_person', 'clientoffice__name', 'clientoffice__name2')\n+\n+class MockRequest:\n+    GET = {}\n+\n+class TestAdminChangelistQueryOptimization(TestCase):\n+    def setUp(self):\n+        self.site = AdminSite()\n+        self.client_admin = ClientAdmin(Client, self.site)\n+\n+    def test_unnecessary_joins_in_admin_changelist_query(self):\n+        request = MockRequest()\n+        request.GET['q'] = 'word1 word2 word3 word4'\n+        queryset = self.client_admin.get_search_results(request, Client.objects.all(), request.GET['q'])[0]\n+        sql_query = str(queryset.query)\n+        # Check if the number of joins is greater than expected\n+        self.assertGreater(sql_query.count('JOIN'), 3)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/postgres_tests/test_admin_changelist_query_optimization_inverted.py b/tests/postgres_tests/test_admin_changelist_query_optimization_inverted.py\nnew file mode 100644\nindex 0000000..cdbc255\n--- /dev/null\n+++ b/tests/postgres_tests/test_admin_changelist_query_optimization_inverted.py\n@@ -0,0 +1,35 @@\n+from django.test import TestCase\n+from django.contrib.admin.sites import AdminSite\n+from django.contrib.admin.options import ModelAdmin\n+from django.db import models\n+from django.utils.translation import gettext_lazy as _\n+\n+class Client(models.Model):\n+    name = models.CharField(_('name'), max_length=256)\n+    name2 = models.CharField(_('unofficial or obsolete name'), max_length=256, blank=True, null=True)\n+    contact_person = models.CharField(_('contact person'), max_length=256, blank=True, null=True)\n+\n+class ClientOffice(models.Model):\n+    name = models.CharField(_('name'), max_length=256)\n+    name2 = models.CharField(_('unofficial or obsolete name'), max_length=256, blank=True, null=True)\n+    client = models.ForeignKey(Client, verbose_name=_('client'), on_delete=models.CASCADE)\n+\n+class ClientAdmin(ModelAdmin):\n+    search_fields = ('name', 'name2', 'contact_person', 'clientoffice__name', 'clientoffice__name2')\n+\n+class MockRequest:\n+    GET = {}\n+\n+class TestAdminChangelistQueryOptimization(TestCase):\n+    def setUp(self):\n+        self.site = AdminSite()\n+        self.client_admin = ClientAdmin(Client, self.site)\n+\n+    def test_unnecessary_joins_in_admin_changelist_query(self):\n+        request = MockRequest()\n+        request.GET['q'] = 'word1 word2 word3 word4'\n+        queryset = self.client_admin.get_search_results(request, Client.objects.all(), request.GET['q'])[0]\n+        sql_query = str(queryset.query)\n+        # Check if the number of joins is greater than expected\n+        if sql_query.count('JOIN') > 3:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}