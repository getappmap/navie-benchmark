{
  "edit_test_file": "tests/forms_tests/field_tests/test_durationfield.py",
  "test_patch": "diff --git a/tests/forms_tests/field_tests/test_experiment_duration_expression.py b/tests/forms_tests/field_tests/test_experiment_duration_expression.py\nnew file mode 100644\nindex 0000000..0724bad\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_experiment_duration_expression.py\n@@ -0,0 +1,14 @@\n+import datetime\n+from django.db import models\n+from django.test import TestCase\n+from django.db.models import F\n+\n+class Experiment(models.Model):\n+    estimated_time = models.DurationField()\n+\n+class DurationExpressionTest(TestCase):\n+    def test_duration_expression_issue(self):\n+        Experiment.objects.create(estimated_time=datetime.timedelta(days=1))\n+        delta = datetime.timedelta(days=1)\n+        with self.assertRaises(TypeError):\n+            list(Experiment.objects.annotate(duration=F('estimated_time') + delta))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/forms_tests/field_tests/test_experiment_duration_expression_inverted.py b/tests/forms_tests/field_tests/test_experiment_duration_expression_inverted.py\nnew file mode 100644\nindex 0000000..31ac241\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_experiment_duration_expression_inverted.py\n@@ -0,0 +1,16 @@\n+import datetime\n+from django.db import models\n+from django.test import TestCase\n+from django.db.models import F\n+\n+class Experiment(models.Model):\n+    estimated_time = models.DurationField()\n+\n+class DurationExpressionTest(TestCase):\n+    def test_duration_expression_issue(self):\n+        Experiment.objects.create(estimated_time=datetime.timedelta(days=1))\n+        delta = datetime.timedelta(days=1)\n+        try:\n+            list(Experiment.objects.annotate(duration=F('estimated_time') + delta))\n+        except TypeError:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}