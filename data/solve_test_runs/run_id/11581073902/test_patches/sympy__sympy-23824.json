{
  "edit_test_file": "sympy/physics/hep/tests/test_gamma_matrices.py",
  "test_patch": "diff --git a/sympy/physics/hep/tests/test_kahane_leading_gamma_order.py b/sympy/physics/hep/tests/test_kahane_leading_gamma_order.py\nnew file mode 100644\nindex 0000000..476670e\n--- /dev/null\n+++ b/sympy/physics/hep/tests/test_kahane_leading_gamma_order.py\n@@ -0,0 +1,21 @@\n+from sympy.physics.hep.gamma_matrices import GammaMatrix as G, LorentzIndex\n+from sympy.physics.hep.gamma_matrices import kahane_simplify\n+from sympy.tensor.tensor import tensor_indices\n+\n+def test_kahane_leading_gamma_order():\n+    # Set up test indices\n+    mu, nu, rho, sigma = tensor_indices(\"mu, nu, rho, sigma\", LorentzIndex)\n+    \n+    # Test case where contracted matrices appear after uncontracted ones\n+    t = G(rho)*G(sigma)*G(mu)*G(-mu)\n+    r = kahane_simplify(t)\n+    \n+    # This assertion verifies the incorrect behavior where the order is reversed\n+    # The actual output is 4*G(sigma)*G(rho) when it should be 4*G(rho)*G(sigma)\n+    assert r.equals(4*G(sigma)*G(rho))\n+    \n+    # Test case where contracted matrices appear before uncontracted ones\n+    # This case works correctly and serves as a control\n+    t2 = G(mu)*G(-mu)*G(rho)*G(sigma)\n+    r2 = kahane_simplify(t2)\n+    assert r2.equals(4*G(rho)*G(sigma))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/physics/hep/tests/test_kahane_leading_gamma_order_inverted.py b/sympy/physics/hep/tests/test_kahane_leading_gamma_order_inverted.py\nnew file mode 100644\nindex 0000000..32d2599\n--- /dev/null\n+++ b/sympy/physics/hep/tests/test_kahane_leading_gamma_order_inverted.py\n@@ -0,0 +1,24 @@\n+from sympy.physics.hep.gamma_matrices import GammaMatrix as G, LorentzIndex\n+from sympy.physics.hep.gamma_matrices import kahane_simplify\n+from sympy.tensor.tensor import tensor_indices\n+\n+def test_kahane_leading_gamma_order():\n+    # Set up test indices\n+    mu, nu, rho, sigma = tensor_indices(\"mu, nu, rho, sigma\", LorentzIndex)\n+    \n+    # Test case where contracted matrices appear after uncontracted ones\n+    t = G(rho)*G(sigma)*G(mu)*G(-mu)\n+    r = kahane_simplify(t)\n+    \n+    # This should fail when the bug is present (incorrect order)\n+    if r.equals(4*G(sigma)*G(rho)):\n+        raise AssertionError(\"__BUG__HERE__\")\n+    \n+    # The correct result should be 4*G(rho)*G(sigma)\n+    assert r.equals(4*G(rho)*G(sigma))\n+    \n+    # Test case where contracted matrices appear before uncontracted ones\n+    # This case works correctly and serves as a control\n+    t2 = G(mu)*G(-mu)*G(rho)*G(sigma)\n+    r2 = kahane_simplify(t2)\n+    assert r2.equals(4*G(rho)*G(sigma))\n\\ No newline at end of file\n"
}