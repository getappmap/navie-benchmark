{
  "edit_test_file": "sklearn/linear_model/tests/test_huber.py",
  "test_patch": "diff --git a/sklearn/linear_model/tests/test_huber_bool_input.py b/sklearn/linear_model/tests/test_huber_bool_input.py\nnew file mode 100644\nindex 0000000..aee839d\n--- /dev/null\n+++ b/sklearn/linear_model/tests/test_huber_bool_input.py\n@@ -0,0 +1,32 @@\n+# Authors: Manoj Kumar mks542@nyu.edu\n+# License: BSD 3 clause\n+\n+import numpy as np\n+from sklearn.datasets import make_regression\n+from sklearn.linear_model import HuberRegressor\n+import pytest\n+\n+def test_huber_bool_input():\n+    \"\"\"Test that HuberRegressor raises TypeError with boolean input.\"\"\"\n+    # Generate random regression data\n+    X, y, coef = make_regression(\n+        n_samples=200, n_features=2, noise=4.0, \n+        coef=True, random_state=0\n+    )\n+    \n+    # Convert X to boolean\n+    X_bool = X > 0\n+    \n+    # Convert boolean to float for comparison\n+    X_bool_as_float = np.asarray(X_bool, dtype=float)\n+    \n+    # Should work with float data\n+    huber = HuberRegressor()\n+    huber.fit(X, y)\n+    \n+    # Should work with boolean data converted to float\n+    huber.fit(X_bool_as_float, y)\n+    \n+    # Should raise TypeError with boolean data\n+    with pytest.raises(TypeError, match=\"The numpy boolean negative, the `-` operator, is not supported\"):\n+        huber.fit(X_bool, y)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/linear_model/tests/test_huber_bool_input_inverted.py b/sklearn/linear_model/tests/test_huber_bool_input_inverted.py\nnew file mode 100644\nindex 0000000..4a98a5c\n--- /dev/null\n+++ b/sklearn/linear_model/tests/test_huber_bool_input_inverted.py\n@@ -0,0 +1,35 @@\n+# Authors: Manoj Kumar mks542@nyu.edu\n+# License: BSD 3 clause\n+\n+import numpy as np\n+from sklearn.datasets import make_regression\n+from sklearn.linear_model import HuberRegressor\n+\n+def test_huber_bool_input():\n+    \"\"\"Test that HuberRegressor accepts boolean input.\"\"\"\n+    # Generate random regression data\n+    X, y, coef = make_regression(\n+        n_samples=200, n_features=2, noise=4.0, \n+        coef=True, random_state=0\n+    )\n+    \n+    # Convert X to boolean\n+    X_bool = X > 0\n+    \n+    # Convert boolean to float for comparison\n+    X_bool_as_float = np.asarray(X_bool, dtype=float)\n+    \n+    # Should work with float data\n+    huber = HuberRegressor()\n+    huber.fit(X, y)\n+    \n+    # Should work with boolean data converted to float\n+    huber.fit(X_bool_as_float, y)\n+    \n+    # Should work with boolean data\n+    try:\n+        huber.fit(X_bool, y)\n+    except TypeError as e:\n+        if \"The numpy boolean negative, the `-` operator, is not supported\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\")\n+        raise e\n\\ No newline at end of file\n"
}