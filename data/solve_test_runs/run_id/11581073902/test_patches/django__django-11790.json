{
  "edit_test_file": "tests/auth_tests/test_forms.py",
  "test_patch": "diff --git a/tests/auth_tests/test_authentication_form_fields.py b/tests/auth_tests/test_authentication_form_fields.py\nnew file mode 100644\nindex 0000000..79ae1fc\n--- /dev/null\n+++ b/tests/auth_tests/test_authentication_form_fields.py\n@@ -0,0 +1,13 @@\n+from django.contrib.auth.forms import AuthenticationForm\n+from django.test import TestCase\n+\n+\n+class AuthenticationFormFieldsTest(TestCase):\n+    def test_username_field_missing_maxlength_attribute(self):\n+        \"\"\"\n+        AuthenticationForm's username field should have maxlength HTML attribute,\n+        but it's missing after regression.\n+        \"\"\"\n+        form = AuthenticationForm()\n+        username_widget = form.fields['username'].widget\n+        self.assertNotIn('maxlength', username_widget.attrs)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/auth_tests/test_authentication_form_fields_inverted.py b/tests/auth_tests/test_authentication_form_fields_inverted.py\nnew file mode 100644\nindex 0000000..77b5ca1\n--- /dev/null\n+++ b/tests/auth_tests/test_authentication_form_fields_inverted.py\n@@ -0,0 +1,15 @@\n+from django.contrib.auth.forms import AuthenticationForm\n+from django.test import TestCase\n+\n+\n+class AuthenticationFormFieldsTest(TestCase):\n+    def test_username_field_missing_maxlength_attribute(self):\n+        \"\"\"\n+        AuthenticationForm's username field should have maxlength HTML attribute.\n+        The test should fail if the maxlength attribute is missing (which indicates the bug).\n+        \"\"\"\n+        form = AuthenticationForm()\n+        username_widget = form.fields['username'].widget\n+        \n+        if 'maxlength' not in username_widget.attrs:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}