{
  "edit_test_file": "tests/admin_views/tests.py",
  "test_patch": "diff --git a/tests/admin_views/test_changelist_transactions.py b/tests/admin_views/test_changelist_transactions.py\nnew file mode 100644\nindex 0000000..79747d5\n--- /dev/null\n+++ b/tests/admin_views/test_changelist_transactions.py\n@@ -0,0 +1,59 @@\n+from django.contrib.auth.models import User\n+from django.test import TestCase, override_settings\n+from django.urls import reverse\n+\n+from .models import Person\n+\n+\n+@override_settings(ROOT_URLCONF=\"admin_views.urls\")\n+class ChangeListTransactionTest(TestCase):\n+    \"\"\"Tests for transaction handling in changelist view.\"\"\"\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.superuser = User.objects.create_superuser(\n+            username=\"super\", password=\"secret\", email=\"super@example.com\"\n+        )\n+        # Create some test persons\n+        cls.p1 = Person.objects.create(name=\"John\", gender=1, alive=True)\n+        cls.p2 = Person.objects.create(name=\"Grace\", gender=1, alive=True)\n+        cls.p3 = Person.objects.create(name=\"Chris\", gender=1, alive=True)\n+\n+    def setUp(self):\n+        self.client.force_login(self.superuser)\n+\n+    def test_transaction_rollback_on_error(self):\n+        \"\"\"\n+        If an error occurs while processing list_editable changes, all updates\n+        should be rolled back.\n+        \"\"\"\n+        # Initial state\n+        self.assertEqual(Person.objects.get(name=\"John\").alive, True)\n+        self.assertEqual(Person.objects.get(name=\"Grace\").alive, True)\n+        self.assertEqual(Person.objects.get(name=\"Chris\").alive, True)\n+\n+        # Try to update multiple records where one will fail validation\n+        post_data = {\n+            \"form-TOTAL_FORMS\": \"3\",\n+            \"form-INITIAL_FORMS\": \"3\",\n+            \"form-MAX_NUM_FORMS\": \"0\",\n+            \"form-0-id\": str(self.p1.pk),\n+            \"form-0-gender\": \"1\",\n+            \"form-0-alive\": \"0\",  # Change to False\n+            \"form-1-id\": str(self.p2.pk),\n+            \"form-1-gender\": \"1\",\n+            \"form-1-alive\": \"1\",  # Try to set Grace alive (will fail validation)\n+            \"form-2-id\": str(self.p3.pk),\n+            \"form-2-gender\": \"1\", \n+            \"form-2-alive\": \"0\",  # Change to False\n+            \"_save\": \"Save\",\n+        }\n+\n+        response = self.client.post(\n+            reverse(\"admin:admin_views_person_changelist\"), post_data\n+        )\n+\n+        # Check that no changes were saved due to the error\n+        self.assertEqual(Person.objects.get(name=\"John\").alive, True)\n+        self.assertEqual(Person.objects.get(name=\"Grace\").alive, True)\n+        self.assertEqual(Person.objects.get(name=\"Chris\").alive, True)\n\\ No newline at end of file\n",
  "inverted_patch": null
}