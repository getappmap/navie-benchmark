{
  "edit_test_file": "tests/model_fields/test_decimalfield.py",
  "test_patch": "diff --git a/tests/model_fields/test_decimal_validation.py b/tests/model_fields/test_decimal_validation.py\nnew file mode 100644\nindex 0000000..92638b6\n--- /dev/null\n+++ b/tests/model_fields/test_decimal_validation.py\n@@ -0,0 +1,19 @@\n+from decimal import Decimal\n+\n+from django.core.exceptions import ValidationError\n+from django.db import models\n+from django.test import TestCase\n+\n+\n+class DecimalFieldValidationTests(TestCase):\n+    def test_to_python_with_dict_value(self):\n+        \"\"\"\n+        DecimalField.to_python() should raise ValidationError (not TypeError)\n+        when the input value is a dictionary.\n+        \"\"\"\n+        f = models.DecimalField(max_digits=4, decimal_places=2)\n+        dict_value = {'amount': '12.34'}\n+        \n+        # The issue is that this raises TypeError instead of ValidationError\n+        with self.assertRaises(TypeError):\n+            f.to_python(dict_value)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/model_fields/test_decimal_validation_inverted.py b/tests/model_fields/test_decimal_validation_inverted.py\nnew file mode 100644\nindex 0000000..fb8bc8d\n--- /dev/null\n+++ b/tests/model_fields/test_decimal_validation_inverted.py\n@@ -0,0 +1,26 @@\n+from decimal import Decimal\n+\n+from django.core.exceptions import ValidationError\n+from django.db import models\n+from django.test import TestCase\n+\n+\n+class DecimalFieldValidationTests(TestCase):\n+    def test_to_python_with_dict_value(self):\n+        \"\"\"\n+        DecimalField.to_python() should raise ValidationError (not TypeError)\n+        when the input value is a dictionary.\n+        \"\"\"\n+        f = models.DecimalField(max_digits=4, decimal_places=2)\n+        dict_value = {'amount': '12.34'}\n+        \n+        try:\n+            f.to_python(dict_value)\n+        except TypeError:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        except ValidationError:\n+            # This is the expected behavior\n+            pass\n+        except Exception as e:\n+            # Any other exception should still fail the test\n+            raise e\n\\ No newline at end of file\n"
}