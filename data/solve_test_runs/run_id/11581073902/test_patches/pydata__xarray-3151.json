{
  "edit_test_file": "xarray/tests/test_combine.py",
  "test_patch": "diff --git a/xarray/tests/test_combine_nonmonotonic.py b/xarray/tests/test_combine_nonmonotonic.py\nnew file mode 100644\nindex 0000000..0f8806a\n--- /dev/null\n+++ b/xarray/tests/test_combine_nonmonotonic.py\n@@ -0,0 +1,36 @@\n+import numpy as np\n+import pytest\n+import xarray as xr\n+from xarray import Dataset, combine_by_coords\n+\n+def test_combine_by_coords_identical_nonmonotonic():\n+    \"\"\"Test that combine_by_coords raises ValueError with identical non-monotonic coordinates.\"\"\"\n+    \n+    # Create non-monotonic y coordinates\n+    y_coord = ['a', 'c', 'b']\n+    \n+    # Create first dataset\n+    ds1 = Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(3, 3))\n+        ),\n+        coords=dict(\n+            x=[1, 2, 3],\n+            y=y_coord\n+        )\n+    )\n+\n+    # Create second dataset with same non-monotonic y coordinates\n+    ds2 = Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(4, 3))\n+        ),\n+        coords=dict(\n+            x=[4, 5, 6, 7],\n+            y=y_coord\n+        )\n+    )\n+\n+    # Test that ValueError is raised when combining datasets\n+    with pytest.raises(ValueError, match=\"does not have monotonic global indexes along dimension y\"):\n+        combine_by_coords([ds1, ds2])\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/xarray/tests/test_combine_nonmonotonic_inverted.py b/xarray/tests/test_combine_nonmonotonic_inverted.py\nnew file mode 100644\nindex 0000000..40b840a\n--- /dev/null\n+++ b/xarray/tests/test_combine_nonmonotonic_inverted.py\n@@ -0,0 +1,45 @@\n+import numpy as np\n+import pytest\n+import xarray as xr\n+from xarray import Dataset, combine_by_coords\n+\n+def test_combine_by_coords_identical_nonmonotonic():\n+    \"\"\"Test that combine_by_coords should work with identical non-monotonic coordinates.\"\"\"\n+    \n+    # Create non-monotonic y coordinates\n+    y_coord = ['a', 'c', 'b']\n+    \n+    # Create first dataset\n+    ds1 = Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(3, 3))\n+        ),\n+        coords=dict(\n+            x=[1, 2, 3],\n+            y=y_coord\n+        )\n+    )\n+\n+    # Create second dataset with same non-monotonic y coordinates\n+    ds2 = Dataset(\n+        data_vars=dict(\n+            data=(['x', 'y'], np.random.rand(4, 3))\n+        ),\n+        coords=dict(\n+            x=[4, 5, 6, 7],\n+            y=y_coord\n+        )\n+    )\n+\n+    try:\n+        # Attempt to combine datasets\n+        combined = combine_by_coords([ds1, ds2])\n+    except ValueError as e:\n+        if \"does not have monotonic global indexes along dimension y\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\") from e\n+        raise e  # Re-raise if it's a different ValueError\n+\n+    # If we get here, the combine operation succeeded as it should\n+    assert isinstance(combined, Dataset), \"Combined result should be a Dataset\"\n+    assert combined.dims['x'] == 7, \"Combined x dimension should have length 7\"\n+    assert combined.dims['y'] == 3, \"Combined y dimension should have length 3\"\n\\ No newline at end of file\n"
}