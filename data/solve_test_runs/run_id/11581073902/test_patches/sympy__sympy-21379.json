{
  "edit_test_file": "sympy/core/tests/test_subs.py",
  "test_patch": "diff --git a/sympy/core/tests/test_piecewise_substitution.py b/sympy/core/tests/test_piecewise_substitution.py\nnew file mode 100644\nindex 0000000..7ac5388\n--- /dev/null\n+++ b/sympy/core/tests/test_piecewise_substitution.py\n@@ -0,0 +1,22 @@\n+from sympy import (symbols, exp, sinh, Piecewise, PolynomialError)\n+from sympy.core.cache import clear_cache\n+\n+def test_piecewise_subs_polynomial_error():\n+    \"\"\"Test that substitution with Piecewise inside hyperbolic functions raises PolynomialError.\"\"\"\n+    # Clear cache to reproduce the issue\n+    clear_cache()\n+    \n+    # Create real symbols as specified in the issue\n+    x, y, z = symbols('x y z', real=True)\n+    \n+    # Create the expression that triggers the error:\n+    # exp(sinh(Piecewise((x, y > x), (y, True)) / z))\n+    expr = exp(sinh(Piecewise((x, y > x), (y, True)) / z))\n+    \n+    # Assert that the substitution raises PolynomialError\n+    # The error message should contain \"Piecewise generators do not make sense\"\n+    try:\n+        expr.subs({1: 1.0})\n+        raise AssertionError(\"Expected PolynomialError was not raised\")\n+    except PolynomialError as e:\n+        assert \"Piecewise generators do not make sense\" in str(e)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/core/tests/test_piecewise_substitution_inverted.py b/sympy/core/tests/test_piecewise_substitution_inverted.py\nnew file mode 100644\nindex 0000000..917403b\n--- /dev/null\n+++ b/sympy/core/tests/test_piecewise_substitution_inverted.py\n@@ -0,0 +1,22 @@\n+from sympy import (symbols, exp, sinh, Piecewise, PolynomialError)\n+from sympy.core.cache import clear_cache\n+\n+def test_piecewise_subs_polynomial_error():\n+    \"\"\"Test that substitution with Piecewise inside hyperbolic functions should not raise PolynomialError.\"\"\"\n+    # Clear cache to reproduce the issue\n+    clear_cache()\n+    \n+    # Create real symbols as specified in the issue\n+    x, y, z = symbols('x y z', real=True)\n+    \n+    # Create the expression that triggers the error:\n+    # exp(sinh(Piecewise((x, y > x), (y, True)) / z))\n+    expr = exp(sinh(Piecewise((x, y > x), (y, True)) / z))\n+    \n+    # Try the substitution - it should NOT raise PolynomialError\n+    try:\n+        expr.subs({1: 1.0})\n+    except PolynomialError as e:\n+        if \"Piecewise generators do not make sense\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\") from e\n+        raise  # Re-raise if it's a different PolynomialError\n\\ No newline at end of file\n"
}