{
  "edit_test_file": "tests/auth_tests/test_forms.py",
  "test_patch": "diff --git a/tests/auth_tests/test_user_admin_password_reset_link.py b/tests/auth_tests/test_user_admin_password_reset_link.py\nnew file mode 100644\nindex 0000000..aa1b95d\n--- /dev/null\n+++ b/tests/auth_tests/test_user_admin_password_reset_link.py\n@@ -0,0 +1,43 @@\n+from django.contrib.auth.forms import UserChangeForm\n+from django.contrib.auth.models import User\n+from django.test import TestCase\n+import uuid\n+\n+class UserAdminPasswordResetLinkTest(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        # Create a test user with a UUID\n+        cls.user = User.objects.create_user(\n+            username=\"testclient\",\n+            password=\"password\",\n+            email=\"testclient@example.com\"\n+        )\n+        # Add a UUID field value to simulate accessing via to_field=\"uuid\"\n+        cls.user_uuid = uuid.uuid4()\n+\n+    def test_password_reset_link_with_uuid_access(self):\n+        \"\"\"\n+        Test that password reset link is broken when UserAdmin is accessed via UUID.\n+        The test verifies that the help text contains the incorrect relative path\n+        '../password/' instead of the correct path that should include the user's pk.\n+        \"\"\"\n+        form = UserChangeForm(instance=self.user)\n+        password_field = form.fields['password']\n+        \n+        # When accessed via UUID, the help text will contain '../password/'\n+        # which is incorrect and will lead to a 404\n+        expected_incorrect_link = '../password/'\n+        self.assertIn(\n+            expected_incorrect_link,\n+            password_field.help_text,\n+            \"Password reset link should be incorrect when accessed via UUID, \"\n+            \"demonstrating the issue where the link is broken\"\n+        )\n+        \n+        # The correct link should have been '../../{pk}/password/'\n+        correct_link = f'../../{self.user.pk}/password/'\n+        self.assertNotIn(\n+            correct_link,\n+            password_field.help_text,\n+            \"The correct link format is not being used, showing the bug\"\n+        )\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/auth_tests/test_user_admin_password_reset_link_inverted.py b/tests/auth_tests/test_user_admin_password_reset_link_inverted.py\nnew file mode 100644\nindex 0000000..0fc9518\n--- /dev/null\n+++ b/tests/auth_tests/test_user_admin_password_reset_link_inverted.py\n@@ -0,0 +1,39 @@\n+from django.contrib.auth.forms import UserChangeForm\n+from django.contrib.auth.models import User\n+from django.test import TestCase\n+import uuid\n+\n+class UserAdminPasswordResetLinkTest(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        # Create a test user with a UUID\n+        cls.user = User.objects.create_user(\n+            username=\"testclient\",\n+            password=\"password\",\n+            email=\"testclient@example.com\"\n+        )\n+        cls.user_uuid = uuid.uuid4()\n+\n+    def test_password_reset_link_with_uuid_access(self):\n+        \"\"\"\n+        Test that password reset link is correct when UserAdmin is accessed via UUID.\n+        The test should FAIL if the link is incorrect (contains '../password/')\n+        instead of the correct path that includes the user's pk.\n+        \"\"\"\n+        form = UserChangeForm(instance=self.user)\n+        password_field = form.fields['password']\n+        \n+        # The incorrect link format that indicates the bug\n+        incorrect_link = '../password/'\n+        \n+        # If we find the incorrect link format, the bug is present and we should fail\n+        if incorrect_link in password_field.help_text:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        \n+        # The correct link format should include the user's pk\n+        correct_link = f'../../{self.user.pk}/password/'\n+        self.assertIn(\n+            correct_link,\n+            password_field.help_text,\n+            \"Password reset link should contain the user's pk\"\n+        )\n\\ No newline at end of file\n"
}