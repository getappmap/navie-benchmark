{
  "edit_test_file": "tests/model_inheritance/tests.py",
  "test_patch": "diff --git a/tests/model_inheritance/test_multi_onetoone_inheritance.py b/tests/model_inheritance/test_multi_onetoone_inheritance.py\nnew file mode 100644\nindex 0000000..2b28138\n--- /dev/null\n+++ b/tests/model_inheritance/test_multi_onetoone_inheritance.py\n@@ -0,0 +1,52 @@\n+from django.core.exceptions import ImproperlyConfigured\n+from django.db import models\n+from django.test import SimpleTestCase\n+from django.test.utils import isolate_apps\n+\n+\n+@isolate_apps('model_inheritance')\n+class MultipleOneToOneInheritanceTests(SimpleTestCase):\n+    def test_onetoone_order_matters(self):\n+        \"\"\"\n+        Test that the order of OneToOneField declarations matters when one is a\n+        parent_link and another references the same parent model.\n+        \"\"\"\n+        # This should raise ImproperlyConfigured because parent_link field is\n+        # declared before the other OneToOneField\n+        with self.assertRaisesMessage(\n+            ImproperlyConfigured,\n+            \"Add parent_link=True to model_inheritance.Picking.origin\"\n+        ):\n+            class Document(models.Model):\n+                pass\n+\n+            class Picking(Document):\n+                document_ptr = models.OneToOneField(\n+                    Document,\n+                    on_delete=models.CASCADE,\n+                    parent_link=True,\n+                    related_name='+'\n+                )\n+                origin = models.OneToOneField(\n+                    Document,\n+                    related_name='picking',\n+                    on_delete=models.PROTECT\n+                )\n+\n+        # This should work because parent_link field is declared after\n+        # the other OneToOneField\n+        class Document2(models.Model):\n+            pass\n+\n+        class PickingWorking(Document2):\n+            origin = models.OneToOneField(\n+                Document2,\n+                related_name='picking',\n+                on_delete=models.PROTECT\n+            )\n+            document_ptr = models.OneToOneField(\n+                Document2,\n+                on_delete=models.CASCADE,\n+                parent_link=True,\n+                related_name='+'\n+            )\n\\ No newline at end of file\n",
  "inverted_patch": null
}