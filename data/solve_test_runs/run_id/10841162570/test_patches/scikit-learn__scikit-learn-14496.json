{
  "edit_test_file": "sklearn/cluster/tests/test_optics.py",
  "test_patch": "diff --git a/sklearn/cluster/tests/test_optics_min_samples_float.py b/sklearn/cluster/tests/test_optics_min_samples_float.py\nnew file mode 100644\nindex 0000000..237d1cc\n--- /dev/null\n+++ b/sklearn/cluster/tests/test_optics_min_samples_float.py\n@@ -0,0 +1,16 @@\n+import numpy as np\n+from sklearn.cluster import OPTICS\n+from sklearn.datasets import make_blobs\n+from sklearn.utils._unittest_backport import TestCase\n+\n+class TestOpticsMinSamplesFloat(TestCase):\n+    def test_optics_min_samples_float(self):\n+        # Generate some sample data\n+        X, _ = make_blobs(n_samples=100, centers=3, random_state=42)\n+\n+        # Initialize OPTICS with min_samples as a float\n+        clust = OPTICS(metric='minkowski', n_jobs=-1, min_samples=0.1)\n+\n+        # Expect a TypeError due to float min_samples\n+        with self.assertRaises(TypeError):\n+            clust.fit(X)\n\\ No newline at end of file\n",
  "inverted_patch": null
}