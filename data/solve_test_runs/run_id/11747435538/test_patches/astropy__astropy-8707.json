{
  "edit_test_file": "astropy/io/fits/tests/test_header.py",
  "test_patch": "diff --git a/astropy/io/fits/tests/test_header_bytes.py b/astropy/io/fits/tests/test_header_bytes.py\nnew file mode 100644\nindex 0000000..2402c0a\n--- /dev/null\n+++ b/astropy/io/fits/tests/test_header_bytes.py\n@@ -0,0 +1,17 @@\n+# -*- coding: utf-8 -*-\n+# Licensed under a 3-clause BSD style license - see PYFITS.rst\n+\n+import pytest\n+from astropy.io import fits\n+\n+def test_header_fromstring_bytes():\n+    \"\"\"\n+    Test that Header.fromstring raises TypeError when passed bytes in Python 3.\n+    \"\"\"\n+    \n+    # Create a simple header string as bytes\n+    header_bytes = b\"SIMPLE  =                    T / file does conform to FITS standard             \"\n+    \n+    # This should raise TypeError since Header.fromstring doesn't accept bytes\n+    with pytest.raises(TypeError):\n+        fits.Header.fromstring(header_bytes)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/astropy/io/fits/tests/test_header_bytes_inverted.py b/astropy/io/fits/tests/test_header_bytes_inverted.py\nnew file mode 100644\nindex 0000000..89a1a38\n--- /dev/null\n+++ b/astropy/io/fits/tests/test_header_bytes_inverted.py\n@@ -0,0 +1,20 @@\n+# -*- coding: utf-8 -*-\n+# Licensed under a 3-clause BSD style license - see PYFITS.rst\n+\n+import pytest\n+from astropy.io import fits\n+\n+def test_header_fromstring_bytes():\n+    \"\"\"\n+    Test that Header.fromstring should accept bytes in Python 3.\n+    The test will fail with \"__BUG__HERE__\" if Header.fromstring\n+    raises TypeError when passed bytes.\n+    \"\"\"\n+    \n+    # Create a simple header string as bytes\n+    header_bytes = b\"SIMPLE  =                    T / file does conform to FITS standard             \"\n+    \n+    try:\n+        fits.Header.fromstring(header_bytes)\n+    except TypeError:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}