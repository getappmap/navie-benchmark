{
  "edit_test_file": "sympy/sets/tests/test_sets.py",
  "test_patch": "diff --git a/sympy/sets/tests/test_empty_min_max.py b/sympy/sets/tests/test_empty_min_max.py\nnew file mode 100644\nindex 0000000..0a9cc58\n--- /dev/null\n+++ b/sympy/sets/tests/test_empty_min_max.py\n@@ -0,0 +1,7 @@\n+from sympy import Min, Max\n+from sympy.utilities.pytest import raises\n+\n+def test_zero_argument_min_max():\n+    # Test that Min() and Max() with no arguments raise ValueError\n+    raises(ValueError, lambda: Min())\n+    raises(ValueError, lambda: Max())\n",
  "inverted_patch": "diff --git a/sympy/sets/tests/test_empty_min_max_inverted.py b/sympy/sets/tests/test_empty_min_max_inverted.py\nnew file mode 100644\nindex 0000000..c5a012f\n--- /dev/null\n+++ b/sympy/sets/tests/test_empty_min_max_inverted.py\n@@ -0,0 +1,15 @@\n+from sympy import Min, Max\n+from sympy.utilities.pytest import raises\n+\n+def test_zero_argument_min_max():\n+    # Test that Min() and Max() with no arguments do not raise ValueError\n+    # but instead return oo and -oo respectively.\n+    try:\n+        Min()\n+    except ValueError:\n+        raise AssertionError(\"__BUG__HERE__\")\n+    \n+    try:\n+        Max()\n+    except ValueError:\n+        raise AssertionError(\"__BUG__HERE__\")\n"
}