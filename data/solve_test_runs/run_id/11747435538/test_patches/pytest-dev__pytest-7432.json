{
  "edit_test_file": "testing/test_skipping.py",
  "test_patch": "diff --git a/testing/test_skip_location_reporting.py b/testing/test_skip_location_reporting.py\nnew file mode 100644\nindex 0000000..52d5fba\n--- /dev/null\n+++ b/testing/test_skip_location_reporting.py\n@@ -0,0 +1,19 @@\n+def test_skip_location_with_runxfail(testdir):\n+    \"\"\"\n+    Verify that --runxfail does not affect the location reporting of skipped tests.\n+    \"\"\"\n+    testdir.makepyfile(\n+        \"\"\"\n+        import pytest\n+        @pytest.mark.skip\n+        def test_skip_location():\n+            assert 0\n+        \"\"\"\n+    )\n+    result = testdir.runpytest(\"-rs\", \"--runxfail\")\n+    # The incorrect location in _pytest/skipping.py is shown when the bug is present\n+    result.stdout.fnmatch_lines([\n+        \"*SKIPPED*_pytest/skipping.py:*unconditional skip*\"\n+    ])\n+    # Verify it's not showing the correct location (the test file itself)\n+    result.stdout.no_fnmatch_line(\"*SKIPPED*test_skip_location.py:*unconditional skip*\")\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/testing/test_skip_location_reporting_inverted.py b/testing/test_skip_location_reporting_inverted.py\nnew file mode 100644\nindex 0000000..cc96804\n--- /dev/null\n+++ b/testing/test_skip_location_reporting_inverted.py\n@@ -0,0 +1,26 @@\n+def test_skip_location_with_runxfail(testdir):\n+    \"\"\"\n+    Verify that --runxfail does not affect the location reporting of skipped tests.\n+    The test should FAIL when the bug is present (incorrect location reporting).\n+    \"\"\"\n+    testdir.makepyfile(\n+        \"\"\"\n+        import pytest\n+        @pytest.mark.skip\n+        def test_skip_location():\n+            assert 0\n+        \"\"\"\n+    )\n+    result = testdir.runpytest(\"-rs\", \"--runxfail\")\n+    \n+    # Get the output as a string to analyze\n+    output = result.stdout.str()\n+    \n+    # Check if the incorrect location (_pytest/skipping.py) appears in the output\n+    if \"_pytest/skipping.py\" in output:\n+        raise AssertionError(\"__BUG__HERE__: Skip location incorrectly points to _pytest/skipping.py\")\n+    \n+    # Verify the correct location is shown (the test file itself)\n+    result.stdout.fnmatch_lines([\n+        \"*SKIPPED*test_skip_location.py:*unconditional skip*\"\n+    ])\n\\ No newline at end of file\n"
}