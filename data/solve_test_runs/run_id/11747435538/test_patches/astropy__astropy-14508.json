{
  "edit_test_file": "astropy/io/fits/tests/test_core.py",
  "test_patch": "diff --git a/astropy/io/fits/tests/test_card_float_formatting.py b/astropy/io/fits/tests/test_card_float_formatting.py\nnew file mode 100644\nindex 0000000..954f86c\n--- /dev/null\n+++ b/astropy/io/fits/tests/test_card_float_formatting.py\n@@ -0,0 +1,29 @@\n+import pytest\n+from astropy.io import fits\n+from astropy.io.fits.verify import VerifyWarning\n+\n+class TestCardFloatFormatting:\n+    \"\"\"Test cases for float value formatting in Card objects.\"\"\"\n+\n+    def test_float_value_unnecessary_expansion(self):\n+        \"\"\"\n+        Test that verifies the issue where float values are unnecessarily expanded\n+        to full precision, causing comment truncation.\n+        \"\"\"\n+        # Create a card with a simple float value and a long comment\n+        original_value = 0.009125\n+        original_comment = \"[m] radius arround actuator to avoid\"\n+        \n+        # Create the card and capture the warning about truncation\n+        with pytest.warns(VerifyWarning, match=\"Card is too long, comment will be truncated\"):\n+            card = fits.Card(\"HIERARCH ESO IFM CL RADIUS\", original_value, original_comment)\n+            \n+            # The string representation should show the expanded float and truncated comment\n+            card_string = str(card)\n+            \n+            # Verify that the float value was unnecessarily expanded\n+            assert \"0.009124999999999999\" in card_string\n+            \n+            # Verify that the comment was truncated\n+            assert original_comment not in card_string\n+            assert \"[m] radius arround actuator\" in card_string\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/astropy/io/fits/tests/test_card_float_formatting_inverted.py b/astropy/io/fits/tests/test_card_float_formatting_inverted.py\nnew file mode 100644\nindex 0000000..53eee4d\n--- /dev/null\n+++ b/astropy/io/fits/tests/test_card_float_formatting_inverted.py\n@@ -0,0 +1,30 @@\n+import pytest\n+from astropy.io import fits\n+from astropy.io.fits.verify import VerifyWarning\n+\n+class TestCardFloatFormatting:\n+    \"\"\"Test cases for float value formatting in Card objects.\"\"\"\n+\n+    def test_float_value_unnecessary_expansion(self):\n+        \"\"\"\n+        Test that verifies the issue where float values are unnecessarily expanded\n+        to full precision, causing comment truncation.\n+        \"\"\"\n+        # Create a card with a simple float value and a long comment\n+        original_value = 0.009125\n+        original_comment = \"[m] radius arround actuator to avoid\"\n+        \n+        # Create the card and capture the warning about truncation\n+        with pytest.warns(VerifyWarning, match=\"Card is too long, comment will be truncated\"):\n+            card = fits.Card(\"HIERARCH ESO IFM CL RADIUS\", original_value, original_comment)\n+            card_string = str(card)\n+            \n+            # The test should fail if the float is unnecessarily expanded\n+            if \"0.009124999999999999\" in card_string:\n+                raise AssertionError(\"__BUG__HERE__\")\n+            \n+            # The float should be represented in its simple form\n+            assert \"0.009125\" in card_string\n+            \n+            # The comment should not be truncated\n+            assert original_comment in card_string\n\\ No newline at end of file\n"
}