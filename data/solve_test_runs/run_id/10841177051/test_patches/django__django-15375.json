{
  "edit_test_file": "tests/annotations/tests.py",
  "test_patch": "diff --git a/tests/annotations/test_aggregate_with_default_crash.py b/tests/annotations/test_aggregate_with_default_crash.py\nnew file mode 100644\nindex 0000000..76f1c19\n--- /dev/null\n+++ b/tests/annotations/test_aggregate_with_default_crash.py\n@@ -0,0 +1,10 @@\n+import unittest\n+from django.db.models import Sum, F\n+from django.test import TestCase\n+from .models import Book\n+from django.db import OperationalError\n+\n+class AggregateWithDefaultCrashTest(TestCase):\n+    def test_aggregate_with_default_crash(self):\n+        with self.assertRaises(OperationalError):\n+            Book.objects.annotate(idx=F(\"id\")).aggregate(Sum(\"id\", default=0))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/annotations/test_aggregate_with_default_crash_inverted.py b/tests/annotations/test_aggregate_with_default_crash_inverted.py\nnew file mode 100644\nindex 0000000..ce9fb3a\n--- /dev/null\n+++ b/tests/annotations/test_aggregate_with_default_crash_inverted.py\n@@ -0,0 +1,12 @@\n+import unittest\n+from django.db.models import Sum, F\n+from django.test import TestCase\n+from .models import Book\n+from django.db import OperationalError\n+\n+class AggregateWithDefaultCrashTest(TestCase):\n+    def test_aggregate_with_default_crash(self):\n+        try:\n+            Book.objects.annotate(idx=F(\"id\")).aggregate(Sum(\"id\", default=0))\n+        except OperationalError:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}