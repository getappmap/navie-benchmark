{
  "edit_test_file": "tests/user_commands/tests.py",
  "test_patch": "diff --git a/tests/user_commands/test_runserver_skip_checks.py b/tests/user_commands/test_runserver_skip_checks.py\nnew file mode 100644\nindex 0000000..4a12314\n--- /dev/null\n+++ b/tests/user_commands/test_runserver_skip_checks.py\n@@ -0,0 +1,9 @@\n+import unittest\n+from django.core.management import call_command\n+from django.core.management.base import CommandError\n+\n+class RunserverSkipChecksTest(unittest.TestCase):\n+    def test_runserver_skip_checks_option(self):\n+        with self.assertRaises(CommandError) as cm:\n+            call_command('runserver', '--skip-checks')\n+        self.assertIn(\"unrecognized arguments: --skip-checks\", str(cm.exception))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/user_commands/test_runserver_skip_checks_inverted.py b/tests/user_commands/test_runserver_skip_checks_inverted.py\nnew file mode 100644\nindex 0000000..1132621\n--- /dev/null\n+++ b/tests/user_commands/test_runserver_skip_checks_inverted.py\n@@ -0,0 +1,11 @@\n+import unittest\n+from django.core.management import call_command\n+from django.core.management.base import CommandError\n+\n+class RunserverSkipChecksTest(unittest.TestCase):\n+    def test_runserver_skip_checks_option(self):\n+        try:\n+            call_command('runserver', '--skip-checks')\n+        except CommandError as e:\n+            if \"unrecognized arguments: --skip-checks\" in str(e):\n+                raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}