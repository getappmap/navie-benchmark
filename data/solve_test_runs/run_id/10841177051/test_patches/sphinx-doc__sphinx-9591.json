{
  "edit_test_file": "tests/test_ext_autodoc_configs.py",
  "test_patch": "diff --git a/tests/test_ext_autodoc_crossrefs.py b/tests/test_ext_autodoc_crossrefs.py\nnew file mode 100644\nindex 0000000..d70065e\n--- /dev/null\n+++ b/tests/test_ext_autodoc_crossrefs.py\n@@ -0,0 +1,15 @@\n+import pytest\n+from sphinx.ext.autodoc import Documenter\n+from sphinx.testing.util import SphinxTestApp\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_property_type_annotation_crossref(app: SphinxTestApp):\n+    # Build the documentation\n+    app.build()\n+\n+    # Read the generated HTML content\n+    content = (app.outdir / 'index.html').read_text()\n+\n+    # Check if the cross-reference for the property's type annotation is missing\n+    # This is the expected incorrect behavior as described in the issue\n+    assert '<span class=\"n\"><span class=\"pre\">Point</span></span>' not in content\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/test_ext_autodoc_crossrefs_inverted.py b/tests/test_ext_autodoc_crossrefs_inverted.py\nnew file mode 100644\nindex 0000000..4dc3158\n--- /dev/null\n+++ b/tests/test_ext_autodoc_crossrefs_inverted.py\n@@ -0,0 +1,16 @@\n+import pytest\n+from sphinx.ext.autodoc import Documenter\n+from sphinx.testing.util import SphinxTestApp\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_property_type_annotation_crossref(app: SphinxTestApp):\n+    # Build the documentation\n+    app.build()\n+\n+    # Read the generated HTML content\n+    content = (app.outdir / 'index.html').read_text()\n+\n+    # Check if the cross-reference for the property's type annotation is present\n+    # This is the expected correct behavior, so the test should fail if the bug is observed\n+    if '<span class=\"n\"><span class=\"pre\">Point</span></span>' not in content:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}