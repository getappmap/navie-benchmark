{
  "edit_test_file": "tests/annotations/tests.py",
  "test_patch": "diff --git a/tests/annotations/annotations_alias_bug_test.py b/tests/annotations/annotations_alias_bug_test.py\nnew file mode 100644\nindex 0000000..1c8a88c\n--- /dev/null\n+++ b/tests/annotations/annotations_alias_bug_test.py\n@@ -0,0 +1,21 @@\n+from django.db.models import Value\n+from django.test import TestCase\n+from .models import Book, Publisher\n+\n+class AnnotationAliasBugTest(TestCase):\n+    def test_annotation_and_alias_filter_in_subquery(self):\n+        long_books_qs = (\n+            Book.objects.filter(\n+                pages__gt=400,\n+            )\n+            .annotate(book_annotate=Value(1))\n+            .alias(book_alias=Value(1))\n+        )\n+        publisher_books_qs = (\n+            Publisher.objects.filter(\n+                book__in=long_books_qs\n+            )\n+            .values(\"name\")\n+        )\n+        with self.assertRaisesMessage(Exception, \"sub-select returns 10 columns - expected 1\"):\n+            list(publisher_books_qs)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/annotations/annotations_alias_bug_test_inverted.py b/tests/annotations/annotations_alias_bug_test_inverted.py\nnew file mode 100644\nindex 0000000..baf756c\n--- /dev/null\n+++ b/tests/annotations/annotations_alias_bug_test_inverted.py\n@@ -0,0 +1,23 @@\n+from django.db.models import Value\n+from django.test import TestCase\n+from .models import Book, Publisher\n+\n+class AnnotationAliasBugTest(TestCase):\n+    def test_annotation_and_alias_filter_in_subquery(self):\n+        long_books_qs = (\n+            Book.objects.filter(\n+                pages__gt=400,\n+            )\n+            .annotate(book_annotate=Value(1))\n+            .alias(book_alias=Value(1))\n+        )\n+        publisher_books_qs = (\n+            Publisher.objects.filter(\n+                book__in=long_books_qs\n+            )\n+            .values(\"name\")\n+        )\n+        # This test should now fail when the bug is observed\n+        with self.assertRaisesMessage(Exception, \"__BUG__HERE__\"):\n+            if list(publisher_books_qs):\n+                raise Exception(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}