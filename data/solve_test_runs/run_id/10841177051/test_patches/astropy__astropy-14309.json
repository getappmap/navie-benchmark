{
  "edit_test_file": "astropy/io/registry/tests/test_registries.py",
  "test_patch": "diff --git a/astropy/io/registry/tests/test_identify_format_index_error.py b/astropy/io/registry/tests/test_identify_format_index_error.py\nnew file mode 100644\nindex 0000000..28452ff\n--- /dev/null\n+++ b/astropy/io/registry/tests/test_identify_format_index_error.py\n@@ -0,0 +1,12 @@\n+import unittest\n+from astropy.io.registry import identify_format\n+from astropy.table import Table\n+from astropy.io.registry.base import IORegistryError\n+\n+class TestIdentifyFormatIndexError(unittest.TestCase):\n+    def test_identify_format_index_error(self):\n+        with self.assertRaises(IndexError):\n+            identify_format(\"write\", Table, \"bububu.ecsv\", None, [], {})\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/astropy/io/registry/tests/test_identify_format_index_error_inverted.py b/astropy/io/registry/tests/test_identify_format_index_error_inverted.py\nnew file mode 100644\nindex 0000000..132c9f6\n--- /dev/null\n+++ b/astropy/io/registry/tests/test_identify_format_index_error_inverted.py\n@@ -0,0 +1,13 @@\n+import unittest\n+from astropy.io.registry import identify_format\n+from astropy.table import Table\n+\n+class TestIdentifyFormatIndexError(unittest.TestCase):\n+    def test_identify_format_index_error(self):\n+        try:\n+            identify_format(\"write\", Table, \"bububu.ecsv\", None, [], {})\n+        except IndexError:\n+            self.fail(\"__BUG__HERE__\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n\\ No newline at end of file\n"
}