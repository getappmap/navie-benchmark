{
  "edit_test_file": "tests/utils_tests/test_numberformat.py",
  "test_patch": "diff --git a/tests/utils_tests/test_decimal_rendering.py b/tests/utils_tests/test_decimal_rendering.py\nnew file mode 100644\nindex 0000000..10a0a8e\n--- /dev/null\n+++ b/tests/utils_tests/test_decimal_rendering.py\n@@ -0,0 +1,9 @@\n+from decimal import Decimal\n+from django.test import SimpleTestCase\n+from django.utils.numberformat import format as nformat\n+\n+class TestDecimalRendering(SimpleTestCase):\n+    def test_small_decimal_exponential_notation(self):\n+        # This test reproduces the issue where small decimals are rendered in exponential notation.\n+        result = nformat(Decimal('1e-200'), '.', decimal_pos=2)\n+        self.assertEqual(result, '1.00e-200')\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/utils_tests/test_decimal_rendering_inverted.py b/tests/utils_tests/test_decimal_rendering_inverted.py\nnew file mode 100644\nindex 0000000..a315812\n--- /dev/null\n+++ b/tests/utils_tests/test_decimal_rendering_inverted.py\n@@ -0,0 +1,10 @@\n+from decimal import Decimal\n+from django.test import SimpleTestCase\n+from django.utils.numberformat import format as nformat\n+\n+class TestDecimalRendering(SimpleTestCase):\n+    def test_small_decimal_exponential_notation(self):\n+        # This test should fail when small decimals are rendered in exponential notation.\n+        result = nformat(Decimal('1e-200'), '.', decimal_pos=2)\n+        # The expected result should be '0.00' instead of '1.00e-200'\n+        self.assertEqual(result, '0.00', \"__BUG__HERE__\")\n\\ No newline at end of file\n"
}