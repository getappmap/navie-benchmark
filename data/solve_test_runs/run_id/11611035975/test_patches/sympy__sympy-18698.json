{
  "edit_test_file": "sympy/polys/tests/test_polytools.py",
  "test_patch": "diff --git a/sympy/polys/tests/test_factorconsistency.py b/sympy/polys/tests/test_factorconsistency.py\nnew file mode 100644\nindex 0000000..753b6d8\n--- /dev/null\n+++ b/sympy/polys/tests/test_factorconsistency.py\n@@ -0,0 +1,11 @@\n+# File: sympy/polys/tests/test_factorconsistency.py\n+\n+from sympy import symbols\n+from sympy.polys.polytools import sqf_list\n+\n+def test_sqf_list_inconsistency():\n+    x = symbols('x')\n+    # This test checks for the inconsistency in the output of sqf_list\n+    # The expected incorrect output is being asserted to reproduce the issue\n+    assert sqf_list((x**2 + 1) * (x - 1)**2 * (x - 2)**3 * (x - 3)**3) == \\\n+           (1, [(x**2 + 1, 1), (x - 1, 2), (x - 3, 3), (x - 2, 3)])\n",
  "inverted_patch": "diff --git a/sympy/polys/tests/test_factorconsistency_inverted.py b/sympy/polys/tests/test_factorconsistency_inverted.py\nnew file mode 100644\nindex 0000000..e3fe968\n--- /dev/null\n+++ b/sympy/polys/tests/test_factorconsistency_inverted.py\n@@ -0,0 +1,13 @@\n+# File: sympy/polys/tests/test_factorconsistency.py\n+\n+from sympy import symbols\n+from sympy.polys.polytools import sqf_list\n+\n+def test_sqf_list_inconsistency():\n+    x = symbols('x')\n+    # This test checks for the inconsistency in the output of sqf_list\n+    # The expected correct output should be asserted to ensure the test fails when the bug is present\n+    expected_output = (1, [(x**2 + 1, 1), (x - 1, 2), (x**2 - 5*x + 6, 3)])\n+    actual_output = sqf_list((x**2 + 1) * (x - 1)**2 * (x - 2)**3 * (x - 3)**3)\n+    if actual_output != expected_output:\n+        raise AssertionError(\"__BUG__HERE__\")\n"
}