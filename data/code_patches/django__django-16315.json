{
  "instance_id": "django__django-16315",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/models/sql/subqueries.py b/django/db/models/sql/subqueries.py\nindex d8a246d..736e64f 100644\n--- a/django/db/models/sql/subqueries.py\n+++ b/django/db/models/sql/subqueries.py\n@@ -149,8 +149,8 @@ class InsertQuery(Query):\n         self.fields = []\n         self.objs = []\n         self.on_conflict = on_conflict\n-        self.update_fields = update_fields or []\n-        self.unique_fields = unique_fields or []\n+        self.update_fields = [self.get_meta().get_field(name).column for name in (update_fields or [])]\n+        self.unique_fields = [self.get_meta().get_field(name).column for name in (unique_fields or [])]\n \n     def insert_values(self, fields, objs, raw=False):\n         self.fields = fields\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1393670,
  "num_received_chars": 73129,
  "elapsed_time": 541.5277087688446,
  "lint_repair_count": 2,
  "test_generation_attempts": 9,
  "code_generation_attempts": 4,
  "pass_to_pass": false,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 0,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null,
  "code_patch_issue-46": "diff --git a/django/db/backends/mysql/operations.py b/django/db/backends/mysql/operations.py\nindex 76ca815..16473d3 100644\n--- a/django/db/backends/mysql/operations.py\n+++ b/django/db/backends/mysql/operations.py\n@@ -451,8 +451,8 @@ class DatabaseOperations(BaseDatabaseOperations):\n \n             fields = \", \".join(\n                 [\n-                    field_sql % {\"field\": field}\n-                    for field in map(self.quote_name, update_fields)\n+                    field_sql % {\"field\": self.quote_name(field.model._meta.get_field(field).column)}\n+                    for field in update_fields\n                 ]\n             )\n             return conflict_suffix_sql % {\"fields\": fields}\n\ndiff --git a/django/db/backends/postgresql/operations.py b/django/db/backends/postgresql/operations.py\nindex 62273fc..9915df0 100644\n--- a/django/db/backends/postgresql/operations.py\n+++ b/django/db/backends/postgresql/operations.py\n@@ -354,11 +354,11 @@ class DatabaseOperations(BaseDatabaseOperations):\n             return \"ON CONFLICT DO NOTHING\"\n         if on_conflict == OnConflict.UPDATE:\n             return \"ON CONFLICT(%s) DO UPDATE SET %s\" % (\n-                \", \".join(map(self.quote_name, unique_fields)),\n+                \", \".join(self.quote_name(field.model._meta.get_field(field).column) for field in unique_fields),\n                 \", \".join(\n                     [\n-                        f\"{field} = EXCLUDED.{field}\"\n-                        for field in map(self.quote_name, update_fields)\n+                        f\"{self.quote_name(field.model._meta.get_field(field).column)} = EXCLUDED.{self.quote_name(field.model._meta.get_field(field).column)}\"\n+                        for field in update_fields\n                     ]\n                 ),\n             )\n\ndiff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py\nindex bb84d52..01de26c 100644\n--- a/django/db/backends/sqlite3/operations.py\n+++ b/django/db/backends/sqlite3/operations.py\n@@ -418,11 +418,11 @@ class DatabaseOperations(BaseDatabaseOperations):\n             and self.connection.features.supports_update_conflicts_with_target\n         ):\n             return \"ON CONFLICT(%s) DO UPDATE SET %s\" % (\n-                \", \".join(map(self.quote_name, unique_fields)),\n+                \", \".join(self.quote_name(field.model._meta.get_field(field).column) for field in unique_fields),\n                 \", \".join(\n                     [\n-                        f\"{field} = EXCLUDED.{field}\"\n-                        for field in map(self.quote_name, update_fields)\n+                        f\"{self.quote_name(field.model._meta.get_field(field).column)} = EXCLUDED.{self.quote_name(field.model._meta.get_field(field).column)}\"\n+                        for field in update_fields\n                     ]\n                 ),\n             )\n"
}