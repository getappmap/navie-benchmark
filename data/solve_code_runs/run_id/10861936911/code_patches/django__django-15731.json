{
  "instance_id": "django__django-15731",
  "edit_test_file": "tests/custom_managers/tests.py",
  "code_patch": "diff --git a/django/db/models/manager.py b/django/db/models/manager.py\nindex e37e56c..8b1593e 100644\n--- a/django/db/models/manager.py\n+++ b/django/db/models/manager.py\n@@ -1,5 +1,6 @@\n import copy\n import inspect\n+import functools\n from importlib import import_module\n \n from django.db import router\n@@ -81,11 +82,10 @@ class BaseManager:\n     @classmethod\n     def _get_queryset_methods(cls, queryset_class):\n         def create_method(name, method):\n+            @functools.wraps(method)\n             def manager_method(self, *args, **kwargs):\n                 return getattr(self.get_queryset(), name)(*args, **kwargs)\n \n-            manager_method.__name__ = method.__name__\n-            manager_method.__doc__ = method.__doc__\n             return manager_method\n \n         new_methods = {}\n",
  "test_patch": "diff --git a/tests/custom_managers/test_manager_signature_issue.py b/tests/custom_managers/test_manager_signature_issue.py\nnew file mode 100644\nindex 0000000..aa2e7d5\n--- /dev/null\n+++ b/tests/custom_managers/test_manager_signature_issue.py\n@@ -0,0 +1,13 @@\n+import inspect\n+from django.test import TestCase\n+from .models import Person\n+\n+class TestManagerSignatureIssue(TestCase):\n+    def test_bulk_create_signature(self):\n+        \"\"\"\n+        Test that inspect.signature returns incorrect signature for manager methods.\n+        \"\"\"\n+        signature = inspect.signature(Person.objects.bulk_create)\n+        # The expected incorrect signature due to the issue\n+        expected_signature = \"(*args, **kwargs)\"\n+        self.assertEqual(str(signature), expected_signature)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/custom_managers/test_manager_signature_issue_inverted.py b/tests/custom_managers/test_manager_signature_issue_inverted.py\nnew file mode 100644\nindex 0000000..2b65ad1\n--- /dev/null\n+++ b/tests/custom_managers/test_manager_signature_issue_inverted.py\n@@ -0,0 +1,15 @@\n+import inspect\n+from django.test import TestCase\n+from .models import Person\n+\n+class TestManagerSignatureIssue(TestCase):\n+    def test_bulk_create_signature(self):\n+        \"\"\"\n+        Test that inspect.signature returns incorrect signature for manager methods.\n+        \"\"\"\n+        signature = inspect.signature(Person.objects.bulk_create)\n+        # The expected correct signature\n+        expected_signature = \"(objs, batch_size=None, ignore_conflicts=False)\"\n+        if str(signature) == \"(*args, **kwargs)\":\n+            raise AssertionError(\"__BUG__HERE__\")\n+        self.assertEqual(str(signature), expected_signature)\n\\ No newline at end of file\n",
  "num_sent_chars": 2436039,
  "num_received_chars": 93846,
  "elapsed_time": 815.1997134685516,
  "lint_repair_count": 22,
  "test_generation_attempts": 0,
  "code_generation_attempts": 18,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 2,
  "appmap_data_test_status": "PASSED",
  "appmap_data_file_count": 1,
  "appmap_data_context_size": null
}