{
  "instance_id": "django__django-12419",
  "edit_test_file": "tests/middleware/test_security.py",
  "code_patch": "diff --git a/django/core/checks/security/base.py b/django/core/checks/security/base.py\nindex b69c2a1..60fbdfd 100644\n--- a/django/core/checks/security/base.py\n+++ b/django/core/checks/security/base.py\n@@ -213,13 +213,14 @@ def check_allowed_hosts(app_configs, **kwargs):\n @register(Tags.security, deploy=True)\n def check_referrer_policy(app_configs, **kwargs):\n     if _security_middleware():\n-        if settings.SECURE_REFERRER_POLICY is None:\n+        referrer_policy = settings.SECURE_REFERRER_POLICY or 'same-origin'\n+        if referrer_policy is None:\n             return [W022]\n         # Support a comma-separated string or iterable of values to allow fallback.\n-        if isinstance(settings.SECURE_REFERRER_POLICY, str):\n-            values = {v.strip() for v in settings.SECURE_REFERRER_POLICY.split(',')}\n+        if isinstance(referrer_policy, str):\n+            values = {v.strip() for v in referrer_policy.split(',')}\n         else:\n-            values = set(settings.SECURE_REFERRER_POLICY)\n+            values = set(referrer_policy)\n         if not values <= REFERRER_POLICY_VALUES:\n             return [E023]\n     return []\n\ndiff --git a/django/middleware/security.py b/django/middleware/security.py\nindex c0877b3..74fdd59 100644\n--- a/django/middleware/security.py\n+++ b/django/middleware/security.py\n@@ -15,7 +15,7 @@ class SecurityMiddleware(MiddlewareMixin):\n         self.redirect = settings.SECURE_SSL_REDIRECT\n         self.redirect_host = settings.SECURE_SSL_HOST\n         self.redirect_exempt = [re.compile(r) for r in settings.SECURE_REDIRECT_EXEMPT]\n-        self.referrer_policy = settings.SECURE_REFERRER_POLICY\n+        self.referrer_policy = settings.SECURE_REFERRER_POLICY or 'same-origin'\n         self.get_response = get_response\n \n     def process_request(self, request):\n",
  "test_patch": "diff --git a/tests/middleware/test_referrer_policy.py b/tests/middleware/test_referrer_policy.py\nnew file mode 100644\nindex 0000000..2454634\n--- /dev/null\n+++ b/tests/middleware/test_referrer_policy.py\n@@ -0,0 +1,25 @@\n+from django.http import HttpResponse\n+from django.test import RequestFactory, SimpleTestCase\n+from django.test.utils import override_settings\n+from django.middleware.security import SecurityMiddleware\n+\n+class TestDefaultReferrerPolicy(SimpleTestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+\n+    def process_response(self, headers=None):\n+        request = self.factory.get('/')\n+        response = HttpResponse()\n+        if headers:\n+            for key, value in headers.items():\n+                response[key] = value\n+        middleware = SecurityMiddleware(lambda req: response)\n+        return middleware(request)\n+\n+    @override_settings(MIDDLEWARE=['django.middleware.security.SecurityMiddleware'])\n+    def test_default_referrer_policy(self):\n+        \"\"\"\n+        Test that the default Referrer-Policy is not set to 'same-origin'.\n+        \"\"\"\n+        response = self.process_response()\n+        self.assertNotEqual(response.get('Referrer-Policy'), 'same-origin')\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/middleware/test_referrer_policy_inverted.py b/tests/middleware/test_referrer_policy_inverted.py\nnew file mode 100644\nindex 0000000..f184c3e\n--- /dev/null\n+++ b/tests/middleware/test_referrer_policy_inverted.py\n@@ -0,0 +1,25 @@\n+from django.http import HttpResponse\n+from django.test import RequestFactory, SimpleTestCase\n+from django.test.utils import override_settings\n+from django.middleware.security import SecurityMiddleware\n+\n+class TestDefaultReferrerPolicy(SimpleTestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+\n+    def process_response(self, headers=None):\n+        request = self.factory.get('/')\n+        response = HttpResponse()\n+        if headers:\n+            for key, value in headers.items():\n+                response[key] = value\n+        middleware = SecurityMiddleware(lambda req: response)\n+        return middleware(request)\n+\n+    @override_settings(MIDDLEWARE=['django.middleware.security.SecurityMiddleware'])\n+    def test_default_referrer_policy(self):\n+        \"\"\"\n+        Test that the default Referrer-Policy is set to 'same-origin'.\n+        \"\"\"\n+        response = self.process_response()\n+        self.assertEqual(response.get('Referrer-Policy'), 'same-origin', \"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1173741,
  "num_received_chars": 51337,
  "elapsed_time": 425.25989818573,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 18,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}