{
  "instance_id": "django__django-13417",
  "edit_test_file": "tests/backends/postgresql/test_operations.py",
  "code_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 85cd831..ccf9bae 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1225,6 +1225,9 @@ class QuerySet:\n         if self.query.extra_order_by or self.query.order_by:\n             return True\n         elif self.query.default_ordering and self.query.get_meta().ordering:\n+            # Check if the query has a GROUP BY clause without an ORDER BY clause\n+            if self.query.group_by and not self.query.order_by:\n+                return False\n             return True\n         else:\n             return False\n",
  "test_patch": "diff --git a/tests/backends/postgresql/test_ordered_property.py b/tests/backends/postgresql/test_ordered_property.py\nnew file mode 100644\nindex 0000000..860e7cf\n--- /dev/null\n+++ b/tests/backends/postgresql/test_ordered_property.py\n@@ -0,0 +1,22 @@\n+from django.db import models\n+from django.test import TestCase\n+from django.db.models import Count\n+\n+class Foo(models.Model):\n+    uuid = models.CharField(max_length=36)\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        ordering = ['name']\n+\n+class OrderedPropertyTestCase(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        Foo.objects.create(uuid='123e4567-e89b-12d3-a456-426614174000', name='Alice')\n+        Foo.objects.create(uuid='123e4567-e89b-12d3-a456-426614174001', name='Bob')\n+\n+    def test_ordered_property_with_group_by(self):\n+        qs = Foo.objects.annotate(Count(\"pk\")).all()\n+        # The issue is that qs.ordered should be False, but it is True\n+        self.assertTrue(qs.ordered)\n+        self.assertTrue(qs.query.default_ordering)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/backends/postgresql/test_ordered_property_inverted.py b/tests/backends/postgresql/test_ordered_property_inverted.py\nnew file mode 100644\nindex 0000000..95a42c1\n--- /dev/null\n+++ b/tests/backends/postgresql/test_ordered_property_inverted.py\n@@ -0,0 +1,24 @@\n+from django.db import models\n+from django.test import TestCase\n+from django.db.models import Count\n+\n+class Foo(models.Model):\n+    uuid = models.CharField(max_length=36)\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        ordering = ['name']\n+\n+class OrderedPropertyTestCase(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        Foo.objects.create(uuid='123e4567-e89b-12d3-a456-426614174000', name='Alice')\n+        Foo.objects.create(uuid='123e4567-e89b-12d3-a456-426614174001', name='Bob')\n+\n+    def test_ordered_property_with_group_by(self):\n+        qs = Foo.objects.annotate(Count(\"pk\")).all()\n+        # The issue is that qs.ordered should be False, but it is True\n+        if qs.ordered:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        self.assertFalse(qs.ordered)\n+        self.assertFalse(qs.query.default_ordering)\n\\ No newline at end of file\n",
  "num_sent_chars": 2566820,
  "num_received_chars": 103081,
  "elapsed_time": 896.902791261673,
  "lint_repair_count": 11,
  "test_generation_attempts": 0,
  "code_generation_attempts": 18,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}