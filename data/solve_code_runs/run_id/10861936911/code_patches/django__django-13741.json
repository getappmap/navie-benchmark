{
  "instance_id": "django__django-13741",
  "edit_test_file": "tests/forms_tests/field_tests/test_base.py",
  "code_patch": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py\nindex b9eb333..49b728f 100644\n--- a/django/contrib/auth/forms.py\n+++ b/django/contrib/auth/forms.py\n@@ -56,6 +56,7 @@ class ReadOnlyPasswordHashField(forms.Field):\n \n     def __init__(self, *args, **kwargs):\n         kwargs.setdefault(\"required\", False)\n+        kwargs.setdefault(\"disabled\", True)  # Set the field as disabled by default\n         super().__init__(*args, **kwargs)\n \n     def bound_data(self, data, initial):\n",
  "test_patch": "diff --git a/tests/forms_tests/field_tests/test_readonlypasswordhashfield.py b/tests/forms_tests/field_tests/test_readonlypasswordhashfield.py\nnew file mode 100644\nindex 0000000..ecac6df\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_readonlypasswordhashfield.py\n@@ -0,0 +1,11 @@\n+from django.test import SimpleTestCase\n+from django.contrib.auth.forms import ReadOnlyPasswordHashField\n+from django.forms import Form\n+\n+class ReadOnlyPasswordHashFieldTest(SimpleTestCase):\n+    def test_readonlypasswordhashfield_disabled(self):\n+        class TestForm(Form):\n+            password = ReadOnlyPasswordHashField()\n+\n+        form = TestForm(initial={'password': 'initial_password'})\n+        self.assertFalse(form.fields['password'].disabled)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/forms_tests/field_tests/test_readonlypasswordhashfield_inverted.py b/tests/forms_tests/field_tests/test_readonlypasswordhashfield_inverted.py\nnew file mode 100644\nindex 0000000..ffd37f6\n--- /dev/null\n+++ b/tests/forms_tests/field_tests/test_readonlypasswordhashfield_inverted.py\n@@ -0,0 +1,13 @@\n+from django.test import SimpleTestCase\n+from django.contrib.auth.forms import ReadOnlyPasswordHashField\n+from django.forms import Form\n+\n+class ReadOnlyPasswordHashFieldTest(SimpleTestCase):\n+    def test_readonlypasswordhashfield_disabled(self):\n+        class TestForm(Form):\n+            password = ReadOnlyPasswordHashField()\n+\n+        form = TestForm(initial={'password': 'initial_password'})\n+        # The test should now fail if the 'disabled' property is not set to True\n+        if not form.fields['password'].disabled:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 148998,
  "num_received_chars": 4635,
  "elapsed_time": 32.46918439865112,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}