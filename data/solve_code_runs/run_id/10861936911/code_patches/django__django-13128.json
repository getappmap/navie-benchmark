{
  "instance_id": "django__django-13128",
  "edit_test_file": "tests/backends/base/test_operations.py",
  "code_patch": "diff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py\nindex 1f77b31..2dee9b8 100644\n--- a/django/db/backends/sqlite3/operations.py\n+++ b/django/db/backends/sqlite3/operations.py\n@@ -350,7 +350,9 @@ class DatabaseOperations(BaseDatabaseOperations):\n         params = (*lhs_params, *rhs_params)\n         if internal_type == 'TimeField':\n             return 'django_time_diff(%s, %s)' % (lhs_sql, rhs_sql), params\n-        return 'django_timestamp_diff(%s, %s)' % (lhs_sql, rhs_sql), params\n+        elif internal_type == 'DateTimeField':\n+            return 'django_timestamp_diff(%s, %s)' % (lhs_sql, rhs_sql), params\n+        return super().subtract_temporals(internal_type, lhs, rhs)\n \n     def insert_statement(self, ignore_conflicts=False):\n         return 'INSERT OR IGNORE INTO' if ignore_conflicts else super().insert_statement(ignore_conflicts)\n",
  "test_patch": "diff --git a/tests/backends/base/test_temporal_subtraction.py b/tests/backends/base/test_temporal_subtraction.py\nnew file mode 100644\nindex 0000000..3a39a2a\n--- /dev/null\n+++ b/tests/backends/base/test_temporal_subtraction.py\n@@ -0,0 +1,16 @@\n+from django.db import models\n+from django.db.models import F, Value, DurationField\n+from django.core.exceptions import FieldError\n+from django.test import TestCase\n+import datetime\n+\n+class TemporalSubtractionTestCase(TestCase):\n+    def test_temporal_subtraction_without_expression_wrapper(self):\n+        class Experiment(models.Model):\n+            start = models.DateTimeField()\n+            end = models.DateTimeField()\n+\n+        with self.assertRaises(FieldError):\n+            Experiment.objects.annotate(\n+                delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField())\n+            ).first()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/backends/base/test_temporal_subtraction_inverted.py b/tests/backends/base/test_temporal_subtraction_inverted.py\nnew file mode 100644\nindex 0000000..7cd25b1\n--- /dev/null\n+++ b/tests/backends/base/test_temporal_subtraction_inverted.py\n@@ -0,0 +1,18 @@\n+from django.db import models\n+from django.db.models import F, Value, DurationField\n+from django.core.exceptions import FieldError\n+from django.test import TestCase\n+import datetime\n+\n+class TemporalSubtractionTestCase(TestCase):\n+    def test_temporal_subtraction_without_expression_wrapper(self):\n+        class Experiment(models.Model):\n+            start = models.DateTimeField()\n+            end = models.DateTimeField()\n+\n+        try:\n+            Experiment.objects.annotate(\n+                delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField())\n+            ).first()\n+        except FieldError:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1807174,
  "num_received_chars": 79320,
  "elapsed_time": 796.855785369873,
  "lint_repair_count": 10,
  "test_generation_attempts": 0,
  "code_generation_attempts": 18,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}