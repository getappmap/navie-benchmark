{
  "instance_id": "sympy__sympy-14248",
  "edit_test_file": "sympy/printing/tests/test_str.py",
  "code_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex db24f4c..76ae5aa 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -1439,7 +1439,7 @@ def pretty_negative(pform, index):\n         for i, term in enumerate(terms):\n             if term.is_Mul and _coeff_isneg(term):\n                 coeff, other = term.as_coeff_mul(rational=False)\n-                pform = self._print(Mul(-coeff, *other, evaluate=False))\n+                pform = self._print(Mul(*other, evaluate=False))\n                 pforms.append(pretty_negative(pform, i))\n             elif term.is_Rational and term.q > 1:\n                 pforms.append(None)\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_matrixsymbol_print.py b/sympy/printing/tests/test_matrixsymbol_print.py\nnew file mode 100644\nindex 0000000..3eb17fa\n--- /dev/null\n+++ b/sympy/printing/tests/test_matrixsymbol_print.py\n@@ -0,0 +1,8 @@\n+from sympy import MatrixSymbol\n+from sympy.printing import sstr\n+\n+def test_matrixsymbol_difference_print():\n+    A = MatrixSymbol('A', 2, 2)\n+    B = MatrixSymbol('B', 2, 2)\n+    expr = A - A*B - B\n+    assert sstr(expr) == \"(-1)*B + (-1)*A*B + A\"\n",
  "test_inverted_patch": "diff --git a/sympy/printing/tests/test_matrixsymbol_print_inverted.py b/sympy/printing/tests/test_matrixsymbol_print_inverted.py\nnew file mode 100644\nindex 0000000..a743c8c\n--- /dev/null\n+++ b/sympy/printing/tests/test_matrixsymbol_print_inverted.py\n@@ -0,0 +1,8 @@\n+from sympy import MatrixSymbol\n+from sympy.printing import sstr\n+\n+def test_matrixsymbol_difference_print():\n+    A = MatrixSymbol('A', 2, 2)\n+    B = MatrixSymbol('B', 2, 2)\n+    expr = A - A*B - B\n+    assert sstr(expr) == \"A - A*B - B\", \"__BUG__HERE__\"\n",
  "num_sent_chars": 3961632,
  "num_received_chars": 70141,
  "elapsed_time": 743.4459130764008,
  "lint_repair_count": 3,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}