{
  "instance_id": "scikit-learn__scikit-learn-14983",
  "edit_test_file": "sklearn/model_selection/tests/test_split.py",
  "code_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex c49a3ce..09afe7d 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1103,6 +1103,9 @@ class _RepeatedSplits(metaclass=ABCMeta):\n         self.random_state = random_state\n         self.cvargs = cvargs\n \n+    def __repr__(self):\n+        return _build_repr(self)\n+\n     def split(self, X, y=None, groups=None):\n         \"\"\"Generates indices to split data into training and test set.\n \n",
  "test_patch": "diff --git a/sklearn/model_selection/tests/test_kfold_repr.py b/sklearn/model_selection/tests/test_kfold_repr.py\nnew file mode 100644\nindex 0000000..7825ee3\n--- /dev/null\n+++ b/sklearn/model_selection/tests/test_kfold_repr.py\n@@ -0,0 +1,20 @@\n+import unittest\n+from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold\n+\n+class TestKFoldRepr(unittest.TestCase):\n+    def test_repeated_kfold_repr(self):\n+        rkf = RepeatedKFold()\n+        expected_repr = \"RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)\"\n+        actual_repr = repr(rkf)\n+        self.assertNotEqual(actual_repr, expected_repr, \n+                            f\"Expected repr: {expected_repr}, but got: {actual_repr}\")\n+\n+    def test_repeated_stratified_kfold_repr(self):\n+        rskf = RepeatedStratifiedKFold()\n+        expected_repr = \"RepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=None)\"\n+        actual_repr = repr(rskf)\n+        self.assertNotEqual(actual_repr, expected_repr, \n+                            f\"Expected repr: {expected_repr}, but got: {actual_repr}\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n",
  "test_inverted_patch": "diff --git a/sklearn/model_selection/tests/test_kfold_repr_inverted.py b/sklearn/model_selection/tests/test_kfold_repr_inverted.py\nnew file mode 100644\nindex 0000000..3b18d3e\n--- /dev/null\n+++ b/sklearn/model_selection/tests/test_kfold_repr_inverted.py\n@@ -0,0 +1,20 @@\n+import unittest\n+from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold\n+\n+class TestKFoldRepr(unittest.TestCase):\n+    def test_repeated_kfold_repr(self):\n+        rkf = RepeatedKFold()\n+        expected_repr = \"RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)\"\n+        actual_repr = repr(rkf)\n+        self.assertEqual(actual_repr, expected_repr, \n+                         \"__BUG__HERE__\")\n+\n+    def test_repeated_stratified_kfold_repr(self):\n+        rskf = RepeatedStratifiedKFold()\n+        expected_repr = \"RepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=None)\"\n+        actual_repr = repr(rskf)\n+        self.assertEqual(actual_repr, expected_repr, \n+                         \"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n",
  "num_sent_chars": 3830889,
  "num_received_chars": 65842,
  "elapsed_time": 720.2042047977448,
  "lint_repair_count": 2,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}