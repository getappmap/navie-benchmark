{
  "instance_id": "matplotlib__matplotlib-25332",
  "edit_test_file": "lib/matplotlib/tests/test_pickle.py",
  "code_patch": "diff --git a/lib/matplotlib/cbook.py b/lib/matplotlib/cbook.py\nindex c9699b2..f3fdb31 100644\n--- a/lib/matplotlib/cbook.py\n+++ b/lib/matplotlib/cbook.py\n@@ -788,6 +788,24 @@ class Grouper:\n     def __init__(self, init=()):\n         self._mapping = {weakref.ref(x): [weakref.ref(x)] for x in init}\n \n+    def __getstate__(self):\n+        # Convert weak references to strong references for pickling\n+        # Filter out dead references and store only live objects\n+        return {\n+            '_mapping': {\n+                k(): [x() for x in v if x() is not None]\n+                for k, v in self._mapping.items()\n+                if k() is not None\n+            }\n+        }\n+\n+    def __setstate__(self, state):\n+        # Reconstruct weak references from unpickled state\n+        self._mapping = {\n+            weakref.ref(k): [weakref.ref(x) for x in v]\n+            for k, v in state['_mapping'].items()\n+        }\n+\n     def __contains__(self, item):\n         return weakref.ref(item) in self._mapping\n \n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_align_labels_pickle.py b/lib/matplotlib/tests/test_align_labels_pickle.py\nnew file mode 100644\nindex 0000000..de99b0a\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_align_labels_pickle.py\n@@ -0,0 +1,20 @@\n+import matplotlib.pyplot as plt\n+import pickle\n+import pytest\n+\n+def test_pickle_figure_with_aligned_labels():\n+    fig = plt.figure()\n+    ax1 = fig.add_subplot(211)\n+    ax2 = fig.add_subplot(212)\n+    time = [0, 1, 2, 3, 4]\n+    speed = [40000, 4300, 4500, 4700, 4800]\n+    acc = [10, 11, 12, 13, 14]\n+    ax1.plot(time, speed)\n+    ax1.set_ylabel('speed')\n+    ax2.plot(time, acc)\n+    ax2.set_ylabel('acc')\n+\n+    fig.align_labels()\n+\n+    with pytest.raises(TypeError, match=\"cannot pickle 'weakref.ReferenceType' object\"):\n+        pickle.dumps(fig)\n",
  "test_inverted_patch": "diff --git a/lib/matplotlib/tests/test_align_labels_pickle_inverted.py b/lib/matplotlib/tests/test_align_labels_pickle_inverted.py\nnew file mode 100644\nindex 0000000..3ff62db\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_align_labels_pickle_inverted.py\n@@ -0,0 +1,23 @@\n+import matplotlib.pyplot as plt\n+import pickle\n+import pytest\n+\n+def test_pickle_figure_with_aligned_labels():\n+    fig = plt.figure()\n+    ax1 = fig.add_subplot(211)\n+    ax2 = fig.add_subplot(212)\n+    time = [0, 1, 2, 3, 4]\n+    speed = [40000, 4300, 4500, 4700, 4800]\n+    acc = [10, 11, 12, 13, 14]\n+    ax1.plot(time, speed)\n+    ax1.set_ylabel('speed')\n+    ax2.plot(time, acc)\n+    ax2.set_ylabel('acc')\n+\n+    fig.align_labels()\n+\n+    # The test should now fail when the bug is observed\n+    try:\n+        pickle.dumps(fig)\n+    except TypeError:\n+        raise AssertionError(\"__BUG__HERE__\")\n",
  "num_sent_chars": 3788793,
  "num_received_chars": 70206,
  "elapsed_time": 907.5328633785248,
  "lint_repair_count": 2,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}