{
  "instance_id": "astropy__astropy-7336",
  "edit_test_file": "astropy/units/tests/test_quantity_decorator.py",
  "code_patch": "diff --git a/astropy/units/decorators.py b/astropy/units/decorators.py\nindex 8bece5a..2dece7b 100644\n--- a/astropy/units/decorators.py\n+++ b/astropy/units/decorators.py\n@@ -221,6 +221,10 @@ class QuantityInput:\n             with add_enabled_equivalencies(self.equivalencies):\n                 return_ = wrapped_function(*func_args, **func_kwargs)\n             if wrapped_signature.return_annotation is not inspect.Signature.empty:\n+                # Handle None return annotation specially\n+                if wrapped_signature.return_annotation is None:\n+                    return return_\n+                # Only attempt conversion for non-None annotations\n                 return return_.to(wrapped_signature.return_annotation)\n             else:\n                 return return_\n",
  "test_patch": "diff --git a/astropy/units/tests/test_quantity_constructor_return_type.py b/astropy/units/tests/test_quantity_constructor_return_type.py\nnew file mode 100644\nindex 0000000..cd7841b\n--- /dev/null\n+++ b/astropy/units/tests/test_quantity_constructor_return_type.py\n@@ -0,0 +1,19 @@\n+# -*- coding: utf-8 -*-\n+# Licensed under a 3-clause BSD style license - see LICENSE.rst\n+\n+import pytest\n+from ... import units as u\n+\n+\n+def test_constructor_return_type():\n+    \"\"\"Test that quantity_input decorator handles constructor return type annotation.\"\"\"\n+    \n+    class TestClass:\n+        @u.quantity_input\n+        def __init__(self, voltage: u.V) -> None:\n+            pass\n+\n+    with pytest.raises(AttributeError) as exc:\n+        test_obj = TestClass(1. * u.V)\n+\n+    assert str(exc.value) == \"'NoneType' object has no attribute 'to'\"\n",
  "test_inverted_patch": null,
  "num_sent_chars": 3293266,
  "num_received_chars": 42948,
  "elapsed_time": 703.56471991539,
  "lint_repair_count": 0,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}