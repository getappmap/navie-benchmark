{
  "instance_id": "django__django-11477",
  "edit_test_file": "tests/i18n/patterns/tests.py",
  "code_patch": "diff --git a/django/urls/base.py b/django/urls/base.py\nindex 0e1c3d9..4a42901 100644\n--- a/django/urls/base.py\n+++ b/django/urls/base.py\n@@ -169,10 +169,18 @@ def translate_url(url, lang_code):\n     except Resolver404:\n         pass\n     else:\n+        # Get the view name to reverse\n         to_be_reversed = \"%s:%s\" % (match.namespace, match.url_name) if match.namespace else match.url_name\n+        \n+        # Filter out kwargs that weren't in the original URL\n+        kwargs = {}\n+        if match.kwargs:\n+            # Only include kwargs that had values in the original URL\n+            kwargs = {k: v for k, v in match.kwargs.items() if v is not None}\n+            \n         with override(lang_code):\n             try:\n-                url = reverse(to_be_reversed, args=match.args, kwargs=match.kwargs)\n+                url = reverse(to_be_reversed, args=match.args, kwargs=kwargs)\n             except NoReverseMatch:\n                 pass\n             else:\n",
  "test_patch": "diff --git a/tests/i18n/patterns/translate_url_optional_groups_test.py b/tests/i18n/patterns/translate_url_optional_groups_test.py\nnew file mode 100644\nindex 0000000..991d011\n--- /dev/null\n+++ b/tests/i18n/patterns/translate_url_optional_groups_test.py\n@@ -0,0 +1,37 @@\n+import os\n+\n+from django.conf import settings\n+from django.test import SimpleTestCase, override_settings\n+from django.urls import reverse, translate_url\n+from django.utils import translation\n+\n+\n+@override_settings(\n+    USE_I18N=True,\n+    LOCALE_PATHS=[\n+        os.path.join(os.path.dirname(__file__), 'locale'),\n+    ],\n+    LANGUAGE_CODE='en-us',\n+    LANGUAGES=[\n+        ('nl', 'Dutch'),\n+        ('en', 'English'),\n+        ('pt-br', 'Brazilian Portuguese'),\n+    ],\n+    ROOT_URLCONF='i18n.patterns.urls.default',\n+)\n+class TranslateUrlOptionalGroupsTest(SimpleTestCase):\n+    \"\"\"\n+    Test case to reproduce the issue where translate_url() creates an incorrect\n+    URL when optional named groups are missing in the URL pattern.\n+    \"\"\"\n+\n+    def test_translate_url_with_missing_optional_named_groups(self):\n+        # Assuming there is a URL pattern with an optional named group\n+        # and the 'translate_url' function is expected to handle it.\n+        with translation.override('en'):\n+            original_url = '/en/optional-group/'\n+            translated_url = translate_url(original_url, 'nl')\n+            # The issue is that the translated URL is incorrect when optional groups are missing.\n+            # We expect the incorrect behavior to be reproduced here.\n+            self.assertNotEqual(translated_url, '/nl/optional-group/')\n+            # The test should pass when the incorrect output is observed.\n",
  "test_inverted_patch": "diff --git a/tests/i18n/patterns/translate_url_optional_groups_test_inverted.py b/tests/i18n/patterns/translate_url_optional_groups_test_inverted.py\nnew file mode 100644\nindex 0000000..6809245\n--- /dev/null\n+++ b/tests/i18n/patterns/translate_url_optional_groups_test_inverted.py\n@@ -0,0 +1,38 @@\n+import os\n+\n+from django.conf import settings\n+from django.test import SimpleTestCase, override_settings\n+from django.urls import reverse, translate_url\n+from django.utils import translation\n+\n+\n+@override_settings(\n+    USE_I18N=True,\n+    LOCALE_PATHS=[\n+        os.path.join(os.path.dirname(__file__), 'locale'),\n+    ],\n+    LANGUAGE_CODE='en-us',\n+    LANGUAGES=[\n+        ('nl', 'Dutch'),\n+        ('en', 'English'),\n+        ('pt-br', 'Brazilian Portuguese'),\n+    ],\n+    ROOT_URLCONF='i18n.patterns.urls.default',\n+)\n+class TranslateUrlOptionalGroupsTest(SimpleTestCase):\n+    \"\"\"\n+    Test case to reproduce the issue where translate_url() creates an incorrect\n+    URL when optional named groups are missing in the URL pattern.\n+    \"\"\"\n+\n+    def test_translate_url_with_missing_optional_named_groups(self):\n+        # Assuming there is a URL pattern with an optional named group\n+        # and the 'translate_url' function is expected to handle it.\n+        with translation.override('en'):\n+            original_url = '/en/optional-group/'\n+            translated_url = translate_url(original_url, 'nl')\n+            # The issue is that the translated URL is incorrect when optional groups are missing.\n+            # We expect the incorrect behavior to be reproduced here.\n+            if translated_url != '/nl/optional-group/':\n+                raise AssertionError(\"__BUG__HERE__\")\n+            # The test should fail when the incorrect output is observed.\n",
  "num_sent_chars": 3118218,
  "num_received_chars": 60143,
  "elapsed_time": 618.3074672222137,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}