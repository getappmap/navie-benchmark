{
  "instance_id": "pydata__xarray-3677",
  "edit_test_file": "xarray/tests/test_merge.py",
  "code_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex 10c7804..9968899 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -385,6 +385,8 @@ def coerce_pandas_values(objects: Iterable[\"CoercibleMapping\"]) -> List[\"Dataset\n \n     out = []\n     for obj in objects:\n+        if isinstance(obj, DataArray):\n+            out.append(obj.to_dataset())\n         if isinstance(obj, Dataset):\n             variables: \"DatasetLike\" = obj\n         else:\n@@ -809,6 +811,12 @@ def dataset_merge_method(\n     # method due for backwards compatibility\n     # TODO: consider deprecating it?\n \n+    from .dataarray import DataArray\n+\n+    # Convert DataArray to Dataset if needed\n+    if isinstance(other, DataArray):\n+        other = other.to_dataset()\n+\n     if isinstance(overwrite_vars, Iterable) and not isinstance(overwrite_vars, str):\n         overwrite_vars = set(overwrite_vars)\n     else:\n",
  "test_patch": "diff --git a/xarray/tests/test_dataset_merge.py b/xarray/tests/test_dataset_merge.py\nnew file mode 100644\nindex 0000000..f14d386\n--- /dev/null\n+++ b/xarray/tests/test_dataset_merge.py\n@@ -0,0 +1,14 @@\n+import pytest\n+import xarray as xr\n+\n+def test_merge_dataarray_into_dataset():\n+    ds = xr.Dataset({'a': 0})\n+    da = xr.DataArray(1, name='b')\n+\n+    # This should work fine\n+    expected = xr.merge([ds, da])\n+    assert expected.identical(xr.Dataset({'a': 0, 'b': 1}))\n+\n+    # This should raise an AttributeError\n+    with pytest.raises(AttributeError, match=\"'DataArray' object has no attribute 'items'\"):\n+        ds.merge(da)\n",
  "test_inverted_patch": "diff --git a/xarray/tests/test_dataset_merge_inverted.py b/xarray/tests/test_dataset_merge_inverted.py\nnew file mode 100644\nindex 0000000..948022b\n--- /dev/null\n+++ b/xarray/tests/test_dataset_merge_inverted.py\n@@ -0,0 +1,16 @@\n+import pytest\n+import xarray as xr\n+\n+def test_merge_dataarray_into_dataset():\n+    ds = xr.Dataset({'a': 0})\n+    da = xr.DataArray(1, name='b')\n+\n+    # This should work fine\n+    expected = xr.merge([ds, da])\n+    assert expected.identical(xr.Dataset({'a': 0, 'b': 1}))\n+\n+    # This should raise an error indicating the presence of the bug\n+    try:\n+        ds.merge(da)\n+    except AttributeError:\n+        raise AssertionError(\"__BUG__HERE__\")\n",
  "num_sent_chars": 781716,
  "num_received_chars": 9815,
  "elapsed_time": 132.22262907028198,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}