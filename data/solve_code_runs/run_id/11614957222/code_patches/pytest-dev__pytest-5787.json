{
  "instance_id": "pytest-dev__pytest-5787",
  "edit_test_file": "testing/python/raises.py",
  "code_patch": "diff --git a/src/_pytest/_code/code.py b/src/_pytest/_code/code.py\nindex a0f4d15..6720d2d 100644\n--- a/src/_pytest/_code/code.py\n+++ b/src/_pytest/_code/code.py\n@@ -833,7 +833,7 @@ class FormattedExcinfo:\n             if e.__cause__ is not None and self.chain:\n                 e = e.__cause__\n                 excinfo = (\n-                    ExceptionInfo((type(e), e, e.__traceback__))\n+                    ExceptionInfo.from_exc_info((type(e), e, e.__traceback__))\n                     if e.__traceback__\n                     else None\n                 )\n@@ -843,7 +843,7 @@ class FormattedExcinfo:\n             ):\n                 e = e.__context__\n                 excinfo = (\n-                    ExceptionInfo((type(e), e, e.__traceback__))\n+                    ExceptionInfo.from_exc_info((type(e), e, e.__traceback__))\n                     if e.__traceback__\n                     else None\n                 )\n@@ -885,12 +885,12 @@ class ExceptionChainRepr(ExceptionRepr):\n         super().__init__()\n         self.chain = chain\n         # reprcrash and reprtraceback of the outermost (the newest) exception\n-        # in the chain\n-        self.reprtraceback = chain[-1][0]\n+        # in the chain (first in the chain list)\n+        self.reprtraceback = chain[0][0]\n         self.reprcrash = chain[-1][1]\n \n     def toterminal(self, tw):\n-        for element in self.chain:\n+        for element in reversed(self.chain):\n             element[0].toterminal(tw)\n             if element[2] is not None:\n                 tw.line(\"\")\n",
  "test_patch": "diff --git a/testing/python/chained_exception_serialization_test.py b/testing/python/chained_exception_serialization_test.py\nnew file mode 100644\nindex 0000000..32110fb\n--- /dev/null\n+++ b/testing/python/chained_exception_serialization_test.py\n@@ -0,0 +1,23 @@\n+import pytest\n+\n+def test_chained_exception_with_from():\n+    with pytest.raises(ValueError) as excinfo:\n+        try:\n+            try:\n+                raise ValueError(11)\n+            except Exception as e1:\n+                raise ValueError(12) from e1\n+        except Exception as e2:\n+            raise ValueError(13) from e2\n+    assert str(excinfo.value) == \"13\"\n+\n+def test_chained_exception_without_from():\n+    with pytest.raises(ValueError) as excinfo:\n+        try:\n+            try:\n+                raise ValueError(21)\n+            except Exception:\n+                raise ValueError(22)\n+        except Exception:\n+            raise ValueError(23)\n+    assert str(excinfo.value) == \"23\"\n",
  "test_inverted_patch": "diff --git a/testing/python/chained_exception_serialization_test_inverted.py b/testing/python/chained_exception_serialization_test_inverted.py\nnew file mode 100644\nindex 0000000..6a4150c\n--- /dev/null\n+++ b/testing/python/chained_exception_serialization_test_inverted.py\n@@ -0,0 +1,23 @@\n+import pytest\n+\n+def test_chained_exception_with_from():\n+    with pytest.raises(ValueError) as excinfo:\n+        try:\n+            try:\n+                raise ValueError(11)\n+            except Exception as e1:\n+                raise ValueError(12) from e1\n+        except Exception as e2:\n+            raise ValueError(13) from e2\n+    assert str(excinfo.value) == \"__BUG__HERE__\"\n+\n+def test_chained_exception_without_from():\n+    with pytest.raises(ValueError) as excinfo:\n+        try:\n+            try:\n+                raise ValueError(21)\n+            except Exception:\n+                raise ValueError(22)\n+        except Exception:\n+            raise ValueError(23)\n+    assert str(excinfo.value) == \"__BUG__HERE__\"\n",
  "num_sent_chars": 3398656,
  "num_received_chars": 82634,
  "elapsed_time": 668.0415828227997,
  "lint_repair_count": 4,
  "test_generation_attempts": 0,
  "code_generation_attempts": 6,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}