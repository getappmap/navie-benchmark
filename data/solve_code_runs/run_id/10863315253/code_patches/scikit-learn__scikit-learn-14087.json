{
  "instance_id": "scikit-learn__scikit-learn-14087",
  "edit_test_file": "sklearn/linear_model/tests/test_coordinate_descent.py",
  "code_patch": "diff --git a/examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py b/examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py\nindex 49a51e2..0f0e6f0 100644\n--- a/examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py\n+++ b/examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py\n@@ -81,6 +81,7 @@ for model in models:\n                                 fit_intercept=True,\n                                 max_iter=this_max_iter,\n                                 random_state=42,\n+                                refit=False  # Ensure refit is set to False\n                                 )\n         t1 = timeit.default_timer()\n         lr.fit(X_train, y_train)\n",
  "test_patch": "diff --git a/sklearn/linear_model/tests/test_logistic_regression_cv_index_error.py b/sklearn/linear_model/tests/test_logistic_regression_cv_index_error.py\nnew file mode 100644\nindex 0000000..27a6bf9\n--- /dev/null\n+++ b/sklearn/linear_model/tests/test_logistic_regression_cv_index_error.py\n@@ -0,0 +1,22 @@\n+import unittest\n+import numpy as np\n+from sklearn.linear_model import LogisticRegressionCV\n+\n+class TestLogisticRegressionCVIndexError(unittest.TestCase):\n+    def test_logistic_regression_cv_index_error(self):\n+        np.random.seed(29)\n+        X = np.random.normal(size=(1000, 3))\n+        beta = np.random.normal(size=3)\n+        intercept = np.random.normal(size=None)\n+        y = np.sign(intercept + X @ beta)\n+\n+        with self.assertRaises(IndexError):\n+            LogisticRegressionCV(\n+                cv=5,\n+                solver='saga',\n+                tol=1e-2,\n+                refit=False\n+            ).fit(X, y)\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sklearn/linear_model/tests/test_logistic_regression_cv_index_error_inverted.py b/sklearn/linear_model/tests/test_logistic_regression_cv_index_error_inverted.py\nnew file mode 100644\nindex 0000000..7c50b30\n--- /dev/null\n+++ b/sklearn/linear_model/tests/test_logistic_regression_cv_index_error_inverted.py\n@@ -0,0 +1,24 @@\n+import unittest\n+import numpy as np\n+from sklearn.linear_model import LogisticRegressionCV\n+\n+class TestLogisticRegressionCVIndexError(unittest.TestCase):\n+    def test_logistic_regression_cv_index_error(self):\n+        np.random.seed(29)\n+        X = np.random.normal(size=(1000, 3))\n+        beta = np.random.normal(size=3)\n+        intercept = np.random.normal(size=None)\n+        y = np.sign(intercept + X @ beta)\n+\n+        try:\n+            LogisticRegressionCV(\n+                cv=5,\n+                solver='saga',\n+                tol=1e-2,\n+                refit=False\n+            ).fit(X, y)\n+        except IndexError:\n+            self.fail(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "num_sent_chars": 1311296,
  "num_received_chars": 47168,
  "elapsed_time": 357.49006843566895,
  "lint_repair_count": 6,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}