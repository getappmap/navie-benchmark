{
  "edit_test_file": "sympy/utilities/tests/test_iterables.py",
  "test_patch": "diff --git a/sympy/utilities/tests/test_uniq_list_modification.py b/sympy/utilities/tests/test_uniq_list_modification.py\nnew file mode 100644\nindex 0000000..bca1a88\n--- /dev/null\n+++ b/sympy/utilities/tests/test_uniq_list_modification.py\n@@ -0,0 +1,19 @@\n+from sympy.utilities.iterables import uniq\n+\n+def test_uniq_list_modification():\n+    \"\"\"Test that uniq produces incorrect output when list is modified during iteration\"\"\"\n+    # Create input list with duplicates\n+    f = list('THISTLE')\n+    \n+    # Collect output while modifying list during iteration\n+    output = []\n+    for i in uniq(f):\n+        f.remove(i)  # Modify list during iteration\n+        output.append(i)\n+    \n+    # The output should be incorrect - missing some letters\n+    # Only 'T', 'I', 'L' appear instead of all unique letters\n+    assert output == ['T', 'I', 'L']\n+    \n+    # The original list should be modified\n+    assert f == ['H', 'S', 'T', 'E']\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/utilities/tests/test_uniq_list_modification_inverted.py b/sympy/utilities/tests/test_uniq_list_modification_inverted.py\nnew file mode 100644\nindex 0000000..8af4373\n--- /dev/null\n+++ b/sympy/utilities/tests/test_uniq_list_modification_inverted.py\n@@ -0,0 +1,20 @@\n+from sympy.utilities.iterables import uniq\n+\n+def test_uniq_list_modification():\n+    \"\"\"Test that uniq raises an error when list is modified during iteration\"\"\"\n+    # Create input list with duplicates\n+    f = list('THISTLE')\n+    \n+    try:\n+        # Attempt to collect output while modifying list during iteration\n+        output = []\n+        for i in uniq(f):\n+            f.remove(i)  # Modify list during iteration\n+            output.append(i)\n+            \n+        # If we get here without an exception, the bug is present\n+        raise AssertionError(\"__BUG__HERE__\")\n+        \n+    except RuntimeError:\n+        # This is the expected behavior - similar to dict/set modification during iteration\n+        pass\n\\ No newline at end of file\n"
}