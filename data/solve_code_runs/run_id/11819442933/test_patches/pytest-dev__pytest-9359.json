{
  "edit_test_file": "testing/test_assertrewrite.py",
  "test_patch": "diff --git a/testing/test_assertion_lineno.py b/testing/test_assertion_lineno.py\nnew file mode 100644\nindex 0000000..413c2ec\n--- /dev/null\n+++ b/testing/test_assertion_lineno.py\n@@ -0,0 +1,31 @@\n+import pytest\n+\n+def test_assertion_error_includes_decorator(pytester):\n+    \"\"\"Test that assertion error output includes decorator line in Python 3.9+.\"\"\"\n+    pytester.makepyfile(\n+        \"\"\"\n+        def t(foo):\n+            return foo\n+\n+        @t \n+        def outer():\n+            return 2\n+\n+        def test_right_statement():\n+            assert 1 == (3 + 2) * (6 + 9)\n+\n+            @t\n+            def inner():\n+                return 2\n+\n+            assert 2 == inner\n+        \"\"\"\n+    )\n+    result = pytester.runpytest()\n+    result.stdout.fnmatch_lines([\n+        \"    def test_right_statement():\",\n+        \">       assert 1 == (3 + 2) * (6 + 9)\",\n+        \"    \",\n+        \"        @t\",  # Extra decorator line that appears in Python 3.9+\n+        \"E       assert 1 == ((3 + 2) * (6 + 9))\"\n+    ])\n",
  "inverted_patch": null
}