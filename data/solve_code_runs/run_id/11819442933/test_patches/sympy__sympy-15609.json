{
  "edit_test_file": "sympy/matrices/expressions/tests/test_indexing.py",
  "test_patch": "diff --git a/sympy/matrices/expressions/tests/test_latex_printing.py b/sympy/matrices/expressions/tests/test_latex_printing.py\nnew file mode 100644\nindex 0000000..736b60a\n--- /dev/null\n+++ b/sympy/matrices/expressions/tests/test_latex_printing.py\n@@ -0,0 +1,11 @@\n+from sympy import (symbols, MatrixSymbol, latex)\n+\n+def test_latex_matrix_mul_indexing():\n+    i, j, k = symbols(\"i j k\")\n+    M = MatrixSymbol(\"M\", k, k)\n+    N = MatrixSymbol(\"N\", k, k)\n+    \n+    # Test that the incorrect LaTeX output with double subscript is produced\n+    expr = (M*N)[i, j]\n+    result = latex(expr)\n+    assert result == r\"\\sum_{i_{1}=0}^{k - 1} M_{i, _i_1} N_{_i_1, j}\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/matrices/expressions/tests/test_latex_printing_inverted.py b/sympy/matrices/expressions/tests/test_latex_printing_inverted.py\nnew file mode 100644\nindex 0000000..e0f49a4\n--- /dev/null\n+++ b/sympy/matrices/expressions/tests/test_latex_printing_inverted.py\n@@ -0,0 +1,17 @@\n+from sympy import (symbols, MatrixSymbol, latex)\n+\n+def test_latex_matrix_mul_indexing():\n+    i, j, k = symbols(\"i j k\")\n+    M = MatrixSymbol(\"M\", k, k)\n+    N = MatrixSymbol(\"N\", k, k)\n+    \n+    expr = (M*N)[i, j]\n+    result = latex(expr)\n+    \n+    # Check if the problematic double subscript pattern exists\n+    if \"_i_1\" in result:\n+        raise AssertionError(\"__BUG__HERE__\")\n+    \n+    # The correct LaTeX output should use proper subscript notation\n+    expected = r\"\\sum_{i_{1}=0}^{k - 1} M_{i,i_1} N_{i_1,j}\"\n+    assert result == expected\n\\ No newline at end of file\n"
}