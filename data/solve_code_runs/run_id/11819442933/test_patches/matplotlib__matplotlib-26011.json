{
  "edit_test_file": "lib/matplotlib/tests/test_axes.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_shared_axis_callbacks.py b/lib/matplotlib/tests/test_shared_axis_callbacks.py\nnew file mode 100644\nindex 0000000..e3dc278\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_shared_axis_callbacks.py\n@@ -0,0 +1,25 @@\n+import pytest\n+import matplotlib.pyplot as plt\n+\n+\n+def test_shared_axis_callbacks():\n+    # Setup\n+    fig, (ax1, ax2) = plt.subplots(2, 1, sharex=True)\n+    \n+    # Track number of times callback is called\n+    callback_count = 0\n+    def on_xlim_changed(event):\n+        nonlocal callback_count\n+        callback_count += 1\n+    \n+    # Register callback on second axis\n+    ax2.callbacks.connect('xlim_changed', on_xlim_changed)\n+    \n+    # Change limits on first axis\n+    ax1.set_xlim(0, 10)\n+    \n+    # Verify callback was not called\n+    assert callback_count == 0, \"xlim_changed callback was incorrectly emitted on shared axis\"\n+    \n+    # Verify the limits were actually changed\n+    assert ax2.get_xlim() == (0, 10), \"Limits were not properly shared between axes\"\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_shared_axis_callbacks_inverted.py b/lib/matplotlib/tests/test_shared_axis_callbacks_inverted.py\nnew file mode 100644\nindex 0000000..2b81016\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_shared_axis_callbacks_inverted.py\n@@ -0,0 +1,27 @@\n+import pytest\n+import matplotlib.pyplot as plt\n+\n+\n+def test_shared_axis_callbacks():\n+    # Setup\n+    fig, (ax1, ax2) = plt.subplots(2, 1, sharex=True)\n+    \n+    # Track number of times callback is called\n+    callback_count = 0\n+    def on_xlim_changed(event):\n+        nonlocal callback_count\n+        callback_count += 1\n+    \n+    # Register callback on second axis\n+    ax2.callbacks.connect('xlim_changed', on_xlim_changed)\n+    \n+    # Change limits on first axis\n+    ax1.set_xlim(0, 10)\n+    \n+    # The test should now FAIL when the bug is present\n+    # (when callback is not called on shared axis)\n+    if callback_count == 0:\n+        raise AssertionError(\"__BUG__HERE__\")\n+    \n+    # Verify the limits were actually changed\n+    assert ax2.get_xlim() == (0, 10), \"Limits were not properly shared between axes\"\n\\ No newline at end of file\n"
}