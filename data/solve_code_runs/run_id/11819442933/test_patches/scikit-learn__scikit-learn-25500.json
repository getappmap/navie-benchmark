{
  "edit_test_file": "sklearn/tests/test_calibration.py",
  "test_patch": "diff --git a/sklearn/tests/test_calibration_pandas_output.py b/sklearn/tests/test_calibration_pandas_output.py\nnew file mode 100644\nindex 0000000..0496b5a\n--- /dev/null\n+++ b/sklearn/tests/test_calibration_pandas_output.py\n@@ -0,0 +1,32 @@\n+\"\"\"Test calibration with pandas output.\"\"\"\n+\n+import numpy as np\n+import pytest\n+from sklearn import set_config\n+from sklearn.calibration import CalibratedClassifierCV\n+from sklearn.linear_model import SGDClassifier\n+\n+\n+def test_calibration_with_pandas_output():\n+    \"\"\"Test that CalibratedClassifierCV fails when configured for pandas output.\n+    \n+    This test reproduces the issue where CalibratedClassifierCV with isotonic\n+    regression fails when sklearn is configured to output pandas DataFrames.\n+    The failure occurs in _CalibratedClassifier.predict_proba when trying to\n+    assign DataFrame output from IsotonicRegression into a numpy array.\n+    \"\"\"\n+    # Configure sklearn to output pandas DataFrames\n+    set_config(transform_output=\"pandas\")\n+    \n+    # Create simple test data\n+    X = np.arange(90).reshape(30, -1)\n+    y = np.arange(30) % 2\n+    \n+    # Create calibrated classifier with isotonic regression\n+    model = CalibratedClassifierCV(SGDClassifier(), method='isotonic')\n+    model.fit(X, y)\n+    \n+    # This should raise a ValueError due to shape mismatch when trying to\n+    # broadcast DataFrame into numpy array\n+    with pytest.raises(ValueError, match=\"could not broadcast input array\"):\n+        model.predict(X)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/tests/test_calibration_pandas_output_inverted.py b/sklearn/tests/test_calibration_pandas_output_inverted.py\nnew file mode 100644\nindex 0000000..1e3deac\n--- /dev/null\n+++ b/sklearn/tests/test_calibration_pandas_output_inverted.py\n@@ -0,0 +1,37 @@\n+\"\"\"Test calibration with pandas output.\"\"\"\n+\n+import numpy as np\n+import pytest\n+from sklearn import set_config\n+from sklearn.calibration import CalibratedClassifierCV\n+from sklearn.linear_model import SGDClassifier\n+\n+\n+def test_calibration_with_pandas_output():\n+    \"\"\"Test that CalibratedClassifierCV fails when configured for pandas output.\n+    \n+    This test verifies that CalibratedClassifierCV with isotonic regression\n+    should work correctly when sklearn is configured to output pandas DataFrames.\n+    If it fails due to DataFrame/numpy array incompatibility, the test will fail\n+    with a specific error message.\n+    \"\"\"\n+    # Configure sklearn to output pandas DataFrames\n+    set_config(transform_output=\"pandas\")\n+    \n+    # Create simple test data\n+    X = np.arange(90).reshape(30, -1)\n+    y = np.arange(30) % 2\n+    \n+    # Create calibrated classifier with isotonic regression\n+    model = CalibratedClassifierCV(SGDClassifier(), method='isotonic')\n+    model.fit(X, y)\n+    \n+    try:\n+        predictions = model.predict(X)\n+    except ValueError as e:\n+        if \"could not broadcast input array\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\") from e\n+        raise e\n+\n+    # If we get here, the bug is not present\n+    assert isinstance(predictions, np.ndarray), \"Predictions should be numpy array\"\n\\ No newline at end of file\n"
}