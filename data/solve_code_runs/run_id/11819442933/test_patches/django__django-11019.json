{
  "edit_test_file": "tests/forms_tests/tests/test_media.py",
  "test_patch": "diff --git a/tests/forms_tests/tests/test_media_order_conflicts.py b/tests/forms_tests/tests/test_media_order_conflicts.py\nnew file mode 100644\nindex 0000000..44abf8d\n--- /dev/null\n+++ b/tests/forms_tests/tests/test_media_order_conflicts.py\n@@ -0,0 +1,44 @@\n+from django import forms\n+from django.test import SimpleTestCase\n+\n+\n+class ColorPicker(forms.Widget):\n+    class Media:\n+        js = ['color-picker.js']\n+\n+\n+class SimpleTextWidget(forms.Widget):\n+    class Media:\n+        js = ['text-editor.js']\n+\n+\n+class FancyTextWidget(forms.Widget):\n+    class Media:\n+        js = ['text-editor.js', 'text-editor-extras.js', 'color-picker.js']\n+\n+\n+class MyForm(forms.Form):\n+    background_color = forms.CharField(widget=ColorPicker())\n+    intro = forms.CharField(widget=SimpleTextWidget())\n+    body = forms.CharField(widget=FancyTextWidget())\n+\n+\n+class MediaOrderConflictTests(SimpleTestCase):\n+    \"\"\"Tests for media ordering conflicts when merging multiple media objects.\"\"\"\n+\n+    def test_media_order_warning(self):\n+        \"\"\"\n+        Test that merging media from multiple widgets produces a warning when\n+        the order of JS files conflicts, and that the resulting order is incorrect.\n+        \"\"\"\n+        msg = 'Detected duplicate Media files in an opposite order:\\ntext-editor-extras.js\\ntext-editor.js'\n+        with self.assertWarnsMessage(RuntimeWarning, msg):\n+            form = MyForm()\n+            media_js = form.media._js\n+\n+        # The resulting order is incorrect - text-editor-extras.js appears before text-editor.js\n+        # even though text-editor-extras.js depends on text-editor.js\n+        self.assertEqual(\n+            media_js,\n+            ['text-editor-extras.js', 'color-picker.js', 'text-editor.js']\n+        )\n\\ No newline at end of file\n",
  "inverted_patch": null
}