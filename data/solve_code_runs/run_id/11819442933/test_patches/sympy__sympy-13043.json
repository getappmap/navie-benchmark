{
  "edit_test_file": "sympy/solvers/tests/test_diophantine.py",
  "test_patch": "diff --git a/sympy/solvers/tests/test_intpoly_decompose.py b/sympy/solvers/tests/test_intpoly_decompose.py\nnew file mode 100644\nindex 0000000..4c6015a\n--- /dev/null\n+++ b/sympy/solvers/tests/test_intpoly_decompose.py\n@@ -0,0 +1,29 @@\n+from sympy.abc import x, y\n+from sympy.integrals.intpoly import decompose\n+\n+def test_decompose_arbitrary_order():\n+    \"\"\"Test that decompose() with separate=True returns values in arbitrary order\"\"\"\n+    expr = x**2 + y + x*y + y**2 + x**3 + x**2*y + y**4 + x**3*y + y**2*x**2\n+    \n+    # Call decompose multiple times and verify we can get different orderings\n+    result1 = decompose(expr, separate=True)\n+    result2 = decompose(expr, separate=True)\n+    \n+    # Both results should contain the same terms but potentially in different orders\n+    assert sorted(str(term) for term in result1) == sorted(str(term) for term in result2)\n+    \n+    # Verify we have all the expected terms regardless of order\n+    expected_terms = {\n+        'y', \n+        'x**2', \n+        'x*y',\n+        'y**2',\n+        'x**3',\n+        'x**2*y',\n+        'y**4',\n+        'x**3*y',\n+        'x**2*y**2'\n+    }\n+    \n+    result_terms = {str(term) for term in result1}\n+    assert result_terms == expected_terms\n\\ No newline at end of file\n",
  "inverted_patch": null
}