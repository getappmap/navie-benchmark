{
  "edit_test_file": "sympy/matrices/expressions/tests/test_blockmatrix.py",
  "test_patch": "diff --git a/sympy/matrices/expressions/tests/test_block_diag_conversion.py b/sympy/matrices/expressions/tests/test_block_diag_conversion.py\nnew file mode 100644\nindex 0000000..942de82\n--- /dev/null\n+++ b/sympy/matrices/expressions/tests/test_block_diag_conversion.py\n@@ -0,0 +1,11 @@\n+from sympy.matrices.expressions.blockmatrix import BlockDiagMatrix\n+from sympy.matrices import Matrix\n+from sympy.testing.pytest import raises\n+\n+def test_block_diag_single_matrix_conversion():\n+    \"\"\"Test that BlockDiagMatrix with single matrix raises TypeError when converting to Matrix\"\"\"\n+    M = Matrix([[1, 2], [3, 4]])\n+    D = BlockDiagMatrix(M)\n+    \n+    # Converting BlockDiagMatrix with single matrix should raise TypeError\n+    raises(TypeError, lambda: Matrix(D))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/matrices/expressions/tests/test_block_diag_conversion_inverted.py b/sympy/matrices/expressions/tests/test_block_diag_conversion_inverted.py\nnew file mode 100644\nindex 0000000..35e7d9e\n--- /dev/null\n+++ b/sympy/matrices/expressions/tests/test_block_diag_conversion_inverted.py\n@@ -0,0 +1,12 @@\n+from sympy.matrices.expressions.blockmatrix import BlockDiagMatrix\n+from sympy.matrices import Matrix\n+\n+def test_block_diag_single_matrix_conversion():\n+    \"\"\"Test that BlockDiagMatrix with single matrix can be converted to Matrix\"\"\"\n+    M = Matrix([[1, 2], [3, 4]])\n+    D = BlockDiagMatrix(M)\n+    \n+    try:\n+        Matrix(D)\n+    except TypeError:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}