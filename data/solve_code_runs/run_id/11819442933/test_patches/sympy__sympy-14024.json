{
  "edit_test_file": "sympy/simplify/tests/test_simplify.py",
  "test_patch": "diff --git a/sympy/simplify/tests/test_exponent_simplify.py b/sympy/simplify/tests/test_exponent_simplify.py\nnew file mode 100644\nindex 0000000..530d873\n--- /dev/null\n+++ b/sympy/simplify/tests/test_exponent_simplify.py\n@@ -0,0 +1,30 @@\n+from sympy import Symbol, simplify, S, N\n+from sympy.core.basic import Basic\n+from sympy.utilities.pytest import raises\n+\n+def test_negative_base_simplify():\n+    # Test with symbolic positive integer\n+    a = Symbol('a', integer=True, positive=True)\n+    x = Symbol('x')\n+    t = -S(10)/3\n+    \n+    # Expression with symbolic a\n+    e1 = (-a)**x * a**(-x)\n+    f1 = simplify(e1)\n+    n1 = N(e1.subs(x, t))\n+    n2 = N(f1.subs(x, t))\n+    \n+    # Expression with concrete value a=2\n+    a = S(2)\n+    e2 = (-a)**x * a**(-x)\n+    f2 = simplify(e2)\n+    n3 = N(e2.subs(x, t))\n+    n4 = N(f2.subs(x, t))\n+    \n+    # Test that the numerical values are different\n+    # n1 and n2 should be equal (approximately -0.5 + 0.866025403784439*I)\n+    # n3 and n4 should be different:\n+    # n3 \u2248 0.5 - 0.866025403784439*I\n+    # n4 \u2248 -0.5 + 0.866025403784439*I\n+    assert abs(n1 - n2) < 1e-12\n+    assert abs(n3 - n4) > 1\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/simplify/tests/test_exponent_simplify_inverted.py b/sympy/simplify/tests/test_exponent_simplify_inverted.py\nnew file mode 100644\nindex 0000000..86e10a7\n--- /dev/null\n+++ b/sympy/simplify/tests/test_exponent_simplify_inverted.py\n@@ -0,0 +1,31 @@\n+from sympy import Symbol, simplify, S, N\n+from sympy.core.basic import Basic\n+from sympy.utilities.pytest import raises\n+\n+def test_negative_base_simplify():\n+    # Test with symbolic positive integer\n+    a = Symbol('a', integer=True, positive=True)\n+    x = Symbol('x')\n+    t = -S(10)/3\n+    \n+    # Expression with symbolic a\n+    e1 = (-a)**x * a**(-x)\n+    f1 = simplify(e1)\n+    n1 = N(e1.subs(x, t))\n+    n2 = N(f1.subs(x, t))\n+    \n+    # Expression with concrete value a=2\n+    a = S(2)\n+    e2 = (-a)**x * a**(-x)\n+    f2 = simplify(e2)\n+    n3 = N(e2.subs(x, t))\n+    n4 = N(f2.subs(x, t))\n+    \n+    # First check that symbolic case works correctly\n+    assert abs(n1 - n2) < 1e-12\n+    \n+    # Now check that concrete case gives consistent results\n+    # This should fail when the bug is present, as n3 and n4 should be equal\n+    # but aren't due to the inconsistency\n+    if abs(n3 - n4) > 1e-12:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}