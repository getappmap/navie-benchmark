{
  "edit_test_file": "lib/matplotlib/tests/test_legend.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_legend_draggable.py b/lib/matplotlib/tests/test_legend_draggable.py\nnew file mode 100644\nindex 0000000..17bf9e4\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_legend_draggable.py\n@@ -0,0 +1,16 @@\n+import matplotlib.pyplot as plt\n+import pytest\n+\n+def test_no_draggable_keyword_at_creation():\n+    \"\"\"Test that legend does not accept draggable as a keyword arg at creation time.\"\"\"\n+    fig, ax = plt.subplots()\n+    ax.plot([1, 2, 3], label='test')\n+    \n+    # This should raise TypeError since draggable is not a valid kwarg\n+    with pytest.raises(TypeError, match=\"got an unexpected keyword argument 'draggable'\"):\n+        ax.legend(draggable=True)\n+        \n+    # Show that the current workflow requires setting draggable after creation\n+    leg = ax.legend()\n+    leg.set_draggable(True)\n+    assert leg.get_draggable() is True\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_legend_draggable_inverted.py b/lib/matplotlib/tests/test_legend_draggable_inverted.py\nnew file mode 100644\nindex 0000000..5f0935c\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_legend_draggable_inverted.py\n@@ -0,0 +1,19 @@\n+import matplotlib.pyplot as plt\n+import pytest\n+\n+def test_no_draggable_keyword_at_creation():\n+    \"\"\"Test that legend should accept draggable as a keyword arg at creation time.\"\"\"\n+    fig, ax = plt.subplots()\n+    ax.plot([1, 2, 3], label='test')\n+    \n+    try:\n+        # This should work, but currently raises TypeError\n+        ax.legend(draggable=True)\n+    except TypeError as e:\n+        if \"got an unexpected keyword argument 'draggable'\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\")\n+        raise  # Re-raise if it's a different TypeError\n+        \n+    # If we get here, the bug is fixed and the test passes\n+    leg = ax.legend()\n+    assert leg.get_draggable() is True\n\\ No newline at end of file\n"
}