{
  "edit_test_file": "tests/test_build_manpage.py",
  "test_patch": "diff --git a/tests/test_build_manpage_sections.py b/tests/test_build_manpage_sections.py\nnew file mode 100644\nindex 0000000..d594c34\n--- /dev/null\n+++ b/tests/test_build_manpage_sections.py\n@@ -0,0 +1,33 @@\n+\"\"\"\n+    test_build_manpage_sections\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the build process with manpage builder section directory structure.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+from pathlib import Path\n+\n+\n+@pytest.mark.sphinx('man')\n+def test_man_section_directories(app, status, warning):\n+    # Build the man pages\n+    app.builder.build_all()\n+\n+    # Get the output directory as a Path object\n+    outdir = Path(app.outdir)\n+\n+    # Test that the man page is created directly in the output directory\n+    # rather than in a section-specific subdirectory\n+    assert (outdir / 'sphinxtests.1').exists()\n+    \n+    # Test that section-specific subdirectories are not created\n+    assert not (outdir / 'man1').exists()\n+    assert not (outdir / 'man3').exists()\n+    assert not (outdir / 'man5').exists()\n+\n+    # Verify the man page is not in a section subdirectory\n+    assert not (outdir / 'man1' / 'sphinxtests.1').exists()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/test_build_manpage_sections_inverted.py b/tests/test_build_manpage_sections_inverted.py\nnew file mode 100644\nindex 0000000..47b4230\n--- /dev/null\n+++ b/tests/test_build_manpage_sections_inverted.py\n@@ -0,0 +1,36 @@\n+\"\"\"\n+    test_build_manpage_sections\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the build process with manpage builder section directory structure.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+from pathlib import Path\n+\n+\n+@pytest.mark.sphinx('man')\n+def test_man_section_directories(app, status, warning):\n+    # Build the man pages\n+    app.builder.build_all()\n+\n+    # Get the output directory as a Path object\n+    outdir = Path(app.outdir)\n+\n+    # The man page should NOT be in the root output directory\n+    if (outdir / 'sphinxtests.1').exists():\n+        raise AssertionError(\"__BUG__HERE__: Man page found in root directory instead of section subdirectory\")\n+    \n+    # Section-specific subdirectory should exist\n+    assert (outdir / 'man1').exists(), \"Expected man1 subdirectory to exist\"\n+\n+    # Man page should be in the correct section subdirectory\n+    assert (outdir / 'man1' / 'sphinxtests.1').exists(), \"Man page should be in man1 subdirectory\"\n+\n+    # Verify other common man section directories exist if needed\n+    # These assertions can be adjusted based on which sections are actually needed\n+    assert (outdir / 'man3').exists(), \"Expected man3 subdirectory to exist\"\n+    assert (outdir / 'man5').exists(), \"Expected man5 subdirectory to exist\"\n\\ No newline at end of file\n"
}