{
  "edit_test_file": "tests/test_config.py",
  "test_patch": "diff --git a/tests/test_config_file_mode.py b/tests/test_config_file_mode.py\nnew file mode 100644\nindex 0000000..7ea863d\n--- /dev/null\n+++ b/tests/test_config_file_mode.py\n@@ -0,0 +1,28 @@\n+import os\n+import tomllib\n+import pytest\n+import flask\n+\n+def test_config_from_file_binary_mode():\n+    \"\"\"Test that Config.from_file() raises TypeError when used with tomllib.load\n+    since it doesn't support opening files in binary mode.\"\"\"\n+    app = flask.Flask(__name__)\n+    \n+    # Create a simple TOML config file\n+    current_dir = os.path.dirname(os.path.abspath(__file__))\n+    config_path = os.path.join(current_dir, \"static\", \"config.toml\")\n+    \n+    # Write some test TOML content\n+    os.makedirs(os.path.dirname(config_path), exist_ok=True)\n+    with open(config_path, \"wb\") as f:\n+        f.write(b'TEST_KEY = \"foo\"\\nSECRET_KEY = \"config\"\\n')\n+\n+    # Attempt to load TOML file - should raise TypeError about binary mode\n+    with pytest.raises(TypeError) as excinfo:\n+        app.config.from_file(\"static/config.toml\", load=tomllib.load)\n+\n+    # Verify the error message mentions binary mode\n+    assert \"binary mode\" in str(excinfo.value)\n+\n+    # Clean up the test file\n+    os.unlink(config_path)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/test_config_file_mode_inverted.py b/tests/test_config_file_mode_inverted.py\nnew file mode 100644\nindex 0000000..0ed2cf5\n--- /dev/null\n+++ b/tests/test_config_file_mode_inverted.py\n@@ -0,0 +1,36 @@\n+import os\n+import tomllib\n+import pytest\n+import flask\n+\n+def test_config_from_file_binary_mode():\n+    \"\"\"Test that Config.from_file() supports binary mode for TOML files.\"\"\"\n+    app = flask.Flask(__name__)\n+    \n+    # Create a simple TOML config file\n+    current_dir = os.path.dirname(os.path.abspath(__file__))\n+    config_path = os.path.join(current_dir, \"static\", \"config.toml\")\n+    \n+    # Write some test TOML content\n+    os.makedirs(os.path.dirname(config_path), exist_ok=True)\n+    with open(config_path, \"wb\") as f:\n+        f.write(b'TEST_KEY = \"foo\"\\nSECRET_KEY = \"config\"\\n')\n+\n+    try:\n+        # This should work with a mode parameter\n+        app.config.from_file(\n+            \"static/config.toml\",\n+            load=tomllib.load,\n+            mode=\"rb\"\n+        )\n+    except (TypeError, AttributeError):\n+        # If the mode parameter is not supported or if TypeError is raised\n+        # due to binary mode issues, the bug is present\n+        raise AssertionError(\"__BUG__HERE__\")\n+    finally:\n+        # Clean up the test file\n+        os.unlink(config_path)\n+\n+    # If we get here, verify the config was actually loaded\n+    assert app.config[\"TEST_KEY\"] == \"foo\"\n+    assert app.config[\"SECRET_KEY\"] == \"config\"\n\\ No newline at end of file\n"
}