{
  "edit_test_file": "tests/checkers/unittest_misc.py",
  "test_patch": "diff --git a/tests/checkers/unittest_punctuation_notes.py b/tests/checkers/unittest_punctuation_notes.py\nnew file mode 100644\nindex 0000000..6a45a19\n--- /dev/null\n+++ b/tests/checkers/unittest_punctuation_notes.py\n@@ -0,0 +1,24 @@\n+\"\"\"Tests for the misc checker handling of punctuation-only notes.\"\"\"\n+\n+from pylint.checkers import misc\n+from pylint.testutils import CheckerTestCase, MessageTest, _tokenize_str, set_config\n+\n+\n+class TestPunctuationNotes(CheckerTestCase):\n+    \"\"\"Test that punctuation-only notes are properly handled.\"\"\"\n+\n+    CHECKER_CLASS = misc.EncodingChecker\n+\n+    @set_config(notes=[\"YES\", \"???\"])\n+    def test_punctuation_notes(self) -> None:\n+        \"\"\"Test that punctuation-only notes are detected.\"\"\"\n+        code = \"\"\"a = 1\n+                # YES: yes\n+                # ???: no\n+                \"\"\"\n+        # The test passes when the issue is present - only detecting the \"YES\" note\n+        # and not the \"???\" note, which demonstrates the bug\n+        with self.assertAddsMessages(\n+            MessageTest(msg_id=\"fixme\", line=2, args=\"YES: yes\", col_offset=17)\n+        ):\n+            self.checker.process_tokens(_tokenize_str(code))\n\\ No newline at end of file\n",
  "inverted_patch": null
}