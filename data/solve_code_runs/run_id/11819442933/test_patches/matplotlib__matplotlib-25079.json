{
  "edit_test_file": "lib/matplotlib/tests/test_colorbar.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_colorbar_norm_update.py b/lib/matplotlib/tests/test_colorbar_norm_update.py\nnew file mode 100644\nindex 0000000..8457e47\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_colorbar_norm_update.py\n@@ -0,0 +1,26 @@\n+import numpy as np\n+import pytest\n+import matplotlib.pyplot as plt\n+from matplotlib.colors import LogNorm\n+\n+def test_colorbar_lognorm_update_fails():\n+    \"\"\"Test that updating to LogNorm after colorbar creation raises ValueError.\"\"\"\n+    # Create random data between 1 and 5 (all positive, valid for LogNorm)\n+    rng = np.random.default_rng(0)\n+    img = rng.uniform(1, 5, (25, 25))\n+    \n+    # Create plot with default norm\n+    fig, ax = plt.subplots()\n+    plot = ax.pcolormesh(img)\n+    fig.colorbar(plot, ax=ax)\n+    \n+    # Set explicit vmin/vmax that should be valid for LogNorm\n+    vmin, vmax = 1, 5\n+    \n+    # Attempt to update the norm to LogNorm\n+    with pytest.raises(ValueError, match=\"Invalid vmin or vmax\"):\n+        plot.norm = LogNorm(vmin, vmax)\n+        plot.autoscale()\n+        fig.canvas.draw()\n+    \n+    plt.close(fig)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_colorbar_norm_update_inverted.py b/lib/matplotlib/tests/test_colorbar_norm_update_inverted.py\nnew file mode 100644\nindex 0000000..cb5466a\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_colorbar_norm_update_inverted.py\n@@ -0,0 +1,31 @@\n+import numpy as np\n+import pytest\n+import matplotlib.pyplot as plt\n+from matplotlib.colors import LogNorm\n+\n+def test_colorbar_lognorm_update():\n+    \"\"\"Test that updating to LogNorm after colorbar creation works correctly.\"\"\"\n+    # Create random data between 1 and 5 (all positive, valid for LogNorm)\n+    rng = np.random.default_rng(0)\n+    img = rng.uniform(1, 5, (25, 25))\n+    \n+    # Create plot with default norm\n+    fig, ax = plt.subplots()\n+    plot = ax.pcolormesh(img)\n+    fig.colorbar(plot, ax=ax)\n+    \n+    # Set explicit vmin/vmax that should be valid for LogNorm\n+    vmin, vmax = 1, 5\n+    \n+    # Attempt to update the norm to LogNorm\n+    try:\n+        plot.norm = LogNorm(vmin, vmax)\n+        plot.autoscale()\n+        fig.canvas.draw()\n+    except ValueError as e:\n+        if \"Invalid vmin or vmax\" in str(e):\n+            plt.close(fig)\n+            raise AssertionError(\"__BUG__HERE__\") from e\n+        raise  # Re-raise if it's a different ValueError\n+        \n+    plt.close(fig)\n\\ No newline at end of file\n"
}