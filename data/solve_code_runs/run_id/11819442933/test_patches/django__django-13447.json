{
  "edit_test_file": "tests/admin_views/tests.py",
  "test_patch": "diff --git a/tests/admin_views/test_app_list_model.py b/tests/admin_views/test_app_list_model.py\nnew file mode 100644\nindex 0000000..f61da7a\n--- /dev/null\n+++ b/tests/admin_views/test_app_list_model.py\n@@ -0,0 +1,48 @@\n+from django.contrib.admin.sites import AdminSite\n+from django.contrib.auth.models import User\n+from django.test import TestCase, override_settings\n+from django.urls import reverse\n+\n+from admin_views.models import Article, Section\n+\n+\n+@override_settings(ROOT_URLCONF='admin_views.urls')\n+class AppListModelClassTest(TestCase):\n+    \"\"\"\n+    Test that app_list context in admin index view does not contain \n+    the model class, only serialized model data.\n+    \"\"\"\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.superuser = User.objects.create_superuser(\n+            username='super',\n+            password='secret', \n+            email='super@example.com'\n+        )\n+\n+    def setUp(self):\n+        self.client.force_login(self.superuser)\n+        self.site = AdminSite()\n+\n+    def test_app_list_missing_model_class(self):\n+        \"\"\"\n+        The app_list context should contain the actual model class,\n+        not just serialized model data.\n+        \"\"\"\n+        response = self.client.get(reverse('admin:index'))\n+        app_list = response.context['app_list']\n+        \n+        # Find the admin_views app\n+        admin_views_app = next(\n+            app for app in app_list \n+            if app['app_label'] == 'admin_views'\n+        )\n+        \n+        # Get the Article model entry\n+        article_model = next(\n+            model for model in admin_views_app['models']\n+            if model['object_name'] == 'Article'\n+        )\n+        \n+        # The model entry should have a 'model_class' attribute but doesn't\n+        self.assertNotIn('model_class', article_model)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/tests/admin_views/test_app_list_model_inverted.py b/tests/admin_views/test_app_list_model_inverted.py\nnew file mode 100644\nindex 0000000..6f3fba6\n--- /dev/null\n+++ b/tests/admin_views/test_app_list_model_inverted.py\n@@ -0,0 +1,52 @@\n+from django.contrib.admin.sites import AdminSite\n+from django.contrib.auth.models import User\n+from django.test import TestCase, override_settings\n+from django.urls import reverse\n+\n+from admin_views.models import Article, Section\n+\n+\n+@override_settings(ROOT_URLCONF='admin_views.urls')\n+class AppListModelClassTest(TestCase):\n+    \"\"\"\n+    Test that app_list context in admin index view contains \n+    the model class, not just serialized model data.\n+    \"\"\"\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.superuser = User.objects.create_superuser(\n+            username='super',\n+            password='secret', \n+            email='super@example.com'\n+        )\n+\n+    def setUp(self):\n+        self.client.force_login(self.superuser)\n+        self.site = AdminSite()\n+\n+    def test_app_list_should_include_model_class(self):\n+        \"\"\"\n+        The app_list context should contain the actual model class,\n+        not just serialized model data.\n+        \"\"\"\n+        response = self.client.get(reverse('admin:index'))\n+        app_list = response.context['app_list']\n+        \n+        # Find the admin_views app\n+        admin_views_app = next(\n+            app for app in app_list \n+            if app['app_label'] == 'admin_views'\n+        )\n+        \n+        # Get the Article model entry\n+        article_model = next(\n+            model for model in admin_views_app['models']\n+            if model['object_name'] == 'Article'\n+        )\n+        \n+        # The model entry should have a 'model_class' attribute\n+        if 'model_class' not in article_model:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        \n+        # Additional verification that model_class is the correct type\n+        self.assertTrue(article_model['model_class'] is Article)\n\\ No newline at end of file\n"
}