{
  "edit_test_file": "sklearn/cluster/tests/test_affinity_propagation.py",
  "test_patch": "diff --git a/sklearn/cluster/tests/test_affinity_propagation_convergence.py b/sklearn/cluster/tests/test_affinity_propagation_convergence.py\nnew file mode 100644\nindex 0000000..0a8dccc\n--- /dev/null\n+++ b/sklearn/cluster/tests/test_affinity_propagation_convergence.py\n@@ -0,0 +1,30 @@\n+\"\"\"\n+Testing for non-convergence behavior in Affinity Propagation\n+\"\"\"\n+\n+import numpy as np\n+from sklearn.cluster import AffinityPropagation\n+\n+def test_affinity_propagation_non_convergence_behavior():\n+    \"\"\"Test that non-converged affinity propagation returns expected values.\n+    \n+    According to documentation, when the algorithm does not converge, it should return:\n+    - Empty array as cluster_centers_indices_\n+    - -1 as label for each training sample\n+    \n+    However, it currently returns actual cluster assignments even when not converged.\n+    \"\"\"\n+    # Create simple dataset that won't converge in 2 iterations\n+    X = np.array([[1,0,0,0,0,0],\n+                  [0,1,1,1,0,0],\n+                  [0,0,1,0,0,1]])\n+    \n+    # Force non-convergence with very small max_iter\n+    af = AffinityPropagation(max_iter=2).fit(X)\n+    \n+    # Current behavior - returns actual cluster assignments\n+    assert len(af.cluster_centers_indices_) > 0\n+    assert not np.all(af.labels_ == -1)\n+    \n+    # Verify it did not converge by checking iterations\n+    assert af.n_iter_ == 2  # Stopped at max_iter\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sklearn/cluster/tests/test_affinity_propagation_convergence_inverted.py b/sklearn/cluster/tests/test_affinity_propagation_convergence_inverted.py\nnew file mode 100644\nindex 0000000..bf7aebf\n--- /dev/null\n+++ b/sklearn/cluster/tests/test_affinity_propagation_convergence_inverted.py\n@@ -0,0 +1,32 @@\n+\"\"\"\n+Testing for non-convergence behavior in Affinity Propagation\n+\"\"\"\n+\n+import numpy as np\n+from sklearn.cluster import AffinityPropagation\n+\n+def test_affinity_propagation_non_convergence_behavior():\n+    \"\"\"Test that non-converged affinity propagation returns expected values.\n+    \n+    According to documentation, when the algorithm does not converge, it should return:\n+    - Empty array as cluster_centers_indices_\n+    - -1 as label for each training sample\n+    \"\"\"\n+    # Create simple dataset that won't converge in 2 iterations\n+    X = np.array([[1,0,0,0,0,0],\n+                  [0,1,1,1,0,0],\n+                  [0,0,1,0,0,1]])\n+    \n+    # Force non-convergence with very small max_iter\n+    af = AffinityPropagation(max_iter=2).fit(X)\n+    \n+    # Verify it did not converge by checking iterations\n+    assert af.n_iter_ == 2  # Stopped at max_iter\n+    \n+    # Test should fail if cluster_centers_indices_ is not empty\n+    if len(af.cluster_centers_indices_) > 0:\n+        raise AssertionError(\"__BUG__HERE__\")\n+        \n+    # Test should fail if labels are not all -1\n+    if not np.all(af.labels_ == -1):\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}