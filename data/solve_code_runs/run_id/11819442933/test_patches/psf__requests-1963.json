{
  "edit_test_file": "test_requests.py",
  "test_patch": "diff --git a/test_redirect_method_preservation.py b/test_redirect_method_preservation.py\nnew file mode 100644\nindex 0000000..a72840b\n--- /dev/null\n+++ b/test_redirect_method_preservation.py\n@@ -0,0 +1,43 @@\n+#!/usr/bin/env python\n+# -*- coding: utf-8 -*-\n+\n+\"\"\"Tests for request method preservation during redirects.\"\"\"\n+\n+import unittest\n+import requests\n+\n+\n+def httpbin(*suffix):\n+    \"\"\"Returns url for HTTPBIN resource.\"\"\"\n+    return '/'.join(['http://httpbin.org'] + list(suffix))\n+\n+\n+class TestRedirectMethodPreservation(unittest.TestCase):\n+\n+    def test_303_307_redirect_chain(self):\n+        \"\"\"Test that a 303 followed by 307 redirect preserves the correct method.\n+        \n+        A POST converted to GET by 303 should remain GET after 307 redirect.\n+        The issue causes the original POST method to be incorrectly restored.\n+        \"\"\"\n+        s = requests.Session()\n+\n+        # Make a POST request that will get redirected with 303 then 307\n+        r = s.post(httpbin('redirect-to'), params={\n+            'url': httpbin('status/307'),\n+            'status_code': 303\n+        })\n+\n+        # Verify the request chain:\n+        # 1. Original POST request\n+        assert r.history[0].request.method == 'POST'\n+        \n+        # 2. After 303, should be converted to GET\n+        assert r.history[1].request.method == 'GET'\n+        \n+        # 3. After 307, should still be GET but the issue causes it to be POST\n+        assert r.request.method == 'POST'\n+\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/test_redirect_method_preservation_inverted.py b/test_redirect_method_preservation_inverted.py\nnew file mode 100644\nindex 0000000..8422f68\n--- /dev/null\n+++ b/test_redirect_method_preservation_inverted.py\n@@ -0,0 +1,45 @@\n+#!/usr/bin/env python\n+# -*- coding: utf-8 -*-\n+\n+\"\"\"Tests for request method preservation during redirects.\"\"\"\n+\n+import unittest\n+import requests\n+\n+\n+def httpbin(*suffix):\n+    \"\"\"Returns url for HTTPBIN resource.\"\"\"\n+    return '/'.join(['http://httpbin.org'] + list(suffix))\n+\n+\n+class TestRedirectMethodPreservation(unittest.TestCase):\n+\n+    def test_303_307_redirect_chain(self):\n+        \"\"\"Test that a 303 followed by 307 redirect preserves the correct method.\n+        \n+        A POST converted to GET by 303 should remain GET after 307 redirect.\n+        The issue causes the original POST method to be incorrectly restored.\n+        \"\"\"\n+        s = requests.Session()\n+\n+        # Make a POST request that will get redirected with 303 then 307\n+        r = s.post(httpbin('redirect-to'), params={\n+            'url': httpbin('status/307'),\n+            'status_code': 303\n+        })\n+\n+        # Verify the request chain:\n+        # 1. Original POST request\n+        self.assertEqual(r.history[0].request.method, 'POST')\n+        \n+        # 2. After 303, should be converted to GET\n+        self.assertEqual(r.history[1].request.method, 'GET')\n+        \n+        # 3. After 307, should still be GET but the issue causes it to be POST\n+        if r.request.method == 'POST':\n+            raise AssertionError('__BUG__HERE__')\n+        self.assertEqual(r.request.method, 'GET')\n+\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n"
}