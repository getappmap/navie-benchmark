{
  "edit_test_file": "lib/mpl_toolkits/tests/test_mplot3d.py",
  "test_patch": "diff --git a/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors.py b/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors.py\nnew file mode 100644\nindex 0000000..649dc7b\n--- /dev/null\n+++ b/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors.py\n@@ -0,0 +1,21 @@\n+import numpy as np\n+import pytest\n+import matplotlib.pyplot as plt\n+from mpl_toolkits.mplot3d import Axes3D\n+\n+def test_poly3d_collection_facecolors():\n+    \"\"\"Test that accessing facecolors on a Poly3DCollection raises AttributeError.\"\"\"\n+    # Create sample data\n+    y, x = np.ogrid[1:10:100j, 1:10:100j]\n+    z2 = np.cos(x)**3 - np.sin(y)**2\n+    \n+    # Create 3D plot\n+    fig = plt.figure()\n+    ax = fig.add_subplot(111, projection='3d')\n+    \n+    # Create surface plot which returns a Poly3DCollection\n+    surface = ax.plot_surface(x, y, z2, cmap='hot')\n+    \n+    # Verify that accessing facecolors raises AttributeError\n+    with pytest.raises(AttributeError, match=\"'Poly3DCollection' object has no attribute '_facecolors2d'\"):\n+        surface.get_facecolors()\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors_inverted.py b/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors_inverted.py\nnew file mode 100644\nindex 0000000..367383b\n--- /dev/null\n+++ b/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors_inverted.py\n@@ -0,0 +1,28 @@\n+import numpy as np\n+import pytest\n+import matplotlib.pyplot as plt\n+from mpl_toolkits.mplot3d import Axes3D\n+\n+def test_poly3d_collection_facecolors():\n+    \"\"\"Test that Poly3DCollection should have _facecolors2d attribute.\"\"\"\n+    # Create sample data\n+    y, x = np.ogrid[1:10:100j, 1:10:100j]\n+    z2 = np.cos(x)**3 - np.sin(y)**2\n+    \n+    # Create 3D plot\n+    fig = plt.figure()\n+    ax = fig.add_subplot(111, projection='3d')\n+    \n+    # Create surface plot which returns a Poly3DCollection\n+    surface = ax.plot_surface(x, y, z2, cmap='hot')\n+    \n+    # Try to get facecolors - this should raise an error if the bug is present\n+    try:\n+        surface.get_facecolors()\n+    except AttributeError as e:\n+        if \"'Poly3DCollection' object has no attribute '_facecolors2d'\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\")\n+        raise e  # Re-raise if it's a different AttributeError\n+    \n+    # If we get here, the bug is not present\n+    plt.close(fig)  # Clean up\n\\ No newline at end of file\n"
}