{
  "edit_test_file": "sympy/core/tests/test_expr.py",
  "test_patch": "diff --git a/sympy/core/tests/test_repr_eval_safety.py b/sympy/core/tests/test_repr_eval_safety.py\nnew file mode 100644\nindex 0000000..2705113\n--- /dev/null\n+++ b/sympy/core/tests/test_repr_eval_safety.py\n@@ -0,0 +1,20 @@\n+from sympy import Symbol\n+from sympy.utilities.pytest import raises\n+\n+def test_repr_eval_safety():\n+    class BadRepr:\n+        def __repr__(self):\n+            return 'x.y'\n+            \n+    x = Symbol('x')\n+    # Test that attempting to compare with an object that has a bad repr \n+    # raises an AttributeError due to eval\n+    raises(AttributeError, lambda: x == BadRepr())\n+\n+    class DeceptiveRepr:\n+        def __repr__(self):\n+            return 'x'\n+            \n+    # Test that comparing with an object whose repr matches the symbol name\n+    # incorrectly evaluates as equal\n+    assert (Symbol('x') == DeceptiveRepr()) is True\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/core/tests/test_repr_eval_safety_inverted.py b/sympy/core/tests/test_repr_eval_safety_inverted.py\nnew file mode 100644\nindex 0000000..aa91384\n--- /dev/null\n+++ b/sympy/core/tests/test_repr_eval_safety_inverted.py\n@@ -0,0 +1,21 @@\n+from sympy import Symbol\n+from sympy.utilities.pytest import raises\n+\n+def test_repr_eval_safety():\n+    class BadRepr:\n+        def __repr__(self):\n+            return 'x.y'\n+            \n+    x = Symbol('x')\n+    # Test that attempting to compare with an object that has a bad repr \n+    # raises an AttributeError due to eval\n+    raises(AttributeError, lambda: x == BadRepr())\n+\n+    class DeceptiveRepr:\n+        def __repr__(self):\n+            return 'x'\n+            \n+    # Test that comparing with an object whose repr matches the symbol name\n+    # should NOT evaluate as equal - if it does, that's a bug\n+    if Symbol('x') == DeceptiveRepr():\n+        raise AssertionError(\"__BUG__HERE__: Symbol incorrectly evaluates as equal to object with matching repr\")\n\\ No newline at end of file\n"
}