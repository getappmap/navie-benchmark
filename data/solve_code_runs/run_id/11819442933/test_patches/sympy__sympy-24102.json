{
  "edit_test_file": "sympy/parsing/tests/test_mathematica.py",
  "test_patch": "diff --git a/sympy/parsing/tests/test_mathematica_greek_chars.py b/sympy/parsing/tests/test_mathematica_greek_chars.py\nnew file mode 100644\nindex 0000000..78e6ea9\n--- /dev/null\n+++ b/sympy/parsing/tests/test_mathematica_greek_chars.py\n@@ -0,0 +1,7 @@\n+from sympy.parsing.mathematica import parse_mathematica\n+from sympy.testing.pytest import raises\n+\n+def test_mathematica_greek_chars():\n+    # Test that parse_mathematica fails to parse Greek characters\n+    # This should raise a SyntaxError as described in the issue\n+    raises(SyntaxError, lambda: parse_mathematica('\u03bb'))\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/sympy/parsing/tests/test_mathematica_greek_chars_inverted.py b/sympy/parsing/tests/test_mathematica_greek_chars_inverted.py\nnew file mode 100644\nindex 0000000..1c38f91\n--- /dev/null\n+++ b/sympy/parsing/tests/test_mathematica_greek_chars_inverted.py\n@@ -0,0 +1,14 @@\n+from sympy.parsing.mathematica import parse_mathematica, mathematica\n+\n+def test_mathematica_greek_chars():\n+    # Test that parse_mathematica should handle Greek characters\n+    # Compare behavior with the old mathematica parser\n+    old_result = mathematica('\u03bb')\n+    \n+    try:\n+        new_result = parse_mathematica('\u03bb')\n+        if new_result != old_result:\n+            raise AssertionError(\"__BUG__HERE__\")\n+    except SyntaxError:\n+        # If parse_mathematica raises SyntaxError, this indicates the bug is present\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n"
}