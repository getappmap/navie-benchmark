{
  "edit_test_file": "lib/matplotlib/tests/test_figure.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_axes_grid_geoaxes.py b/lib/matplotlib/tests/test_axes_grid_geoaxes.py\nnew file mode 100644\nindex 0000000..956f50a\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_axes_grid_geoaxes.py\n@@ -0,0 +1,13 @@\n+import pytest\n+from matplotlib import pyplot as plt\n+from matplotlib.projections.geo import HammerAxes\n+from mpl_toolkits.axes_grid1 import AxesGrid\n+\n+\n+def test_axes_grid_geoaxes():\n+    \"\"\"Test that creating AxesGrid with GeoAxes raises TypeError.\"\"\"\n+    fig = plt.figure()\n+    axes_class = (HammerAxes, dict())\n+    \n+    with pytest.raises(TypeError, match=\"'method' object is not subscriptable\"):\n+        AxesGrid(fig, 111, nrows_ncols=(1, 1), axes_class=axes_class)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_axes_grid_geoaxes_inverted.py b/lib/matplotlib/tests/test_axes_grid_geoaxes_inverted.py\nnew file mode 100644\nindex 0000000..02ac4eb\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_axes_grid_geoaxes_inverted.py\n@@ -0,0 +1,21 @@\n+import pytest\n+from matplotlib import pyplot as plt\n+from matplotlib.projections.geo import HammerAxes\n+from mpl_toolkits.axes_grid1 import AxesGrid\n+\n+\n+def test_axes_grid_geoaxes():\n+    \"\"\"Test that creating AxesGrid with GeoAxes works correctly.\"\"\"\n+    fig = plt.figure()\n+    axes_class = (HammerAxes, dict())\n+    \n+    try:\n+        AxesGrid(fig, 111, nrows_ncols=(1, 1), axes_class=axes_class)\n+        # If we get here, the bug is not present (no TypeError was raised)\n+    except TypeError as e:\n+        if \"'method' object is not subscriptable\" in str(e):\n+            # The bug is present, so we should fail the test\n+            raise AssertionError(\"__BUG__HERE__\")\n+        else:\n+            # Some other TypeError occurred, we should let it propagate\n+            raise\n\\ No newline at end of file\n"
}