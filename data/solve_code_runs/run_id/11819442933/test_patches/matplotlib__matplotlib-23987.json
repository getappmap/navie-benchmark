{
  "edit_test_file": "lib/matplotlib/tests/test_figure.py",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_layout_warnings.py b/lib/matplotlib/tests/test_layout_warnings.py\nnew file mode 100644\nindex 0000000..98fc305\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_layout_warnings.py\n@@ -0,0 +1,26 @@\n+import matplotlib.pyplot as plt\n+import numpy as np\n+import pytest\n+import warnings\n+\n+\n+def test_subplots_adjust_warning_with_constrained_layout_false():\n+    \"\"\"Test that a warning is incorrectly raised when using subplots_adjust\n+    with constrained_layout=False.\"\"\"\n+    \n+    # Create test data\n+    a = np.linspace(0, 2*np.pi, 100)\n+    b = np.sin(a)\n+    c = np.cos(a)\n+    \n+    # Create figure with constrained_layout explicitly set to False\n+    fig, ax = plt.subplots(1, 2, figsize=(8, 2), constrained_layout=False)\n+    ax[0].plot(a, b)\n+    ax[1].plot(a, c)\n+    \n+    # Check that warning is raised when calling subplots_adjust\n+    with pytest.warns(UserWarning, match=\"This figure was using a layout engine \"\n+                     \"that is incompatible with subplots_adjust\"):\n+        plt.subplots_adjust(wspace=0)\n+    \n+    plt.close(fig)\n\\ No newline at end of file\n",
  "inverted_patch": "diff --git a/lib/matplotlib/tests/test_layout_warnings_inverted.py b/lib/matplotlib/tests/test_layout_warnings_inverted.py\nnew file mode 100644\nindex 0000000..07e55fc\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_layout_warnings_inverted.py\n@@ -0,0 +1,31 @@\n+import matplotlib.pyplot as plt\n+import numpy as np\n+import pytest\n+import warnings\n+\n+\n+def test_no_warning_with_constrained_layout_false():\n+    \"\"\"Test that no warning is raised when using subplots_adjust\n+    with constrained_layout=False.\"\"\"\n+    \n+    # Create test data\n+    a = np.linspace(0, 2*np.pi, 100)\n+    b = np.sin(a)\n+    c = np.cos(a)\n+    \n+    # Create figure with constrained_layout explicitly set to False\n+    fig, ax = plt.subplots(1, 2, figsize=(8, 2), constrained_layout=False)\n+    ax[0].plot(a, b)\n+    ax[1].plot(a, c)\n+    \n+    # The test should fail if a warning is raised\n+    with warnings.catch_warnings(record=True) as w:\n+        warnings.simplefilter(\"always\")\n+        plt.subplots_adjust(wspace=0)\n+        \n+        for warning in w:\n+            if \"This figure was using a layout engine that is incompatible with subplots_adjust\" in str(warning.message):\n+                plt.close(fig)\n+                raise AssertionError(\"__BUG__HERE__\")\n+    \n+    plt.close(fig)\n\\ No newline at end of file\n"
}