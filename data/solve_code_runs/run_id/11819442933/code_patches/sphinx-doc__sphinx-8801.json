{
  "instance_id": "sphinx-doc__sphinx-8801",
  "edit_test_file": null,
  "code_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex dc413b5..f9a7741 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -710,11 +710,20 @@ class Documenter:\n             else:\n                 isattr = False\n \n-            doc = getdoc(member, self.get_attr, self.config.autodoc_inherit_docstrings,\n-                         self.parent, self.object_name)\n-            if not isinstance(doc, str):\n-                # Ignore non-string __doc__\n-                doc = None\n+            # For annotation-only attributes, check parent class docstrings\n+            if member is INSTANCEATTR and inspect.isclass(self.object):\n+                for parent in self.object.__mro__[1:]:  # Skip the class itself\n+                    parent_doc = self.get_attribute_comment(parent, membername)\n+                    if parent_doc:\n+                        doc = \"\\n\".join(parent_doc)\n+                        break\n+\n+            if not doc:\n+                doc = getdoc(member, self.get_attr, self.config.autodoc_inherit_docstrings,\n+                             self.parent, self.object_name)\n+                if not isinstance(doc, str):\n+                    # Ignore non-string __doc__\n+                    doc = None\n \n             # if the member __doc__ is the same as self's __doc__, it's just\n             # inherited and therefore not the member's doc\n@@ -783,8 +792,12 @@ class Documenter:\n                         is_filtered_inherited_member(membername, obj)):\n                     keep = False\n                 else:\n+                    # For annotation-only attributes, also check parent class annotations\n+                    is_annotated = (member is INSTANCEATTR and\n+                                  any(membername in get_type_hints(cls, None, self.config.autodoc_type_aliases)\n+                                      for cls in self.object.__mro__[1:]))\n                     # ignore undocumented members if :undoc-members: is not given\n-                    keep = has_doc or self.options.undoc_members\n+                    keep = has_doc or self.options.undoc_members or is_annotated\n \n             if isinstance(obj, ObjectMember) and obj.skipped:\n                 # forcedly skipped member (ex. a module attribute not defined in __all__)\n",
  "code_files": null,
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 4523569,
  "num_received_chars": 54029,
  "elapsed_time": 819.4041037559509,
  "lint_repair_count": 3,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}