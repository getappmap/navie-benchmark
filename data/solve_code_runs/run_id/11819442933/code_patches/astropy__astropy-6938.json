{
  "instance_id": "astropy__astropy-6938",
  "edit_test_file": "astropy/io/fits/tests/test_header.py",
  "code_patch": "diff --git a/astropy/io/fits/fitsrec.py b/astropy/io/fits/fitsrec.py\nindex 574b407..8890e15 100644\n--- a/astropy/io/fits/fitsrec.py\n+++ b/astropy/io/fits/fitsrec.py\n@@ -1261,7 +1261,7 @@ class FITS_rec(np.recarray):\n \n         # Replace exponent separator in floating point numbers\n         if 'D' in format:\n-            output_field.replace(encode_ascii('E'), encode_ascii('D'))\n+            output_field[:] = output_field.replace(encode_ascii('E'), encode_ascii('D'))\n \n \n def _get_recarray_field(array, key):\n",
  "code_files": null,
  "test_patch": "diff --git a/astropy/io/fits/tests/test_d_exponent.py b/astropy/io/fits/tests/test_d_exponent.py\nnew file mode 100644\nindex 0000000..1dd7e64\n--- /dev/null\n+++ b/astropy/io/fits/tests/test_d_exponent.py\n@@ -0,0 +1,24 @@\n+# Licensed under a 3-clause BSD style license - see PYFITS.rst\n+\n+import numpy as np\n+from numpy import char as chararray\n+\n+from ....tests.helper import catch_warnings\n+from ..util import encode_ascii\n+\n+def test_d_exponent_not_replaced():\n+    \"\"\"\n+    Test that demonstrates the bug where chararray.replace() is not working in-place\n+    when trying to replace 'E' with 'D' in floating point exponents.\n+    \"\"\"\n+    # Create a chararray with a floating point number in scientific notation\n+    test_value = encode_ascii('1.23456E+11')\n+    output_field = chararray.array([test_value])\n+    \n+    # Try to replace 'E' with 'D' - this returns a new array but doesn't modify in place\n+    output_field.replace(encode_ascii('E'), encode_ascii('D'))\n+    \n+    # The original array should still contain 'E', not 'D'\n+    assert b'E' in output_field[0]\n+    assert b'D' not in output_field[0]\n+    assert output_field[0] == test_value\n\\ No newline at end of file\n",
  "test_inverted_patch": null,
  "num_sent_chars": 6423935,
  "num_received_chars": 75355,
  "elapsed_time": 1233.4455785751343,
  "lint_repair_count": 3,
  "test_generation_attempts": 9,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}