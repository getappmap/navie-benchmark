{
  "instance_id": "sphinx-doc__sphinx-8273",
  "edit_test_file": "tests/test_build_manpage.py",
  "code_patch": "diff --git a/sphinx/builders/manpage.py b/sphinx/builders/manpage.py\nindex 4166dec..31bc96f 100644\n--- a/sphinx/builders/manpage.py\n+++ b/sphinx/builders/manpage.py\n@@ -8,6 +8,7 @@\n     :license: BSD, see LICENSE for details.\n \"\"\"\n \n+import os\n from os import path\n from typing import Any, Dict, List, Set, Tuple, Union\n \n@@ -69,6 +70,12 @@ class ManualPageBuilder(Builder):\n                 logger.warning(__('\"man_pages\" config value references unknown '\n                                   'document %s'), docname)\n                 continue\n+\n+            # Create section-specific subdirectory (e.g. man1, man2, etc)\n+            section_dirname = 'man%d' % section\n+            section_dir = path.join(self.outdir, section_dirname)\n+            if not path.exists(section_dir):\n+                os.makedirs(section_dir)\n             if isinstance(authors, str):\n                 if authors:\n                     authors = [authors]\n@@ -83,7 +90,7 @@ class ManualPageBuilder(Builder):\n             targetname = '%s.%s' % (name, section)\n             logger.info(darkgreen(targetname) + ' { ', nonl=True)\n             destination = FileOutput(\n-                destination_path=path.join(self.outdir, targetname),\n+                destination_path=path.join(self.outdir, 'man%d' % section, targetname),\n                 encoding='utf-8')\n \n             tree = self.env.get_doctree(docname)\n",
  "code_files": null,
  "test_patch": "diff --git a/tests/test_build_manpage_sections.py b/tests/test_build_manpage_sections.py\nnew file mode 100644\nindex 0000000..d594c34\n--- /dev/null\n+++ b/tests/test_build_manpage_sections.py\n@@ -0,0 +1,33 @@\n+\"\"\"\n+    test_build_manpage_sections\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the build process with manpage builder section directory structure.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+from pathlib import Path\n+\n+\n+@pytest.mark.sphinx('man')\n+def test_man_section_directories(app, status, warning):\n+    # Build the man pages\n+    app.builder.build_all()\n+\n+    # Get the output directory as a Path object\n+    outdir = Path(app.outdir)\n+\n+    # Test that the man page is created directly in the output directory\n+    # rather than in a section-specific subdirectory\n+    assert (outdir / 'sphinxtests.1').exists()\n+    \n+    # Test that section-specific subdirectories are not created\n+    assert not (outdir / 'man1').exists()\n+    assert not (outdir / 'man3').exists()\n+    assert not (outdir / 'man5').exists()\n+\n+    # Verify the man page is not in a section subdirectory\n+    assert not (outdir / 'man1' / 'sphinxtests.1').exists()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/test_build_manpage_sections_inverted.py b/tests/test_build_manpage_sections_inverted.py\nnew file mode 100644\nindex 0000000..47b4230\n--- /dev/null\n+++ b/tests/test_build_manpage_sections_inverted.py\n@@ -0,0 +1,36 @@\n+\"\"\"\n+    test_build_manpage_sections\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the build process with manpage builder section directory structure.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+from pathlib import Path\n+\n+\n+@pytest.mark.sphinx('man')\n+def test_man_section_directories(app, status, warning):\n+    # Build the man pages\n+    app.builder.build_all()\n+\n+    # Get the output directory as a Path object\n+    outdir = Path(app.outdir)\n+\n+    # The man page should NOT be in the root output directory\n+    if (outdir / 'sphinxtests.1').exists():\n+        raise AssertionError(\"__BUG__HERE__: Man page found in root directory instead of section subdirectory\")\n+    \n+    # Section-specific subdirectory should exist\n+    assert (outdir / 'man1').exists(), \"Expected man1 subdirectory to exist\"\n+\n+    # Man page should be in the correct section subdirectory\n+    assert (outdir / 'man1' / 'sphinxtests.1').exists(), \"Man page should be in man1 subdirectory\"\n+\n+    # Verify other common man section directories exist if needed\n+    # These assertions can be adjusted based on which sections are actually needed\n+    assert (outdir / 'man3').exists(), \"Expected man3 subdirectory to exist\"\n+    assert (outdir / 'man5').exists(), \"Expected man5 subdirectory to exist\"\n\\ No newline at end of file\n",
  "num_sent_chars": 7160943,
  "num_received_chars": 127444,
  "elapsed_time": 1319.8120279312134,
  "lint_repair_count": 13,
  "test_generation_attempts": 1,
  "code_generation_attempts": 9,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}