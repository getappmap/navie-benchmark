{
  "instance_id": "matplotlib__matplotlib-23562",
  "edit_test_file": "lib/mpl_toolkits/tests/test_mplot3d.py",
  "code_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex 8fe6e7a..ee4bc48 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -467,6 +467,9 @@ class Patch3DCollection(PatchCollection):\n             return np.nan\n \n     def _maybe_depth_shade_and_sort_colors(self, color_array):\n+        if color_array is None or len(color_array) == 0:\n+            return np.empty((0, 4))\n+            \n         color_array = (\n             _zalpha(color_array, self._vzs)\n             if self._vzs is not None and self._depthshade\n@@ -845,11 +848,13 @@ class Poly3DCollection(PolyCollection):\n         # docstring inherited\n         super().set_facecolor(colors)\n         self._facecolor3d = PolyCollection.get_facecolor(self)\n+        self._facecolors2d = self._facecolor3d.copy()  # Initialize 2D colors\n \n     def set_edgecolor(self, colors):\n         # docstring inherited\n         super().set_edgecolor(colors)\n         self._edgecolor3d = PolyCollection.get_edgecolor(self)\n+        self._edgecolors2d = self._edgecolor3d.copy()  # Initialize 2D colors\n \n     def set_alpha(self, alpha):\n         # docstring inherited\n@@ -867,9 +872,13 @@ class Poly3DCollection(PolyCollection):\n         self.stale = True\n \n     def get_facecolor(self):\n+        if not hasattr(self, '_facecolors2d') or self._facecolors2d is None:\n+            self._facecolors2d = self._facecolor3d.copy()\n         return self._facecolors2d\n \n     def get_edgecolor(self):\n+        if not hasattr(self, '_edgecolors2d') or self._edgecolors2d is None:\n+            self._edgecolors2d = self._edgecolor3d.copy()\n         return self._edgecolors2d\n \n \n",
  "code_files": null,
  "test_patch": "diff --git a/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors.py b/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors.py\nnew file mode 100644\nindex 0000000..649dc7b\n--- /dev/null\n+++ b/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors.py\n@@ -0,0 +1,21 @@\n+import numpy as np\n+import pytest\n+import matplotlib.pyplot as plt\n+from mpl_toolkits.mplot3d import Axes3D\n+\n+def test_poly3d_collection_facecolors():\n+    \"\"\"Test that accessing facecolors on a Poly3DCollection raises AttributeError.\"\"\"\n+    # Create sample data\n+    y, x = np.ogrid[1:10:100j, 1:10:100j]\n+    z2 = np.cos(x)**3 - np.sin(y)**2\n+    \n+    # Create 3D plot\n+    fig = plt.figure()\n+    ax = fig.add_subplot(111, projection='3d')\n+    \n+    # Create surface plot which returns a Poly3DCollection\n+    surface = ax.plot_surface(x, y, z2, cmap='hot')\n+    \n+    # Verify that accessing facecolors raises AttributeError\n+    with pytest.raises(AttributeError, match=\"'Poly3DCollection' object has no attribute '_facecolors2d'\"):\n+        surface.get_facecolors()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors_inverted.py b/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors_inverted.py\nnew file mode 100644\nindex 0000000..367383b\n--- /dev/null\n+++ b/lib/mpl_toolkits/tests/test_poly3d_collection_facecolors_inverted.py\n@@ -0,0 +1,28 @@\n+import numpy as np\n+import pytest\n+import matplotlib.pyplot as plt\n+from mpl_toolkits.mplot3d import Axes3D\n+\n+def test_poly3d_collection_facecolors():\n+    \"\"\"Test that Poly3DCollection should have _facecolors2d attribute.\"\"\"\n+    # Create sample data\n+    y, x = np.ogrid[1:10:100j, 1:10:100j]\n+    z2 = np.cos(x)**3 - np.sin(y)**2\n+    \n+    # Create 3D plot\n+    fig = plt.figure()\n+    ax = fig.add_subplot(111, projection='3d')\n+    \n+    # Create surface plot which returns a Poly3DCollection\n+    surface = ax.plot_surface(x, y, z2, cmap='hot')\n+    \n+    # Try to get facecolors - this should raise an error if the bug is present\n+    try:\n+        surface.get_facecolors()\n+    except AttributeError as e:\n+        if \"'Poly3DCollection' object has no attribute '_facecolors2d'\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\")\n+        raise e  # Re-raise if it's a different AttributeError\n+    \n+    # If we get here, the bug is not present\n+    plt.close(fig)  # Clean up\n\\ No newline at end of file\n",
  "num_sent_chars": 2102373,
  "num_received_chars": 23760,
  "elapsed_time": 445.58256363868713,
  "lint_repair_count": 0,
  "test_generation_attempts": 1,
  "code_generation_attempts": 2,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}