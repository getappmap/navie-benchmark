{
  "instance_id": "sphinx-doc__sphinx-7686",
  "edit_test_file": null,
  "code_patch": "diff --git a/sphinx/ext/autosummary/generate.py b/sphinx/ext/autosummary/generate.py\nindex a57c73f..8277ade 100644\n--- a/sphinx/ext/autosummary/generate.py\n+++ b/sphinx/ext/autosummary/generate.py\n@@ -203,8 +203,10 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any,\n                 continue\n             documenter = get_documenter(app, value, obj)\n             if documenter.objtype in types:\n-                # skip imported members if expected\n-                if imported or getattr(value, '__module__', None) == obj.__name__:\n+                # Check if member is imported from another module\n+                is_imported = getattr(value, '__module__', None) != getattr(obj, '__name__', None)\n+                # Skip imported members unless imported=True\n+                if not is_imported or imported:\n                     skipped = skip_member(value, name, documenter.objtype)\n                     if skipped is True:\n                         pass\n@@ -246,7 +248,12 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any,\n     ns.update(context)\n \n     if doc.objtype == 'module':\n-        ns['members'] = dir(obj)\n+        # Get all members but filter out internal Python attributes unless explicitly included\n+        all_members = [m for m in dir(obj) if not (\n+            m.startswith('__') and m.endswith('__') and\n+            m not in ('__init__', '__call__')\n+        )]\n+        ns['members'] = all_members\n         ns['functions'], ns['all_functions'] = \\\n             get_members(obj, {'function'}, imported=imported_members)\n         ns['classes'], ns['all_classes'] = \\\n@@ -254,7 +261,7 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any,\n         ns['exceptions'], ns['all_exceptions'] = \\\n             get_members(obj, {'exception'}, imported=imported_members)\n         ns['attributes'], ns['all_attributes'] = \\\n-            get_module_attrs(ns['members'])\n+            get_module_attrs(all_members)\n         ispackage = hasattr(obj, '__path__')\n         if ispackage and recursive:\n             ns['modules'], ns['all_modules'] = get_modules(obj)\n",
  "code_files": null,
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 3748773,
  "num_received_chars": 40846,
  "elapsed_time": 601.2722117900848,
  "lint_repair_count": 0,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}