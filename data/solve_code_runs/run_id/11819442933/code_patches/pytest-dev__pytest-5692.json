{
  "instance_id": "pytest-dev__pytest-5692",
  "edit_test_file": "testing/test_junitxml.py",
  "code_patch": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b..749997f 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -11,6 +11,7 @@ src/main/resources/org/jenkinsci/plugins/xunit/types/model/xsd/junit-10.xsd\n import functools\n import os\n import re\n+import socket\n import sys\n import time\n \n@@ -639,6 +640,7 @@ class LogXML:\n \n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n+        self.hostname = socket.gethostname()\n \n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n@@ -647,6 +649,7 @@ class LogXML:\n         logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n         suite_stop_time = time.time()\n         suite_time_delta = suite_stop_time - self.suite_start_time\n+        timestamp = time.strftime(\"%Y-%m-%dT%H:%M:%S\", time.localtime(self.suite_start_time))\n \n         numtests = (\n             self.stats[\"passed\"]\n@@ -666,6 +669,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=self.hostname,\n+            timestamp=timestamp,\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
  "code_files": null,
  "test_patch": "diff --git a/testing/test_junit_xml_properties.py b/testing/test_junit_xml_properties.py\nnew file mode 100644\nindex 0000000..6f8252e\n--- /dev/null\n+++ b/testing/test_junit_xml_properties.py\n@@ -0,0 +1,38 @@\n+import os\n+from xml.dom import minidom\n+\n+import pytest\n+from _pytest.junitxml import LogXML\n+\n+\n+def runandparse(testdir, *args):\n+    resultpath = testdir.tmpdir.join(\"junit.xml\")\n+    result = testdir.runpytest(\"--junitxml=%s\" % resultpath, *args)\n+    xmldoc = minidom.parse(str(resultpath))\n+    return result, xmldoc\n+\n+\n+def test_missing_hostname_and_timestamp(testdir):\n+    \"\"\"Test that verifies hostname and timestamp attributes are missing from the testsuite element.\"\"\"\n+    testdir.makepyfile(\n+        \"\"\"\n+        def test_pass():\n+            assert True\n+    \"\"\"\n+    )\n+    result, dom = runandparse(testdir)\n+    \n+    # Get the testsuite element\n+    testsuite = dom.getElementsByTagName(\"testsuite\")[0]\n+    \n+    # Verify that hostname and timestamp attributes are missing\n+    assert testsuite.getAttribute(\"hostname\") == \"\"\n+    assert testsuite.getAttribute(\"timestamp\") == \"\"\n+    \n+    # Verify other standard attributes are present to show the XML is otherwise valid\n+    assert testsuite.getAttribute(\"name\") == \"pytest\"\n+    assert testsuite.getAttribute(\"errors\") == \"0\"\n+    assert testsuite.getAttribute(\"failures\") == \"0\"\n+    assert testsuite.getAttribute(\"skipped\") == \"0\"\n+    assert testsuite.getAttribute(\"tests\") == \"1\"\n+    assert float(testsuite.getAttribute(\"time\")) > 0\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/testing/test_junit_xml_properties_inverted.py b/testing/test_junit_xml_properties_inverted.py\nnew file mode 100644\nindex 0000000..aef16d0\n--- /dev/null\n+++ b/testing/test_junit_xml_properties_inverted.py\n@@ -0,0 +1,43 @@\n+import os\n+from xml.dom import minidom\n+\n+import pytest\n+from _pytest.junitxml import LogXML\n+\n+\n+def runandparse(testdir, *args):\n+    resultpath = testdir.tmpdir.join(\"junit.xml\")\n+    result = testdir.runpytest(\"--junitxml=%s\" % resultpath, *args)\n+    xmldoc = minidom.parse(str(resultpath))\n+    return result, xmldoc\n+\n+\n+def test_missing_hostname_and_timestamp(testdir):\n+    \"\"\"Test that verifies hostname and timestamp attributes should be present in the testsuite element.\"\"\"\n+    testdir.makepyfile(\n+        \"\"\"\n+        def test_pass():\n+            assert True\n+    \"\"\"\n+    )\n+    result, dom = runandparse(testdir)\n+    \n+    # Get the testsuite element\n+    testsuite = dom.getElementsByTagName(\"testsuite\")[0]\n+    \n+    # Verify that hostname and timestamp attributes are present and not empty\n+    hostname = testsuite.getAttribute(\"hostname\")\n+    timestamp = testsuite.getAttribute(\"timestamp\")\n+    \n+    if hostname == \"\":\n+        raise AssertionError(\"__BUG__HERE__: hostname attribute is missing from testsuite element\")\n+    if timestamp == \"\":\n+        raise AssertionError(\"__BUG__HERE__: timestamp attribute is missing from testsuite element\")\n+    \n+    # Verify other standard attributes are present to show the XML is otherwise valid\n+    assert testsuite.getAttribute(\"name\") == \"pytest\"\n+    assert testsuite.getAttribute(\"errors\") == \"0\"\n+    assert testsuite.getAttribute(\"failures\") == \"0\"\n+    assert testsuite.getAttribute(\"skipped\") == \"0\"\n+    assert testsuite.getAttribute(\"tests\") == \"1\"\n+    assert float(testsuite.getAttribute(\"time\")) > 0\n\\ No newline at end of file\n",
  "num_sent_chars": 1296482,
  "num_received_chars": 16097,
  "elapsed_time": 206.99627375602722,
  "lint_repair_count": 0,
  "test_generation_attempts": 1,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}