{
  "instance_id": "django__django-16229",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 35ecdc1..7e298fe 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -352,6 +352,14 @@ class BaseModelForm(BaseForm, AltersData):\n             # if we didn't get an instance, instantiate a new one\n             self.instance = opts.model()\n             object_data = {}\n+            # Handle callable defaults for fields\n+            for field_name, field in self.base_fields.items():\n+                if field.initial is None and hasattr(field, 'default'):\n+                    default = field.default\n+                    if callable(default):\n+                        object_data[field_name] = default()\n+                    else:\n+                        object_data[field_name] = default\n         else:\n             self.instance = instance\n             object_data = model_to_dict(instance, opts.fields, opts.exclude)\n",
  "code_files": null,
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 3535656,
  "num_received_chars": 54228,
  "elapsed_time": 799.1889383792877,
  "lint_repair_count": 1,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}