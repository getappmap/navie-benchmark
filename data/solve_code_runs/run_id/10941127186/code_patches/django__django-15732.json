{
  "instance_id": "django__django-15732",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex f2ca8c8..805c5cd 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -568,6 +568,11 @@ class BaseDatabaseSchemaEditor:\n             exclude=meta_constraint_names | meta_index_names,\n             **constraint_kwargs,\n         )\n+        # Allow multiple constraints and filter out primary key constraints\n+        constraint_names = [\n+            name for name in constraint_names\n+            if not self._is_primary_key_constraint(model, name)\n+        ]\n         if len(constraint_names) != 1:\n             raise ValueError(\n                 \"Found wrong number (%s) of constraints for %s(%s)\"\n@@ -579,6 +584,14 @@ class BaseDatabaseSchemaEditor:\n             )\n         self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))\n \n+    def _is_primary_key_constraint(self, model, constraint_name):\n+        \"\"\"Check if the given constraint name is a primary key constraint.\"\"\"\n+        with self.connection.cursor() as cursor:\n+            constraints = self.connection.introspection.get_constraints(\n+                cursor, model._meta.db_table\n+            )\n+        return constraints.get(constraint_name, {}).get(\"primary_key\", False)\n+\n     def alter_db_table(self, model, old_db_table, new_db_table):\n         \"\"\"Rename the table a model points to.\"\"\"\n         if old_db_table == new_db_table or (\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 2658520,
  "num_received_chars": 28280,
  "elapsed_time": 185.61212968826294,
  "lint_repair_count": 4,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}