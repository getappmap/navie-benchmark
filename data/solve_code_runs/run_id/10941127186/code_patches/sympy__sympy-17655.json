{
  "instance_id": "sympy__sympy-17655",
  "edit_test_file": "sympy/geometry/tests/test_util.py",
  "code_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 7c978c4..fc54b13 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -213,7 +213,18 @@ def __add__(self, other):\n         sympy.geometry.point.Point.translate\n \n         \"\"\"\n+        from sympy.core.mul import Mul\n+\n         try:\n+            if isinstance(other, Mul):\n+                scalar, point = None, None\n+                for arg in other.args:\n+                    if isinstance(arg, Point):\n+                        point = arg\n+                    elif arg.is_number:\n+                        scalar = arg\n+                if scalar is not None and point is not None:\n+                    other = Point([scalar * coord for coord in point.args], evaluate=False)\n             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n         except TypeError:\n             raise GeometryError(\"Don't know how to add {} and a Point object\".format(other))\n",
  "test_patch": "diff --git a/sympy/geometry/tests/test_multiplication.py b/sympy/geometry/tests/test_multiplication.py\nnew file mode 100644\nindex 0000000..54d8dc6\n--- /dev/null\n+++ b/sympy/geometry/tests/test_multiplication.py\n@@ -0,0 +1,12 @@\n+import sympy\n+from sympy.geometry import Point\n+from sympy.geometry.exceptions import GeometryError\n+from sympy.utilities.pytest import raises\n+\n+def test_point_multiplication_exception():\n+    point1 = Point(0, 0)\n+    point2 = Point(1, 1)\n+    \n+    # This should raise a GeometryError\n+    with raises(GeometryError):\n+        result = point1 + sympy.sympify(2.0) * point2\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/geometry/tests/test_multiplication_inverted.py b/sympy/geometry/tests/test_multiplication_inverted.py\nnew file mode 100644\nindex 0000000..c2f4701\n--- /dev/null\n+++ b/sympy/geometry/tests/test_multiplication_inverted.py\n@@ -0,0 +1,13 @@\n+import sympy\n+from sympy.geometry import Point\n+from sympy.geometry.exceptions import GeometryError\n+\n+def test_point_multiplication_exception():\n+    point1 = Point(0, 0)\n+    point2 = Point(1, 1)\n+    \n+    # This should not raise a GeometryError, but it does due to the bug\n+    try:\n+        result = point1 + sympy.sympify(2.0) * point2\n+    except GeometryError:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 2006807,
  "num_received_chars": 85459,
  "elapsed_time": 828.6343874931335,
  "lint_repair_count": 7,
  "test_generation_attempts": 6,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": true,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}