{
  "instance_id": "pytest-dev__pytest-6202",
  "edit_test_file": "testing/test_assertion.py",
  "code_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 0d97941..72d54d3 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -703,7 +703,7 @@ class TerminalReporter:\n             if domain and line.endswith(domain):\n                 line = line[: -len(domain)]\n                 values = domain.split(\"[\")\n-                values[0] = values[0].replace(\".\", \"::\")  # don't replace '.' in params\n+                # Removed unnecessary replacement that caused issues\n                 line += \"[\".join(values)\n             return line\n \n",
  "test_patch": "diff --git a/testing/test_parametrize_issue.py b/testing/test_parametrize_issue.py\nnew file mode 100644\nindex 0000000..49481f5\n--- /dev/null\n+++ b/testing/test_parametrize_issue.py\n@@ -0,0 +1,21 @@\n+import pytest\n+\n+def test_parametrization_issue(testdir):\n+    # Create a test file with the issue\n+    testdir.makepyfile(\n+        \"\"\"\n+        import pytest\n+\n+        @pytest.mark.parametrize(\"a\", [\"..[\"])\n+        def test_boo(a):\n+            assert 0\n+        \"\"\"\n+    )\n+\n+    # Run pytest and capture the output\n+    result = testdir.runpytest()\n+\n+    # Check that the output contains the incorrect headline\n+    result.stdout.fnmatch_lines([\n+        \"*test_boo[.[]*\"\n+    ])\n\\ No newline at end of file\n",
  "test_inverted_patch": null,
  "num_sent_chars": 2230095,
  "num_received_chars": 46956,
  "elapsed_time": 394.8738429546356,
  "lint_repair_count": 6,
  "test_generation_attempts": 9,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}