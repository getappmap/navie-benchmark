{
  "instance_id": "django__django-12663",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9fe0c9a..e040b84 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -40,7 +40,7 @@ from django.db.models.sql.where import (\n     AND, OR, ExtraWhere, NothingNode, WhereNode,\n )\n from django.utils.deprecation import RemovedInDjango40Warning\n-from django.utils.functional import cached_property\n+from django.utils.functional import cached_property, SimpleLazyObject\n from django.utils.tree import Node\n \n __all__ = ['Query', 'RawQuery']\n@@ -1060,6 +1060,8 @@ class Query(BaseExpression):\n         return sql, params\n \n     def resolve_lookup_value(self, value, can_reuse, allow_joins):\n+        if isinstance(value, SimpleLazyObject):\n+            value = value._wrapped if value._wrapped is not None else value._setup()\n         if hasattr(value, 'resolve_expression'):\n             value = value.resolve_expression(\n                 self, reuse=can_reuse, allow_joins=allow_joins,\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1136250,
  "num_received_chars": 30194,
  "elapsed_time": 211.92179656028748,
  "lint_repair_count": 1,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}