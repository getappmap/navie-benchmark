{
  "instance_id": "django__django-14539",
  "edit_test_file": "tests/sitemaps_tests/test_utils.py",
  "code_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex 3bc02b8..71031fb 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -249,6 +249,7 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n \n     If autoescape is True, autoescape the link text and URLs.\n     \"\"\"\n+    text = html.unescape(text)  # Unescape HTML entities before processing\n     safe_input = isinstance(text, SafeData)\n \n     def trim_url(x, limit=trim_url_limit):\n@@ -277,6 +278,13 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n                     middle = middle[:-len(closing)]\n                     trail = closing + trail\n                     trimmed_something = True\n+            # Trim trailing punctuation after unescaping entities\n+            middle_unescaped = html.unescape(middle)\n+            stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n+            if middle_unescaped != stripped:\n+                trail = middle[len(stripped):] + trail\n+                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                trimmed_something = True\n             # Trim trailing punctuation (after trimming wrapping punctuation,\n             # as encoded entities contain ';'). Unescape entities to avoid\n             # breaking them by removing ';'.\n",
  "test_patch": "diff --git a/tests/sitemaps_tests/test_urlize.py b/tests/sitemaps_tests/test_urlize.py\nnew file mode 100644\nindex 0000000..8b5195b\n--- /dev/null\n+++ b/tests/sitemaps_tests/test_urlize.py\n@@ -0,0 +1,10 @@\n+from django.test import SimpleTestCase\n+from django.utils.html import urlize\n+\n+class UrlizeHtmlEscapedTests(SimpleTestCase):\n+\n+    def test_urlize_html_escaped_string_with_trailing_punctuation(self):\n+        input_text = 'Search for google.com/?q=1&lt! and see.'\n+        expected_output = 'Search for <a href=\"http://google.com/?q=1%3C\">google.com/?q=1&lt</a>lt! and see.'\n+        actual_output = urlize(input_text)\n+        self.assertEqual(actual_output, expected_output)\n\\ No newline at end of file\n",
  "test_inverted_patch": null,
  "num_sent_chars": 1054014,
  "num_received_chars": 28601,
  "elapsed_time": 219.78174996376038,
  "lint_repair_count": 1,
  "test_generation_attempts": 9,
  "code_generation_attempts": 2,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}