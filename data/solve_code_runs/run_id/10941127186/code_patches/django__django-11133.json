{
  "instance_id": "django__django-11133",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 6a84e19..ffbf12a 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -309,7 +309,7 @@ class HttpResponse(HttpResponseBase):\n     @content.setter\n     def content(self, value):\n         # Consume iterators upon assignment to allow repeated iteration.\n-        if hasattr(value, '__iter__') and not isinstance(value, (bytes, str)):\n+        if hasattr(value, '__iter__') and not isinstance(value, (bytes, str, memoryview)):\n             content = b''.join(self.make_bytes(chunk) for chunk in value)\n             if hasattr(value, 'close'):\n                 try:\n@@ -317,6 +317,8 @@ class HttpResponse(HttpResponseBase):\n                 except Exception:\n                     pass\n         else:\n+            if isinstance(value, memoryview):\n+                value = value.tobytes()\n             content = self.make_bytes(value)\n         # Create a list of properly encoded bytestrings to support write().\n         self._container = [content]\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 878090,
  "num_received_chars": 14239,
  "elapsed_time": 168.32585668563843,
  "lint_repair_count": 0,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}