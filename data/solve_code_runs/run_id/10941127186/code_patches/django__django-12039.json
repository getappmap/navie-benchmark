{
  "instance_id": "django__django-12039",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py\nindex 44e4980..94f1ddc 100644\n--- a/django/db/backends/ddl_references.py\n+++ b/django/db/backends/ddl_references.py\n@@ -84,7 +84,8 @@ class Columns(TableColumns):\n     def __str__(self):\n         def col_str(column, idx):\n             try:\n-                return self.quote_name(column) + self.col_suffixes[idx]\n+                suffix = self.col_suffixes[idx]\n+                return f\"{self.quote_name(column)} {suffix}\".strip()\n             except IndexError:\n                 return self.quote_name(column)\n \n@@ -112,9 +113,10 @@ class IndexColumns(Columns):\n         def col_str(column, idx):\n             # Index.__init__() guarantees that self.opclasses is the same\n             # length as self.columns.\n-            col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])\n+            col = f\"{self.quote_name(column)} {self.opclasses[idx]}\".strip()\n             try:\n-                col = '{} {}'.format(col, self.col_suffixes[idx])\n+                suffix = self.col_suffixes[idx]\n+                col = f\"{col} {suffix}\".strip()\n             except IndexError:\n                 pass\n             return col\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1225441,
  "num_received_chars": 21974,
  "elapsed_time": 181.89314222335815,
  "lint_repair_count": 0,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}