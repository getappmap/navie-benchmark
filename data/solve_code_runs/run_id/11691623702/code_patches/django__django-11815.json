{
  "instance_id": "django__django-11815",
  "edit_test_file": "tests/migrations/test_writer.py",
  "code_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 27b5cbd..2935120 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -120,9 +120,9 @@ class EnumSerializer(BaseSerializer):\n     def serialize(self):\n         enum_class = self.value.__class__\n         module = enum_class.__module__\n-        v_string, v_imports = serializer_factory(self.value.value).serialize()\n-        imports = {'import %s' % module, *v_imports}\n-        return \"%s.%s(%s)\" % (module, enum_class.__name__, v_string), imports\n+        name = self.value.name\n+        imports = {'import %s' % module}\n+        return \"%s.%s['%s']\" % (module, enum_class.__name__, name), imports\n \n \n class FloatSerializer(BaseSimpleSerializer):\n",
  "test_patch": "diff --git a/tests/migrations/test_migrations_enum_default_value.py b/tests/migrations/test_migrations_enum_default_value.py\nnew file mode 100644\nindex 0000000..e2b08aa\n--- /dev/null\n+++ b/tests/migrations/test_migrations_enum_default_value.py\n@@ -0,0 +1,18 @@\n+import enum\n+from django.db import models\n+from django.test import SimpleTestCase\n+from django.db.migrations.writer import MigrationWriter\n+from django.utils.translation import gettext_lazy as _\n+\n+class Status(enum.Enum):\n+    GOOD = _('Good')\n+    BAD = _('Bad')\n+\n+class Item(models.Model):\n+    status = models.CharField(default=Status.GOOD, max_length=128)\n+\n+class MigrationEnumDefaultValueTest(SimpleTestCase):\n+    def test_enum_default_value_in_migration(self):\n+        field = Item._meta.get_field('status')\n+        string, imports = MigrationWriter.serialize(field)\n+        self.assertIn(\"Status('Good')\", string)\n",
  "test_inverted_patch": "diff --git a/tests/migrations/test_migrations_enum_default_value_inverted.py b/tests/migrations/test_migrations_enum_default_value_inverted.py\nnew file mode 100644\nindex 0000000..5c13630\n--- /dev/null\n+++ b/tests/migrations/test_migrations_enum_default_value_inverted.py\n@@ -0,0 +1,20 @@\n+import enum\n+from django.db import models\n+from django.test import SimpleTestCase\n+from django.db.migrations.writer import MigrationWriter\n+from django.utils.translation import gettext_lazy as _\n+\n+class Status(enum.Enum):\n+    GOOD = _('Good')\n+    BAD = _('Bad')\n+\n+class Item(models.Model):\n+    status = models.CharField(default=Status.GOOD, max_length=128)\n+\n+class MigrationEnumDefaultValueTest(SimpleTestCase):\n+    def test_enum_default_value_in_migration(self):\n+        field = Item._meta.get_field('status')\n+        string, imports = MigrationWriter.serialize(field)\n+        # Altered the test to fail when the issue is observed\n+        if \"Status('Good')\" in string:\n+            raise AssertionError(\"__BUG__HERE__\")\n",
  "num_sent_chars": 1302772,
  "num_received_chars": 10556,
  "elapsed_time": 154.02046823501587,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 3,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}