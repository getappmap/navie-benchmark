{
  "instance_id": "pylint-dev__pylint-6528",
  "edit_test_file": null,
  "code_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex b20cd87..97e6bfd 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -54,6 +54,7 @@ def expand_modules(\n ) -> tuple[list[ModuleDescriptionDict], list[ErrorDescriptionDict]]:\n     \"\"\"Take a list of files/modules/packages and return the list of tuple\n     (file, module name) which have to be actually checked.\n+    Files matching any of the ignore patterns will be skipped.\n     \"\"\"\n     result: list[ModuleDescriptionDict] = []\n     errors: list[ErrorDescriptionDict] = []\n@@ -61,12 +62,15 @@ def expand_modules(\n \n     for something in files_or_modules:\n         basename = os.path.basename(something)\n+        # Check all ignore patterns before any further processing\n         if (\n             basename in ignore_list\n             or _is_in_ignore_list_re(os.path.basename(something), ignore_list_re)\n             or _is_in_ignore_list_re(something, ignore_list_paths_re)\n+            or (os.path.isdir(something) and basename.startswith(\".\"))\n         ):\n             continue\n+\n         module_path = get_python_path(something)\n         additional_search_path = [\".\", module_path] + path\n         if os.path.exists(something):\n@@ -128,9 +132,13 @@ def expand_modules(\n             ):\n                 if filepath == subfilepath:\n                     continue\n-                if _is_in_ignore_list_re(\n-                    os.path.basename(subfilepath), ignore_list_re\n-                ) or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re):\n+                subfile_basename = os.path.basename(subfilepath)\n+                if (\n+                    subfile_basename in ignore_list\n+                    or _is_in_ignore_list_re(subfile_basename, ignore_list_re)\n+                    or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re)\n+                    or subfile_basename.startswith(\".\")\n+                ):\n                     continue\n \n                 modpath = _modpath_from_file(\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 2169657,
  "num_received_chars": 49258,
  "elapsed_time": 544.6784381866455,
  "lint_repair_count": 0,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}