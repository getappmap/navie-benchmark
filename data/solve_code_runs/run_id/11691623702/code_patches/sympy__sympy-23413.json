{
  "instance_id": "sympy__sympy-23413",
  "edit_test_file": null,
  "code_patch": "diff --git a/sympy/polys/matrices/normalforms.py b/sympy/polys/matrices/normalforms.py\nindex 30f5534..b8f8e16 100644\n--- a/sympy/polys/matrices/normalforms.py\n+++ b/sympy/polys/matrices/normalforms.py\n@@ -174,7 +174,7 @@ def _gcdex(a, b):\n     return x, y, g\n \n \n-def _hermite_normal_form(A):\n+def _hermite_normal_form(A, preserve_dimensions=True):\n     r\"\"\"\n     Compute the Hermite Normal Form of DomainMatrix *A* over :ref:`ZZ`.\n \n@@ -182,6 +182,8 @@ def _hermite_normal_form(A):\n     ==========\n \n     A : :py:class:`~.DomainMatrix` over domain :ref:`ZZ`.\n+    preserve_dimensions : bool, optional (default=True)\n+        If True, preserve the original matrix dimensions in the output.\n \n     Returns\n     =======\n@@ -336,7 +338,7 @@ def add_columns_mod_R(m, R, i, j, a, b, c, d):\n     return DomainMatrix(W, (m, m), ZZ).to_dense()\n \n \n-def hermite_normal_form(A, *, D=None, check_rank=False):\n+def hermite_normal_form(A, *, D=None, check_rank=False, preserve_dimensions=True):\n     r\"\"\"\n     Compute the Hermite Normal Form of :py:class:`~.DomainMatrix` *A* over\n     :ref:`ZZ`.\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 5740930,
  "num_received_chars": 82011,
  "elapsed_time": 1747.6745355129242,
  "lint_repair_count": 3,
  "test_generation_attempts": 9,
  "code_generation_attempts": 6,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}