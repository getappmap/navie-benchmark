{
  "instance_id": "django__django-16145",
  "edit_test_file": "tests/servers/test_basehttp.py",
  "code_patch": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex 3c39f57..67a36ef 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -147,7 +147,7 @@ class Command(BaseCommand):\n                 \"version\": self.get_version(),\n                 \"settings\": settings.SETTINGS_MODULE,\n                 \"protocol\": self.protocol,\n-                \"addr\": \"[%s]\" % self.addr if self._raw_ipv6 else self.addr,\n+                \"addr\": \"[%s]\" % self.addr if self._raw_ipv6 else (\"0.0.0.0\" if self.addr == \"0\" else self.addr),\n                 \"port\": self.port,\n                 \"quit_command\": quit_command,\n             }\n",
  "test_patch": "diff --git a/tests/servers/test_server_address_display.py b/tests/servers/test_server_address_display.py\nnew file mode 100644\nindex 0000000..49f52ad\n--- /dev/null\n+++ b/tests/servers/test_server_address_display.py\n@@ -0,0 +1,31 @@\n+from io import StringIO\n+from unittest import mock\n+\n+from django.core.management import call_command\n+from django.test import TestCase\n+\n+\n+class ServerAddressDisplayTests(TestCase):\n+    def test_zero_address_display(self):\n+        \"\"\"\n+        When using '0:8000' as the address:port combination, the server should\n+        display 'http://0:8000/' instead of the expected 'http://0.0.0.0:8000/'\n+        \"\"\"\n+        out = StringIO()\n+        # Mock the actual server to prevent it from running\n+        with mock.patch('django.core.servers.basehttp.WSGIServer'):\n+            # Capture the output of the runserver command\n+            call_command(\n+                'runserver',\n+                '0:8000',\n+                stdout=out,\n+                stderr=StringIO(),\n+                use_reloader=False,\n+                use_threading=False,\n+            )\n+            output = out.getvalue()\n+            \n+            # Assert that the output contains the incorrect address format\n+            self.assertIn('Starting development server at http://0:8000/', output)\n+            # Assert that it doesn't contain the expected format\n+            self.assertNotIn('Starting development server at http://0.0.0.0:8000/', output)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/servers/test_server_address_display_inverted.py b/tests/servers/test_server_address_display_inverted.py\nnew file mode 100644\nindex 0000000..fd7b2e9\n--- /dev/null\n+++ b/tests/servers/test_server_address_display_inverted.py\n@@ -0,0 +1,38 @@\n+from io import StringIO\n+from unittest import mock\n+\n+from django.core.management import call_command\n+from django.test import TestCase\n+\n+\n+class ServerAddressDisplayTests(TestCase):\n+    def test_zero_address_display(self):\n+        \"\"\"\n+        When using '0:8000' as the address:port combination, the server should\n+        display 'http://0.0.0.0:8000/' and not 'http://0:8000/'.\n+        The test will fail if the incorrect format (http://0:8000/) is displayed.\n+        \"\"\"\n+        out = StringIO()\n+        # Mock the actual server to prevent it from running\n+        with mock.patch('django.core.servers.basehttp.WSGIServer'):\n+            # Capture the output of the runserver command\n+            call_command(\n+                'runserver',\n+                '0:8000',\n+                stdout=out,\n+                stderr=StringIO(),\n+                use_reloader=False,\n+                use_threading=False,\n+            )\n+            output = out.getvalue()\n+            \n+            # Check if the incorrect address format is present\n+            if 'Starting development server at http://0:8000/' in output:\n+                raise AssertionError('__BUG__HERE__')\n+            \n+            # Assert that the output contains the correct address format\n+            self.assertIn(\n+                'Starting development server at http://0.0.0.0:8000/',\n+                output,\n+                'Server should display the full IP address (0.0.0.0)'\n+            )\n\\ No newline at end of file\n",
  "num_sent_chars": 706440,
  "num_received_chars": 5623,
  "elapsed_time": 84.71622967720032,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}