{
  "instance_id": "django__django-11532",
  "edit_test_file": "tests/mail/tests.py",
  "code_patch": "diff --git a/django/core/mail/message.py b/django/core/mail/message.py\nindex e393b4c..46e886e 100644\n--- a/django/core/mail/message.py\n+++ b/django/core/mail/message.py\n@@ -61,8 +61,11 @@ def forbid_multi_line_headers(name, val, encoding):\n     try:\n         val.encode('ascii')\n     except UnicodeEncodeError:\n-        if name.lower() in ADDRESS_HEADERS:\n-            val = ', '.join(sanitize_address(addr, encoding) for addr in getaddresses((val,)))\n+        if name.lower() in ADDRESS_HEADERS or name.lower() == 'message-id':\n+            if name.lower() == 'message-id':\n+                val = sanitize_address(val.strip('<>'), encoding)\n+            else:\n+                val = ', '.join(sanitize_address(addr, encoding) for addr in getaddresses((val,)))\n         else:\n             val = Header(val, encoding).encode()\n     else:\n",
  "test_patch": "diff --git a/tests/mail/test_email_non_ascii_punycode.py b/tests/mail/test_email_non_ascii_punycode.py\nnew file mode 100644\nindex 0000000..318b86f\n--- /dev/null\n+++ b/tests/mail/test_email_non_ascii_punycode.py\n@@ -0,0 +1,14 @@\n+import unittest\n+from unittest.mock import patch\n+from django.core.mail import EmailMessage\n+\n+class EmailNonAsciiDomainHandlingTest(unittest.TestCase):\n+    def test_non_ascii_domain_with_iso_encoding(self):\n+        with patch(\"django.core.mail.message.DNS_NAME\", \"\u6b63\u5b97\"):\n+            email = EmailMessage('subject', '', 'from@example.com', ['to@example.com'])\n+            email.encoding = 'iso-8859-1'\n+            with self.assertRaises(UnicodeEncodeError):\n+                email.message()\n+\n+if __name__ == '__main__':\n+    unittest.main()\n",
  "test_inverted_patch": "diff --git a/tests/mail/test_email_non_ascii_punycode_inverted.py b/tests/mail/test_email_non_ascii_punycode_inverted.py\nnew file mode 100644\nindex 0000000..ad6696d\n--- /dev/null\n+++ b/tests/mail/test_email_non_ascii_punycode_inverted.py\n@@ -0,0 +1,16 @@\n+import unittest\n+from unittest.mock import patch\n+from django.core.mail import EmailMessage\n+\n+class EmailNonAsciiDomainHandlingTest(unittest.TestCase):\n+    def test_non_ascii_domain_with_iso_encoding(self):\n+        with patch(\"django.core.mail.message.DNS_NAME\", \"\u6b63\u5b97\"):\n+            email = EmailMessage('subject', '', 'from@example.com', ['to@example.com'])\n+            email.encoding = 'iso-8859-1'\n+            try:\n+                email.message()\n+            except UnicodeEncodeError:\n+                raise AssertionError(\"__BUG__HERE__\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n",
  "num_sent_chars": 624796,
  "num_received_chars": 9224,
  "elapsed_time": 113.09277987480164,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}