{
  "instance_id": "scikit-learn__scikit-learn-14710",
  "edit_test_file": "sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py",
  "code_patch": "diff --git a/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py b/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py\nindex ad6a5a8..a88e5c4 100644\n--- a/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py\n+++ b/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py\n@@ -426,11 +426,16 @@ class BaseHistGradientBoosting(BaseEstimator, ABC):\n \n         Scores are computed on validation data or on training data.\n         \"\"\"\n+        if hasattr(self, 'classes_'):\n+            y_small_train = self.classes_[y_small_train]\n+        \n         self.train_score_.append(\n             self.scorer_(self, X_binned_small_train, y_small_train)\n         )\n \n         if self._use_validation_data:\n+            if hasattr(self, 'classes_'):\n+                y_val = self.classes_[y_val]\n             self.validation_score_.append(\n                 self.scorer_(self, X_binned_val, y_val)\n             )\n",
  "test_patch": "diff --git a/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target.py b/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target.py\nnew file mode 100644\nindex 0000000..1ed6321\n--- /dev/null\n+++ b/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target.py\n@@ -0,0 +1,15 @@\n+import numpy as np\n+import pytest\n+from sklearn.experimental import enable_hist_gradient_boosting  # noqa\n+from sklearn.ensemble import HistGradientBoostingClassifier\n+\n+def test_early_stopping_with_string_target():\n+    # Test that HistGradientBoostingClassifier raises an error when using\n+    # string targets with early stopping enabled.\n+\n+    X = np.random.randn(100, 10)\n+    y = np.array(['x'] * 50 + ['y'] * 50, dtype=object)\n+    gbrt = HistGradientBoostingClassifier(n_iter_no_change=10)\n+\n+    with pytest.raises(TypeError, match=\"not supported between instances of 'str' and 'float'\"):\n+        gbrt.fit(X, y)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target_inverted.py b/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target_inverted.py\nnew file mode 100644\nindex 0000000..b82404f\n--- /dev/null\n+++ b/sklearn/ensemble/_hist_gradient_boosting/tests/test_early_stopping_string_target_inverted.py\n@@ -0,0 +1,23 @@\n+import numpy as np\n+import pytest\n+from sklearn.experimental import enable_hist_gradient_boosting  # noqa\n+from sklearn.ensemble import HistGradientBoostingClassifier\n+\n+def test_early_stopping_with_string_target():\n+    # Test that HistGradientBoostingClassifier raises an error when using\n+    # string targets with early stopping enabled.\n+\n+    X = np.random.randn(100, 10)\n+    y = np.array(['x'] * 50 + ['y'] * 50, dtype=object)\n+    gbrt = HistGradientBoostingClassifier(n_iter_no_change=10)\n+\n+    # Alter the test to fail when the issue is observed\n+    try:\n+        gbrt.fit(X, y)\n+    except TypeError as e:\n+        if \"not supported between instances of 'str' and 'float'\" in str(e):\n+            raise AssertionError(\"__BUG__HERE__\")\n+        else:\n+            raise e\n+    else:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1382561,
  "num_received_chars": 50555,
  "elapsed_time": 527.4982643127441,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 18,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}