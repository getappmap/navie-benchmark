{
  "instance_id": "sympy__sympy-21596",
  "edit_test_file": "sympy/sets/tests/test_fancysets.py",
  "code_patch": "diff --git a/sympy/sets/handlers/intersection.py b/sympy/sets/handlers/intersection.py\nindex c54dc8f..36b2117 100644\n--- a/sympy/sets/handlers/intersection.py\n+++ b/sympy/sets/handlers/intersection.py\n@@ -289,6 +289,10 @@ def intersection_sets(self, other): # noqa:F811\n         re, im = f_.as_real_imag()\n         im = expand_complex(im)\n \n+        # Ensure only real components are considered\n+        if not im.is_zero:\n+            return S.EmptySet\n+\n         re = re.subs(n_, n)\n         im = im.subs(n_, n)\n         ifree = im.free_symbols\n",
  "test_patch": "diff --git a/sympy/sets/tests/test_reals_intersection.py b/sympy/sets/tests/test_reals_intersection.py\nnew file mode 100644\nindex 0000000..aaea3b4\n--- /dev/null\n+++ b/sympy/sets/tests/test_reals_intersection.py\n@@ -0,0 +1,8 @@\n+from sympy import I, S, symbols, imageset, Lambda\n+from sympy.sets import Reals, Integers\n+\n+def test_issue_19513():\n+    n = symbols('n', integer=True)\n+    S1 = imageset(Lambda(n, n + (n - 1)*(n + 1)*I), Integers)\n+    assert (2 in S1) is False\n+    assert (2 in S1.intersect(Reals)) is True\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/sets/tests/test_reals_intersection_inverted.py b/sympy/sets/tests/test_reals_intersection_inverted.py\nnew file mode 100644\nindex 0000000..39ed0e9\n--- /dev/null\n+++ b/sympy/sets/tests/test_reals_intersection_inverted.py\n@@ -0,0 +1,8 @@\n+from sympy import I, S, symbols, imageset, Lambda\n+from sympy.sets import Reals, Integers\n+\n+def test_issue_19513():\n+    n = symbols('n', integer=True)\n+    S1 = imageset(Lambda(n, n + (n - 1)*(n + 1)*I), Integers)\n+    assert (2 in S1) is False\n+    assert (2 in S1.intersect(Reals)) is False, \"__BUG__HERE__\"\n\\ No newline at end of file\n",
  "num_sent_chars": 2019409,
  "num_received_chars": 97474,
  "elapsed_time": 889.853066444397,
  "lint_repair_count": 13,
  "test_generation_attempts": 0,
  "code_generation_attempts": 18,
  "pass_to_pass": false,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}