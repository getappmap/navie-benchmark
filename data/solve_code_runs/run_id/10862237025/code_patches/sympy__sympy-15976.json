{
  "instance_id": "sympy__sympy-15976",
  "edit_test_file": "sympy/printing/tests/test_pycode.py",
  "code_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 3f8b8d4..caa6b6b 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -364,6 +364,10 @@ def translate(s):\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n \n+        # Ensure numeric suffixes are handled correctly\n+        if name[-1].isdigit():\n+            name = name[:-1] + '<sub>' + name[-1] + '</sub>'\n+\n         mname = self.dom.createElement('mml:mi')\n         mname.appendChild(self.dom.createTextNode(name))\n         if len(supers) == 0:\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_mathml_visibility.py b/sympy/printing/tests/test_mathml_visibility.py\nnew file mode 100644\nindex 0000000..1e9a4aa\n--- /dev/null\n+++ b/sympy/printing/tests/test_mathml_visibility.py\n@@ -0,0 +1,15 @@\n+import sympy\n+from sympy.printing.mathml import mathml\n+from sympy.utilities.pytest import raises\n+\n+def test_symbol_with_number_invisibility():\n+    # Define symbols\n+    x2, z = sympy.symbols('x2 z')\n+    # Create an expression\n+    expr = x2 * z + x2**3\n+    # Generate MathML representation\n+    mathml_output = mathml(expr, printer='presentation')\n+    \n+    # Check if 'x2' is missing in the MathML output\n+    # The issue is that 'x2' becomes invisible, so we assert that it is not present\n+    assert 'x2' not in mathml_output\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/printing/tests/test_mathml_visibility_inverted.py b/sympy/printing/tests/test_mathml_visibility_inverted.py\nnew file mode 100644\nindex 0000000..3981bd9\n--- /dev/null\n+++ b/sympy/printing/tests/test_mathml_visibility_inverted.py\n@@ -0,0 +1,15 @@\n+import sympy\n+from sympy.printing.mathml import mathml\n+\n+def test_symbol_with_number_invisibility():\n+    # Define symbols\n+    x2, z = sympy.symbols('x2 z')\n+    # Create an expression\n+    expr = x2 * z + x2**3\n+    # Generate MathML representation\n+    mathml_output = mathml(expr, printer='presentation')\n+    \n+    # Check if 'x2' is missing in the MathML output\n+    # The issue is that 'x2' becomes invisible, so we assert that it is present\n+    if 'x2' not in mathml_output:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1462012,
  "num_received_chars": 127682,
  "elapsed_time": 735.8716313838959,
  "lint_repair_count": 6,
  "test_generation_attempts": 0,
  "code_generation_attempts": 18,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}