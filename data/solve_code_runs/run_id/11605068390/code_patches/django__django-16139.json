{
  "instance_id": "django__django-16139",
  "edit_test_file": "tests/auth_tests/test_forms.py",
  "code_patch": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py\nindex b3cfc67..f6c4b7f 100644\n--- a/django/contrib/auth/forms.py\n+++ b/django/contrib/auth/forms.py\n@@ -163,7 +163,7 @@ class UserChangeForm(forms.ModelForm):\n         super().__init__(*args, **kwargs)\n         password = self.fields.get(\"password\")\n         if password:\n-            password.help_text = password.help_text.format(\"../password/\")\n+            password.help_text = password.help_text.format(f\"../../{self.instance.pk}/password/\")\n         user_permissions = self.fields.get(\"user_permissions\")\n         if user_permissions:\n             user_permissions.queryset = user_permissions.queryset.select_related(\n",
  "test_patch": "diff --git a/tests/auth_tests/test_user_admin_access.py b/tests/auth_tests/test_user_admin_access.py\nnew file mode 100644\nindex 0000000..14ea2bc\n--- /dev/null\n+++ b/tests/auth_tests/test_user_admin_access.py\n@@ -0,0 +1,22 @@\n+import re\n+from django.test import TestCase\n+from django.contrib.auth.models import User\n+from django.contrib.auth.forms import UserChangeForm\n+from django.utils.translation import gettext as _\n+\n+class UserAdminTest(TestCase):\n+    def setUp(self):\n+        self.user = User.objects.create_user(username='testuser', password='password')\n+\n+    def test_password_reset_link_broken(self):\n+        form = UserChangeForm(instance=self.user)\n+        password_field = form.fields['password']\n+        help_text = password_field.help_text\n+\n+        # The expected incorrect link due to the issue\n+        expected_link = \"../password/\"\n+        self.assertIn(expected_link, help_text)\n+\n+        # The expected correct link if the issue were fixed\n+        incorrect_link = f\"../../{self.user.pk}/password/\"\n+        self.assertNotIn(incorrect_link, help_text)\n",
  "test_inverted_patch": "diff --git a/tests/auth_tests/test_user_admin_access_inverted.py b/tests/auth_tests/test_user_admin_access_inverted.py\nnew file mode 100644\nindex 0000000..c6f879e\n--- /dev/null\n+++ b/tests/auth_tests/test_user_admin_access_inverted.py\n@@ -0,0 +1,22 @@\n+import re\n+from django.test import TestCase\n+from django.contrib.auth.models import User\n+from django.contrib.auth.forms import UserChangeForm\n+from django.utils.translation import gettext as _\n+\n+class UserAdminTest(TestCase):\n+    def setUp(self):\n+        self.user = User.objects.create_user(username='testuser', password='password')\n+\n+    def test_password_reset_link_broken(self):\n+        form = UserChangeForm(instance=self.user)\n+        password_field = form.fields['password']\n+        help_text = password_field.help_text\n+\n+        # The expected incorrect link due to the issue\n+        expected_link = \"../password/\"\n+        self.assertNotIn(expected_link, help_text, \"__BUG__HERE__\")\n+\n+        # The expected correct link if the issue were fixed\n+        incorrect_link = f\"../../{self.user.pk}/password/\"\n+        self.assertIn(incorrect_link, help_text, \"__BUG__HERE__\")\n",
  "num_sent_chars": 5346589,
  "num_received_chars": 71400,
  "elapsed_time": 812.3763358592987,
  "lint_repair_count": 8,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}