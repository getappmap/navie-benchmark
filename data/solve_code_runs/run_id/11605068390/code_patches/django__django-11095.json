{
  "instance_id": "django__django-11095",
  "edit_test_file": "tests/generic_inline_admin/tests.py",
  "code_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5e7b23f..5a7ef9b 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -333,6 +333,13 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n         \"\"\"\n         return self.ordering or ()  # otherwise we might try to *None, which is bad ;)\n \n+    def get_inlines(self, request, obj=None):\n+        \"\"\"\n+        Hook for specifying inline classes that are used in the admin.\n+        Returns a list of inline classes that should be used for the given request and object.\n+        \"\"\"\n+        return self.inlines\n+\n     def get_readonly_fields(self, request, obj=None):\n         \"\"\"\n         Hook for specifying custom readonly fields.\n@@ -582,7 +589,7 @@ class ModelAdmin(BaseModelAdmin):\n \n     def get_inline_instances(self, request, obj=None):\n         inline_instances = []\n-        for inline_class in self.inlines:\n+        for inline_class in self.get_inlines(request, obj):\n             inline = inline_class(self.model, self.admin_site)\n             if request:\n                 if not (inline.has_view_or_change_permission(request, obj) or\n",
  "test_patch": "diff --git a/tests/generic_inline_admin/test_model_admin_get_inlines.py b/tests/generic_inline_admin/test_model_admin_get_inlines.py\nnew file mode 100644\nindex 0000000..a97fcad\n--- /dev/null\n+++ b/tests/generic_inline_admin/test_model_admin_get_inlines.py\n@@ -0,0 +1,45 @@\n+from django.contrib import admin\n+from django.test import TestCase, RequestFactory\n+from django.contrib.auth.models import User\n+from .models import Episode, Media\n+from .admin import site as admin_site\n+\n+class MockRequest:\n+    pass\n+\n+class MockSuperUser:\n+    def has_perm(self, perm):\n+        return True\n+\n+request = MockRequest()\n+request.user = MockSuperUser()\n+\n+class GetInlinesHookTest(TestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')\n+        self.client.force_login(self.superuser)\n+\n+    def test_get_inlines_hook(self):\n+        \"\"\"\n+        Test to reproduce the issue where ModelAdmin.get_inlines() hook is missing.\n+        \"\"\"\n+        class CustomInline(admin.TabularInline):\n+            model = Media\n+\n+        class EpisodeAdmin(admin.ModelAdmin):\n+            inlines = [CustomInline]\n+\n+            def get_inlines(self, request, obj=None):\n+                return self.inlines\n+\n+        ma = EpisodeAdmin(Episode, admin_site)\n+        request = self.factory.get('/')\n+        request.user = self.superuser\n+\n+        # Attempt to use the get_inlines hook\n+        try:\n+            inlines = ma.get_inlines(request)\n+            self.assertEqual(inlines, [CustomInline])\n+        except AttributeError as e:\n+            self.assertEqual(str(e), \"'EpisodeAdmin' object has no attribute 'get_inlines'\")\n",
  "test_inverted_patch": "diff --git a/tests/generic_inline_admin/test_model_admin_get_inlines_inverted.py b/tests/generic_inline_admin/test_model_admin_get_inlines_inverted.py\nnew file mode 100644\nindex 0000000..d6d389c\n--- /dev/null\n+++ b/tests/generic_inline_admin/test_model_admin_get_inlines_inverted.py\n@@ -0,0 +1,46 @@\n+from django.contrib import admin\n+from django.test import TestCase, RequestFactory\n+from django.contrib.auth.models import User\n+from .models import Episode, Media\n+from .admin import site as admin_site\n+\n+class MockRequest:\n+    pass\n+\n+class MockSuperUser:\n+    def has_perm(self, perm):\n+        return True\n+\n+request = MockRequest()\n+request.user = MockSuperUser()\n+\n+class GetInlinesHookTest(TestCase):\n+    def setUp(self):\n+        self.factory = RequestFactory()\n+        self.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')\n+        self.client.force_login(self.superuser)\n+\n+    def test_get_inlines_hook(self):\n+        \"\"\"\n+        Test to reproduce the issue where ModelAdmin.get_inlines() hook is missing.\n+        \"\"\"\n+        class CustomInline(admin.TabularInline):\n+            model = Media\n+\n+        class EpisodeAdmin(admin.ModelAdmin):\n+            inlines = [CustomInline]\n+\n+            def get_inlines(self, request, obj=None):\n+                return self.inlines\n+\n+        ma = EpisodeAdmin(Episode, admin_site)\n+        request = self.factory.get('/')\n+        request.user = self.superuser\n+\n+        # Attempt to use the get_inlines hook\n+        try:\n+            inlines = ma.get_inlines(request)\n+            # Change the assertion to fail when the bug is observed\n+            self.assertNotEqual(inlines, [CustomInline], \"__BUG__HERE__\")\n+        except AttributeError as e:\n+            self.fail(\"__BUG__HERE__\")\n",
  "num_sent_chars": 3340113,
  "num_received_chars": 52298,
  "elapsed_time": 555.9761679172516,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}