{
  "instance_id": "pytest-dev__pytest-10051",
  "edit_test_file": "testing/test_recwarn.py",
  "code_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex a4f4214..6129b99 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -440,7 +440,13 @@ class LogCaptureFixture:\n \n     def clear(self) -> None:\n         \"\"\"Reset the list of log records and the captured log text.\"\"\"\n+        # Clear the handler's records in-place\n         self.handler.reset()\n+        # Clear the stashed records for each phase in-place\n+        records_dict = self._item.stash[caplog_records_key]\n+        for when in (\"setup\", \"call\", \"teardown\"):\n+            if when in records_dict:\n+                del records_dict[when][:]\n \n     def set_level(self, level: Union[int, str], logger: Optional[str] = None) -> None:\n         \"\"\"Set the level of a logger for the duration of a test.\n",
  "test_patch": "diff --git a/testing/test_caplog_consistency.py b/testing/test_caplog_consistency.py\nnew file mode 100644\nindex 0000000..973a8a7\n--- /dev/null\n+++ b/testing/test_caplog_consistency.py\n@@ -0,0 +1,13 @@\n+import logging\n+import pytest\n+\n+def test_caplog_get_records_and_clear_conflict(caplog) -> None:\n+    def verify_consistency() -> None:\n+        assert caplog.get_records(\"call\") == caplog.records\n+\n+    verify_consistency()\n+    logging.warning(\"test\")\n+    verify_consistency()\n+    caplog.clear()\n+    with pytest.raises(AssertionError):\n+        verify_consistency()  # This should fail due to the issue\n",
  "test_inverted_patch": "diff --git a/testing/test_caplog_consistency_inverted.py b/testing/test_caplog_consistency_inverted.py\nnew file mode 100644\nindex 0000000..61228e1\n--- /dev/null\n+++ b/testing/test_caplog_consistency_inverted.py\n@@ -0,0 +1,12 @@\n+import logging\n+import pytest\n+\n+def test_caplog_get_records_and_clear_conflict(caplog) -> None:\n+    def verify_consistency() -> None:\n+        assert caplog.get_records(\"call\") == caplog.records, \"__BUG__HERE__\"\n+\n+    verify_consistency()\n+    logging.warning(\"test\")\n+    verify_consistency()\n+    caplog.clear()\n+    verify_consistency()  # This should now fail with \"__BUG__HERE__\"\n",
  "num_sent_chars": 1035891,
  "num_received_chars": 9872,
  "elapsed_time": 116.1212568283081,
  "lint_repair_count": 1,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}