{
  "instance_id": "matplotlib__matplotlib-25287",
  "edit_test_file": "lib/matplotlib/tests/test_axes.py",
  "code_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex c0e706e..1bb4cb4 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -969,7 +969,11 @@ class Axis(martist.Artist):\n                     self._major_tick_kw.get('label1On', False)\n                     or self._major_tick_kw.get('label2On', False))\n             if 'labelcolor' in kwtrans:\n-                self.offsetText.set_color(kwtrans['labelcolor'])\n+                labelcolor = kwtrans['labelcolor']\n+                if labelcolor == 'inherit':\n+                    # If labelcolor is 'inherit', use the tick color\n+                    labelcolor = kwtrans.get('color', mpl.rcParams[f'{self.__name__}.color'])\n+                self.offsetText.set_color(labelcolor)\n \n         self.stale = True\n \n@@ -2249,13 +2253,17 @@ class XAxis(Axis):\n         )\n         self.label_position = 'bottom'\n \n+        labelcolor = mpl.rcParams['xtick.labelcolor']\n+        if labelcolor == 'inherit':\n+            labelcolor = mpl.rcParams['xtick.color']\n+            \n         self.offsetText.set(\n             x=1, y=0,\n             verticalalignment='top', horizontalalignment='right',\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['xtick.labelsize'],\n-            color=mpl.rcParams['xtick.color'],\n+            color=labelcolor,\n         )\n         self.offset_text_position = 'bottom'\n \n@@ -2509,13 +2517,17 @@ class YAxis(Axis):\n         )\n         self.label_position = 'left'\n         # x in axes coords, y in display coords(!).\n+        labelcolor = mpl.rcParams['ytick.labelcolor']\n+        if labelcolor == 'inherit':\n+            labelcolor = mpl.rcParams['ytick.color']\n+            \n         self.offsetText.set(\n             x=0, y=0.5,\n             verticalalignment='baseline', horizontalalignment='left',\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['ytick.labelsize'],\n-            color=mpl.rcParams['ytick.color'],\n+            color=labelcolor,\n         )\n         self.offset_text_position = 'left'\n \n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_offsettext_color.py b/lib/matplotlib/tests/test_offsettext_color.py\nnew file mode 100644\nindex 0000000..b6eb56b\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_offsettext_color.py\n@@ -0,0 +1,19 @@\n+# File: lib/matplotlib/tests/test_offsettext_color.py\n+\n+import matplotlib.pyplot as plt\n+import pytest\n+\n+def test_offsettext_color():\n+    plt.rcParams.update({'ytick.labelcolor': 'red'})\n+    fig, ax = plt.subplots()\n+    ax.plot([1.01e9, 1.02e9, 1.03e9])\n+    fig.canvas.draw()\n+\n+    # Check if the offset text color is incorrectly set to the tick color\n+    offset_text_color = ax.yaxis.get_offset_text().get_color()\n+    tick_color = plt.rcParams['ytick.color']\n+    assert offset_text_color == tick_color, (\n+        f\"Expected offset text color to be {tick_color}, \"\n+        f\"but got {offset_text_color}. Offset text should be colored based on \"\n+        f\"ytick.labelcolor, which is 'red'.\"\n+    )\n",
  "test_inverted_patch": "diff --git a/lib/matplotlib/tests/test_offsettext_color_inverted.py b/lib/matplotlib/tests/test_offsettext_color_inverted.py\nnew file mode 100644\nindex 0000000..5da820b\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_offsettext_color_inverted.py\n@@ -0,0 +1,15 @@\n+# File: lib/matplotlib/tests/test_offsettext_color.py\n+\n+import matplotlib.pyplot as plt\n+import pytest\n+\n+def test_offsettext_color():\n+    plt.rcParams.update({'ytick.labelcolor': 'red'})\n+    fig, ax = plt.subplots()\n+    ax.plot([1.01e9, 1.02e9, 1.03e9])\n+    fig.canvas.draw()\n+\n+    # Check if the offset text color is incorrectly set to the tick color\n+    offset_text_color = ax.yaxis.get_offset_text().get_color()\n+    tick_label_color = plt.rcParams['ytick.labelcolor']\n+    assert offset_text_color == tick_label_color, \"__BUG__HERE__\"\n",
  "num_sent_chars": 764300,
  "num_received_chars": 9002,
  "elapsed_time": 208.41572070121765,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}