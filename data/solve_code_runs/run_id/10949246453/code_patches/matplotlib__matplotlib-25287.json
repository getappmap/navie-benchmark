{
  "instance_id": "matplotlib__matplotlib-25287",
  "edit_test_file": "lib/matplotlib/tests/test_axes.py",
  "code_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex c0e706e..4cc6db0 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2234,6 +2234,13 @@ class XAxis(Axis):\n         super().__init__(*args, **kwargs)\n         self._init()\n \n+    def _get_tick_label_color(self):\n+        \"\"\"Helper method to get the correct tick label color.\"\"\"\n+        labelcolor = mpl.rcParams['xtick.labelcolor']\n+        if labelcolor == 'inherit':\n+            return mpl.rcParams['xtick.color']\n+        return labelcolor\n+\n     def _init(self):\n         \"\"\"\n         Initialize the label and offsetText instance values and\n@@ -2255,7 +2262,7 @@ class XAxis(Axis):\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['xtick.labelsize'],\n-            color=mpl.rcParams['xtick.color'],\n+            color=self._get_tick_label_color(),\n         )\n         self.offset_text_position = 'bottom'\n \n@@ -2493,6 +2500,13 @@ class YAxis(Axis):\n         super().__init__(*args, **kwargs)\n         self._init()\n \n+    def _get_tick_label_color(self):\n+        \"\"\"Helper method to get the correct tick label color.\"\"\"\n+        labelcolor = mpl.rcParams['ytick.labelcolor']\n+        if labelcolor == 'inherit':\n+            return mpl.rcParams['ytick.color']\n+        return labelcolor\n+\n     def _init(self):\n         \"\"\"\n         Initialize the label and offsetText instance values and\n@@ -2515,7 +2529,7 @@ class YAxis(Axis):\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['ytick.labelsize'],\n-            color=mpl.rcParams['ytick.color'],\n+            color=self._get_tick_label_color(),\n         )\n         self.offset_text_position = 'left'\n \n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_tick_label_color.py b/lib/matplotlib/tests/test_tick_label_color.py\nnew file mode 100644\nindex 0000000..9aa2d75\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_tick_label_color.py\n@@ -0,0 +1,19 @@\n+import matplotlib.pyplot as plt\n+import pytest\n+\n+@pytest.mark.parametrize('rcParam, axis_method', [\n+    ('ytick.labelcolor', 'yaxis'),\n+    ('xtick.labelcolor', 'xaxis')\n+])\n+def test_offset_text_color(rcParam, axis_method):\n+    plt.rcParams[rcParam] = 'red'\n+    fig, ax = plt.subplots()\n+    ax.plot([1.01e9, 1.02e9, 1.03e9])\n+    \n+    offset_text = getattr(ax, axis_method).get_offset_text()\n+    \n+    # The test passes if the offset text color is not red,\n+    # which reproduces the described issue\n+    assert offset_text.get_color() != 'red'\n+\n+    plt.close(fig)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/lib/matplotlib/tests/test_tick_label_color_inverted.py b/lib/matplotlib/tests/test_tick_label_color_inverted.py\nnew file mode 100644\nindex 0000000..8619e15\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_tick_label_color_inverted.py\n@@ -0,0 +1,20 @@\n+import matplotlib.pyplot as plt\n+import pytest\n+\n+@pytest.mark.parametrize('rcParam, axis_method', [\n+    ('ytick.labelcolor', 'yaxis'),\n+    ('xtick.labelcolor', 'xaxis')\n+])\n+def test_offset_text_color(rcParam, axis_method):\n+    plt.rcParams[rcParam] = 'red'\n+    fig, ax = plt.subplots()\n+    ax.plot([1.01e9, 1.02e9, 1.03e9])\n+    \n+    offset_text = getattr(ax, axis_method).get_offset_text()\n+    \n+    # The test should now fail if the offset text color is not red,\n+    # which indicates the presence of the bug\n+    if offset_text.get_color() != 'red':\n+        raise AssertionError(\"__BUG__HERE__\")\n+\n+    plt.close(fig)\n\\ No newline at end of file\n",
  "num_sent_chars": 978270,
  "num_received_chars": 28499,
  "elapsed_time": 387.275915145874,
  "lint_repair_count": 1,
  "test_generation_attempts": 1,
  "code_generation_attempts": 2,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}