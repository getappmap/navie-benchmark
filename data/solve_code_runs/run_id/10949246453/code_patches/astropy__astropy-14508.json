{
  "instance_id": "astropy__astropy-14508",
  "edit_test_file": null,
  "code_patch": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 118bfce..73720df 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1299,6 +1299,20 @@ def _format_value(value):\n \n def _format_float(value):\n     \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n+    import math\n+\n+    # Handle special cases\n+    if math.isnan(value):\n+        return \"NaN\"\n+    if math.isinf(value):\n+        return \"inf\" if value > 0 else \"-inf\"\n+\n+    # Try default string representation first\n+    value_str = str(value)\n+    if len(value_str) <= 20 and float(value_str) == value:\n+        return value_str\n+\n+    # Fall back to the previous method if the default representation is too long\n     value_str = f\"{value:.16G}\"\n     if \".\" not in value_str and \"E\" not in value_str:\n         value_str += \".0\"\n@@ -1317,6 +1331,19 @@ def _format_float(value):\n     # Limit the value string to at most 20 characters.\n     str_len = len(value_str)\n \n+    # If the string is still too long, try reducing precision\n+    if str_len > 20:\n+        for precision in range(15, 0, -1):\n+            value_str = f\"{value:.{precision}G}\"\n+            if len(value_str) <= 20 and float(value_str) == value:\n+                break\n+\n+    # If all else fails, truncate the string\n+    if len(value_str) > 20:\n+        value_str = value_str[:20]\n+\n+    return value_str\n+\n     if str_len > 20:\n         idx = value_str.find(\"E\")\n \n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 3190443,
  "num_received_chars": 103970,
  "elapsed_time": 1720.1030640602112,
  "lint_repair_count": 6,
  "test_generation_attempts": 9,
  "code_generation_attempts": 9,
  "pass_to_pass": false,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 0,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}