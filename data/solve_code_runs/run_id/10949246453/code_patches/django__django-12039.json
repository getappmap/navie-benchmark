{
  "instance_id": "django__django-12039",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py\nindex 44e4980..fc0afd0 100644\n--- a/django/db/backends/ddl_references.py\n+++ b/django/db/backends/ddl_references.py\n@@ -83,10 +83,14 @@ class Columns(TableColumns):\n \n     def __str__(self):\n         def col_str(column, idx):\n+            quoted_column = self.quote_name(column)\n             try:\n-                return self.quote_name(column) + self.col_suffixes[idx]\n+                suffix = self.col_suffixes[idx]\n+                if suffix.strip().upper() == 'DESC':\n+                    return f\"{quoted_column} {suffix}\"\n+                return f\"{quoted_column}{suffix}\"\n             except IndexError:\n-                return self.quote_name(column)\n+                return quoted_column\n \n         return ', '.join(col_str(column, idx) for idx, column in enumerate(self.columns))\n \n@@ -112,12 +116,22 @@ class IndexColumns(Columns):\n         def col_str(column, idx):\n             # Index.__init__() guarantees that self.opclasses is the same\n             # length as self.columns.\n-            col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])\n+            quoted_column = self.quote_name(column)\n+            parts = [quoted_column]\n+            \n+            if self.opclasses[idx]:\n+                parts.append(self.opclasses[idx])\n+            \n             try:\n-                col = '{} {}'.format(col, self.col_suffixes[idx])\n+                suffix = self.col_suffixes[idx]\n+                if suffix.strip().upper() == 'DESC':\n+                    parts.append(suffix)\n+                else:\n+                    parts[-1] += suffix\n             except IndexError:\n                 pass\n-            return col\n+            \n+            return ' '.join(parts)\n \n         return ', '.join(col_str(column, idx) for idx, column in enumerate(self.columns))\n \n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1393817,
  "num_received_chars": 60136,
  "elapsed_time": 388.66629910469055,
  "lint_repair_count": 3,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}