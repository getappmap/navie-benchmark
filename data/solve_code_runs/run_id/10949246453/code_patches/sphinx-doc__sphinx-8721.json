{
  "instance_id": "sphinx-doc__sphinx-8721",
  "edit_test_file": null,
  "code_patch": "diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\nindex a7d52a9..a9051fd 100644\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -59,6 +59,10 @@ def doctree_read(app: Sphinx, doctree: Node) -> None:\n     if app.builder.name.startswith(\"epub\") and not env.config.viewcode_enable_epub:\n         return\n \n+    # Skip processing for epub when viewcode_enable_epub is False\n+    if app.builder.name.startswith(\"epub\") and not env.config.viewcode_enable_epub:\n+        return\n+\n     def has_tag(modname: str, fullname: str, docname: str, refname: str) -> bool:\n         entry = env._viewcode_modules.get(modname, None)  # type: ignore\n         if entry is False:\n@@ -138,6 +142,10 @@ def missing_reference(app: Sphinx, env: BuildEnvironment, node: Element, contnod\n                       ) -> Optional[Node]:\n     # resolve our \"viewcode\" reference nodes -- they need special treatment\n     if node['reftype'] == 'viewcode':\n+        # Skip viewcode references for epub when viewcode_enable_epub is False\n+        if app.builder.name.startswith(\"epub\") and not env.config.viewcode_enable_epub:\n+            return None\n+        \n         return make_refnode(app.builder, node['refdoc'], node['reftarget'],\n                             node['refid'], contnode)\n \n@@ -182,6 +190,11 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non\n     env = app.builder.env\n     if not hasattr(env, '_viewcode_modules'):\n         return\n+    \n+    # Check if the builder is for epub and viewcode_enable_epub is False\n+    if app.builder.name.startswith('epub') and not env.config.viewcode_enable_epub:\n+        return\n+\n     highlighter = app.builder.highlighter  # type: ignore\n     urito = app.builder.get_relative_uri\n \n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1468948,
  "num_received_chars": 52939,
  "elapsed_time": 363.04627299308777,
  "lint_repair_count": 1,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}