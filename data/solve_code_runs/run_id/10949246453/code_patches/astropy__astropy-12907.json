{
  "instance_id": "astropy__astropy-12907",
  "edit_test_file": "astropy/modeling/tests/test_separable.py",
  "code_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex a308e27..d2521af 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -306,7 +306,21 @@ def _separable(transform):\n     elif isinstance(transform, CompoundModel):\n         sepleft = _separable(transform.left)\n         sepright = _separable(transform.right)\n-        return _operators[transform.op](sepleft, sepright)\n+        \n+        # Handle nested CompoundModels recursively\n+        if isinstance(transform.left, CompoundModel):\n+            sepleft = _separable(transform.left)\n+        if isinstance(transform.right, CompoundModel):\n+            sepright = _separable(transform.right)\n+        \n+        # Combine separability information\n+        combined = _operators[transform.op](sepleft, sepright)\n+        \n+        # Ensure the result has the correct shape\n+        if combined.shape != (transform.n_outputs, transform.n_inputs):\n+            combined = np.resize(combined, (transform.n_outputs, transform.n_inputs))\n+        \n+        return combined\n     elif isinstance(transform, Model):\n         return _coord_matrix(transform, 'left', transform.n_outputs)\n \n",
  "test_patch": "diff --git a/astropy/modeling/tests/test_nested_compound_separability.py b/astropy/modeling/tests/test_nested_compound_separability.py\nnew file mode 100644\nindex 0000000..e9227e8\n--- /dev/null\n+++ b/astropy/modeling/tests/test_nested_compound_separability.py\n@@ -0,0 +1,42 @@\n+import pytest\n+import numpy as np\n+from astropy.modeling import models as m\n+from astropy.modeling.separable import separability_matrix\n+\n+def test_nested_compound_model_separability():\n+    # Create a compound model\n+    cm = m.Linear1D(10) & m.Linear1D(5)\n+    \n+    # Test the separability of the compound model\n+    assert np.array_equal(separability_matrix(cm), \n+                          np.array([[True, False],\n+                                    [False, True]]))\n+    \n+    # Create a more complex model\n+    complex_model = m.Pix2Sky_TAN() & m.Linear1D(10) & m.Linear1D(5)\n+    \n+    # Test the separability of the complex model\n+    assert np.array_equal(separability_matrix(complex_model),\n+                          np.array([[True, True, False, False],\n+                                    [True, True, False, False],\n+                                    [False, False, True, False],\n+                                    [False, False, False, True]]))\n+    \n+    # Create a nested compound model\n+    nested_model = m.Pix2Sky_TAN() & cm\n+    \n+    # Test the separability of the nested compound model\n+    # This assertion will pass when the issue is present\n+    assert np.array_equal(separability_matrix(nested_model),\n+                          np.array([[True, True, False, False],\n+                                    [True, True, False, False],\n+                                    [False, False, True, True],\n+                                    [False, False, True, True]]))\n+    \n+    # The following assertion would be the correct behavior\n+    # Uncomment this to test for the expected correct output\n+    # assert np.array_equal(separability_matrix(nested_model),\n+    #                       np.array([[True, True, False, False],\n+    #                                 [True, True, False, False],\n+    #                                 [False, False, True, False],\n+    #                                 [False, False, False, True]]))\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/astropy/modeling/tests/test_nested_compound_separability_inverted.py b/astropy/modeling/tests/test_nested_compound_separability_inverted.py\nnew file mode 100644\nindex 0000000..f12bc45\n--- /dev/null\n+++ b/astropy/modeling/tests/test_nested_compound_separability_inverted.py\n@@ -0,0 +1,51 @@\n+import pytest\n+import numpy as np\n+from astropy.modeling import models as m\n+from astropy.modeling.separable import separability_matrix\n+\n+def test_nested_compound_model_separability():\n+    # Create a compound model\n+    cm = m.Linear1D(10) & m.Linear1D(5)\n+    \n+    # Test the separability of the compound model\n+    assert np.array_equal(separability_matrix(cm), \n+                          np.array([[True, False],\n+                                    [False, True]]))\n+    \n+    # Create a more complex model\n+    complex_model = m.Pix2Sky_TAN() & m.Linear1D(10) & m.Linear1D(5)\n+    \n+    # Test the separability of the complex model\n+    assert np.array_equal(separability_matrix(complex_model),\n+                          np.array([[True, True, False, False],\n+                                    [True, True, False, False],\n+                                    [False, False, True, False],\n+                                    [False, False, False, True]]))\n+    \n+    # Create a nested compound model\n+    nested_model = m.Pix2Sky_TAN() & cm\n+    \n+    # Test the separability of the nested compound model\n+    # This assertion will now fail when the issue is present\n+    expected_matrix = np.array([[True, True, False, False],\n+                                [True, True, False, False],\n+                                [False, False, True, False],\n+                                [False, False, False, True]])\n+    \n+    actual_matrix = separability_matrix(nested_model)\n+    \n+    if not np.array_equal(actual_matrix, expected_matrix):\n+        raise AssertionError(\"__BUG__HERE__: Incorrect separability matrix for nested compound model. \"\n+                             f\"Expected:\\n{expected_matrix}\\nGot:\\n{actual_matrix}\")\n+\n+    # Additional test to ensure the bug is not a false positive\n+    simple_nested_model = m.Gaussian1D() & (m.Gaussian1D() + m.Gaussian1D())\n+    simple_expected_matrix = np.array([[True, False, False],\n+                                       [False, True, True],\n+                                       [False, True, True]])\n+    \n+    simple_actual_matrix = separability_matrix(simple_nested_model)\n+    \n+    if not np.array_equal(simple_actual_matrix, simple_expected_matrix):\n+        raise AssertionError(\"__BUG__HERE__: Incorrect separability matrix for simple nested compound model. \"\n+                             f\"Expected:\\n{simple_expected_matrix}\\nGot:\\n{simple_actual_matrix}\")\n\\ No newline at end of file\n",
  "num_sent_chars": 3013494,
  "num_received_chars": 88985,
  "elapsed_time": 584.3413641452789,
  "lint_repair_count": 12,
  "test_generation_attempts": 1,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}