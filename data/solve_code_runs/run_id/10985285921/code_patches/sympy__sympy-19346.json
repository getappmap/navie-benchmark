{
  "instance_id": "sympy__sympy-19346",
  "edit_test_file": "sympy/printing/tests/test_python.py",
  "code_patch": "diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex c936a69..a74b76f 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -38,6 +38,12 @@ def emptyPrinter(self, expr):\n             return expr\n         elif hasattr(expr, \"__srepr__\"):\n             return expr.__srepr__()\n+        elif isinstance(expr, dict):\n+            items = [\"%s: %s\" % (self._print(k), self._print(v)) for k, v in expr.items()]\n+            return \"{%s}\" % \", \".join(items)\n+        elif isinstance(expr, set):\n+            items = [self._print(item) for item in expr]\n+            return \"{%s}\" % \", \".join(items)\n         elif hasattr(expr, \"args\") and hasattr(expr.args, \"__iter__\"):\n             l = []\n             for o in expr.args:\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_srepr.py b/sympy/printing/tests/test_srepr.py\nnew file mode 100644\nindex 0000000..a97585d\n--- /dev/null\n+++ b/sympy/printing/tests/test_srepr.py\n@@ -0,0 +1,12 @@\n+from sympy import srepr, Symbol\n+\n+def test_srepr_dict_and_set():\n+    x, y = Symbol('x'), Symbol('y')\n+    \n+    # Test for dict\n+    dict_repr = srepr({x: y})\n+    assert dict_repr == \"{x: y}\", f\"Expected '{{x: y}}', but got {dict_repr}\"\n+    \n+    # Test for set\n+    set_repr = srepr({x, y})\n+    assert set_repr == \"{x, y}\", f\"Expected '{{x, y}}', but got {set_repr}\"\n",
  "test_inverted_patch": "diff --git a/sympy/printing/tests/test_srepr_inverted.py b/sympy/printing/tests/test_srepr_inverted.py\nnew file mode 100644\nindex 0000000..40daa9b\n--- /dev/null\n+++ b/sympy/printing/tests/test_srepr_inverted.py\n@@ -0,0 +1,12 @@\n+from sympy import srepr, Symbol\n+\n+def test_srepr_dict_and_set():\n+    x, y = Symbol('x'), Symbol('y')\n+    \n+    # Test for dict\n+    dict_repr = srepr({x: y})\n+    assert dict_repr != \"{x: y}\", \"__BUG__HERE__\"\n+    \n+    # Test for set\n+    set_repr = srepr({x, y})\n+    assert set_repr != \"{x, y}\", \"__BUG__HERE__\"\n",
  "num_sent_chars": 967238,
  "num_received_chars": 6910,
  "elapsed_time": 85.6811466217041,
  "lint_repair_count": 1,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}