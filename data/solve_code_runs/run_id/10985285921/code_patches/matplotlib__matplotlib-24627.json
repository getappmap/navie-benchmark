{
  "instance_id": "matplotlib__matplotlib-24627",
  "edit_test_file": "lib/matplotlib/tests/test_axes.py",
  "code_patch": "diff --git a/lib/mpl_toolkits/axes_grid1/parasite_axes.py b/lib/mpl_toolkits/axes_grid1/parasite_axes.py\nindex 767d078..e46627f 100644\n--- a/lib/mpl_toolkits/axes_grid1/parasite_axes.py\n+++ b/lib/mpl_toolkits/axes_grid1/parasite_axes.py\n@@ -23,6 +23,11 @@ class ParasiteAxesBase:\n             \"xlim_changed\", self._sync_lims)\n         self._parent_axes.callbacks._connect_picklable(\n             \"ylim_changed\", self._sync_lims)\n+        \n+        # Unset the .axes and .figure attributes of all artists\n+        for artist in self.get_children():\n+            artist.axes = None\n+            artist.figure = None\n \n     def pick(self, mouseevent):\n         # This most likely goes to Artist.pick (depending on axes_class given\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_artist_attributes.py b/lib/matplotlib/tests/test_artist_attributes.py\nnew file mode 100644\nindex 0000000..3b4d912\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_artist_attributes.py\n@@ -0,0 +1,16 @@\n+# File: lib/matplotlib/tests/test_artist_attributes.py\n+\n+import matplotlib.pyplot as plt\n+\n+def test_artist_axes_attribute_after_cla():\n+    # Create a figure and axes\n+    fig, ax = plt.subplots()\n+    \n+    # Plot a line and get the line artist\n+    line, = ax.plot([1, 2])\n+    \n+    # Clear the axes\n+    ax.cla()\n+    \n+    # Check if the line's axes attribute is still set\n+    assert line.axes is not None, \"Expected line.axes to be None after cla(), but it is not.\"\n",
  "test_inverted_patch": "diff --git a/lib/matplotlib/tests/test_artist_attributes_inverted.py b/lib/matplotlib/tests/test_artist_attributes_inverted.py\nnew file mode 100644\nindex 0000000..b0f5c41\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_artist_attributes_inverted.py\n@@ -0,0 +1,16 @@\n+# File: lib/matplotlib/tests/test_artist_attributes.py\n+\n+import matplotlib.pyplot as plt\n+\n+def test_artist_axes_attribute_after_cla():\n+    # Create a figure and axes\n+    fig, ax = plt.subplots()\n+    \n+    # Plot a line and get the line artist\n+    line, = ax.plot([1, 2])\n+    \n+    # Clear the axes\n+    ax.cla()\n+    \n+    # Check if the line's axes attribute is unset\n+    assert line.axes is None, \"__BUG__HERE__\"\n",
  "num_sent_chars": 2962897,
  "num_received_chars": 51452,
  "elapsed_time": 947.9286658763885,
  "lint_repair_count": 4,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}