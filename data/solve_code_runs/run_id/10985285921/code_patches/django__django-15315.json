{
  "instance_id": "django__django-15315",
  "edit_test_file": "tests/basic/tests.py",
  "code_patch": "diff --git a/django/utils/tree.py b/django/utils/tree.py\nindex a56442c..a5dd284 100644\n--- a/django/utils/tree.py\n+++ b/django/utils/tree.py\n@@ -74,7 +74,8 @@ class Node:\n         )\n \n     def __hash__(self):\n-        return hash((self.__class__, self.connector, self.negated, *make_hashable(self.children)))\n+        # Use immutable attributes for hashing to ensure consistency\n+        return hash((self.__class__, self.connector, self.negated))\n \n     def add(self, data, conn_type):\n         \"\"\"\n",
  "test_patch": "diff --git a/tests/basic/test_field_hash_immutable.py b/tests/basic/test_field_hash_immutable.py\nnew file mode 100644\nindex 0000000..54d5adf\n--- /dev/null\n+++ b/tests/basic/test_field_hash_immutable.py\n@@ -0,0 +1,14 @@\n+from django.db import models\n+from django.test import TestCase\n+\n+class FieldHashImmutableTest(TestCase):\n+    def test_field_hash_immutable(self):\n+        f = models.CharField(max_length=200)\n+        d = {f: 1}\n+        \n+        class Book(models.Model):\n+            title = f\n+        \n+        # The test should pass if the AssertionError is raised, indicating the issue.\n+        with self.assertRaises(AssertionError):\n+            assert f in d\n",
  "test_inverted_patch": "diff --git a/tests/basic/test_field_hash_immutable_inverted.py b/tests/basic/test_field_hash_immutable_inverted.py\nnew file mode 100644\nindex 0000000..2c94aab\n--- /dev/null\n+++ b/tests/basic/test_field_hash_immutable_inverted.py\n@@ -0,0 +1,14 @@\n+from django.db import models\n+from django.test import TestCase\n+\n+class FieldHashImmutableTest(TestCase):\n+    def test_field_hash_immutable(self):\n+        f = models.CharField(max_length=200)\n+        d = {f: 1}\n+        \n+        class Book(models.Model):\n+            title = f\n+        \n+        # The test should fail if the AssertionError is not raised, indicating the issue.\n+        if f in d:\n+            raise AssertionError(\"__BUG__HERE__\")\n",
  "num_sent_chars": 1915570,
  "num_received_chars": 26308,
  "elapsed_time": 181.51850628852844,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 7,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}