{
  "instance_id": "django__django-11451",
  "edit_test_file": "tests/auth_tests/test_checks.py",
  "code_patch": "diff --git a/django/contrib/auth/backends.py b/django/contrib/auth/backends.py\nindex f4b1722..e0f3aa4 100644\n--- a/django/contrib/auth/backends.py\n+++ b/django/contrib/auth/backends.py\n@@ -37,6 +37,8 @@ class ModelBackend(BaseBackend):\n     \"\"\"\n \n     def authenticate(self, request, username=None, password=None, **kwargs):\n+        if username is None or password is None:\n+            return None\n         if username is None:\n             username = kwargs.get(UserModel.USERNAME_FIELD)\n         try:\n",
  "test_patch": "diff --git a/tests/auth_tests/test_modelbackend_authenticate.py b/tests/auth_tests/test_modelbackend_authenticate.py\nnew file mode 100644\nindex 0000000..ac519e0\n--- /dev/null\n+++ b/tests/auth_tests/test_modelbackend_authenticate.py\n@@ -0,0 +1,15 @@\n+from django.test import TestCase\n+from django.contrib.auth import get_user_model\n+from django.contrib.auth.backends import ModelBackend\n+from django.db import connection\n+\n+UserModel = get_user_model()\n+\n+class ModelBackendAuthenticateTests(TestCase):\n+    def test_authenticate_with_none_username(self):\n+        \"\"\"\n+        ModelBackend.authenticate() should not make a database query when username is None.\n+        \"\"\"\n+        backend = ModelBackend()\n+        with self.assertNumQueries(1):\n+            backend.authenticate(None, username=None, password=None)\n",
  "test_inverted_patch": "diff --git a/tests/auth_tests/test_modelbackend_authenticate_inverted.py b/tests/auth_tests/test_modelbackend_authenticate_inverted.py\nnew file mode 100644\nindex 0000000..706b197\n--- /dev/null\n+++ b/tests/auth_tests/test_modelbackend_authenticate_inverted.py\n@@ -0,0 +1,16 @@\n+from django.test import TestCase\n+from django.contrib.auth import get_user_model\n+from django.contrib.auth.backends import ModelBackend\n+from django.db import connection\n+\n+UserModel = get_user_model()\n+\n+class ModelBackendAuthenticateTests(TestCase):\n+    def test_authenticate_with_none_username(self):\n+        \"\"\"\n+        ModelBackend.authenticate() should not make a database query when username is None.\n+        \"\"\"\n+        backend = ModelBackend()\n+        with self.assertRaisesMessage(AssertionError, \"__BUG__HERE__\"):\n+            with self.assertNumQueries(0):\n+                backend.authenticate(None, username=None, password=None)\n",
  "num_sent_chars": 2462794,
  "num_received_chars": 27181,
  "elapsed_time": 201.93517994880676,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}