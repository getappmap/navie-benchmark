{
  "instance_id": "sphinx-doc__sphinx-9461",
  "edit_test_file": "tests/test_ext_autodoc_autoclass.py",
  "code_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 1cecb1f..e3f4f8b 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2075,17 +2075,18 @@ class MethodDocumenter(DocstringSignatureMixin, ClassLevelDocumenter):  # type:\n         ret = super().import_object(raiseerror)\n         if not ret:\n             return ret\n-\n+    \n         # to distinguish classmethod/staticmethod\n         obj = self.parent.__dict__.get(self.object_name)\n         if obj is None:\n             obj = self.object\n-\n+    \n         if (inspect.isclassmethod(obj) or\n-                inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name)):\n+                inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name) or\n+                (isinstance(obj, classmethod) and inspect.isproperty(obj.__func__))):\n             # document class and static members before ordinary ones\n             self.member_order = self.member_order - 1\n-\n+    \n         return ret\n \n     def format_args(self, **kwargs: Any) -> str:\n@@ -2661,7 +2662,8 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):  #\n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n                             ) -> bool:\n-        return inspect.isproperty(member) and isinstance(parent, ClassDocumenter)\n+        return (inspect.isproperty(member) or\n+                (isinstance(member, classmethod) and inspect.isproperty(member.__func__))) and isinstance(parent, ClassDocumenter)\n \n     def document_members(self, all_members: bool = False) -> None:\n         pass\n",
  "test_patch": "diff --git a/tests/test_documentation_classmethod_property.py b/tests/test_documentation_classmethod_property.py\nnew file mode 100644\nindex 0000000..9802238\n--- /dev/null\n+++ b/tests/test_documentation_classmethod_property.py\n@@ -0,0 +1,20 @@\n+\"\"\"\n+    test_documentation_classmethod_property\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the documentation of methods decorated with both @classmethod and @property.\n+\n+    :copyright: Copyright 2007-2021 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+from .test_ext_autodoc import do_autodoc\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_classmethod_property_documentation(app):\n+    options = {\"members\": None}\n+    actual = do_autodoc(app, 'class', 'target.classmethod_property.BaseClass', options)\n+    assert '.. py:property:: BaseClass.baseclass_class_property' not in actual\n+    assert '.. py:property:: BaseClass.baseclass_abstract_class_property' not in actual\n",
  "test_inverted_patch": "diff --git a/tests/test_documentation_classmethod_property_inverted.py b/tests/test_documentation_classmethod_property_inverted.py\nnew file mode 100644\nindex 0000000..15e574a\n--- /dev/null\n+++ b/tests/test_documentation_classmethod_property_inverted.py\n@@ -0,0 +1,21 @@\n+\"\"\"\n+    test_documentation_classmethod_property\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the documentation of methods decorated with both @classmethod and @property.\n+\n+    :copyright: Copyright 2007-2021 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+from .test_ext_autodoc import do_autodoc\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_classmethod_property_documentation(app):\n+    options = {\"members\": None}\n+    actual = do_autodoc(app, 'class', 'target.classmethod_property.BaseClass', options)\n+    if '.. py:property:: BaseClass.baseclass_class_property' not in actual or \\\n+       '.. py:property:: BaseClass.baseclass_abstract_class_property' not in actual:\n+        raise AssertionError(\"__BUG__HERE__\")\n",
  "num_sent_chars": 3454547,
  "num_received_chars": 55568,
  "elapsed_time": 375.1642816066742,
  "lint_repair_count": 0,
  "test_generation_attempts": 2,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}