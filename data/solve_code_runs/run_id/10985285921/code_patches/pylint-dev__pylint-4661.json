{
  "instance_id": "pylint-dev__pylint-4661",
  "edit_test_file": "tests/test_config.py",
  "code_patch": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0..8c078b5 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -56,14 +56,22 @@ __all__ = [\n ]\n \n USER_HOME = os.path.expanduser(\"~\")\n-if \"PYLINTHOME\" in os.environ:\n-    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n+XDG_DATA_HOME = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+PYLINTHOME = os.environ.get(\"PYLINTHOME\")\n+\n+if PYLINTHOME:\n+    PYLINT_HOME = PYLINTHOME\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n-elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    PYLINT_HOME = os.path.join(XDG_DATA_HOME, \"pylint\")\n+\n+# Fallback to the old directory if the new one doesn't exist and can't be created\n+if not os.path.exists(PYLINT_HOME):\n+    try:\n+        os.makedirs(PYLINT_HOME)\n+    except OSError:\n+        PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n \n \n def _get_pdata_path(base_name, recurs):\n",
  "test_patch": "diff --git a/tests/test_xdg_compliance.py b/tests/test_xdg_compliance.py\nnew file mode 100644\nindex 0000000..b478798\n--- /dev/null\n+++ b/tests/test_xdg_compliance.py\n@@ -0,0 +1,14 @@\n+import os\n+import unittest\n+from pylint.config import PYLINT_HOME\n+\n+class TestXDGCompliance(unittest.TestCase):\n+    def test_pylint_home_directory(self):\n+        \"\"\"Test to check if PYLINT_HOME is set to the XDG Base Directory Specification compliant path.\"\"\"\n+        user_home = os.path.expanduser(\"~\")\n+        expected_path = os.path.join(user_home, \".local\", \"share\", \"pylint\")\n+        self.assertNotEqual(PYLINT_HOME, expected_path, \n+                            f\"PYLINT_HOME should not be '{expected_path}' as per XDG Base Directory Specification.\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n",
  "test_inverted_patch": "diff --git a/tests/test_xdg_compliance_inverted.py b/tests/test_xdg_compliance_inverted.py\nnew file mode 100644\nindex 0000000..e80d3de\n--- /dev/null\n+++ b/tests/test_xdg_compliance_inverted.py\n@@ -0,0 +1,13 @@\n+import os\n+import unittest\n+from pylint.config import PYLINT_HOME\n+\n+class TestXDGCompliance(unittest.TestCase):\n+    def test_pylint_home_directory(self):\n+        \"\"\"Test to check if PYLINT_HOME is set to the XDG Base Directory Specification compliant path.\"\"\"\n+        user_home = os.path.expanduser(\"~\")\n+        expected_path = os.path.join(user_home, \".local\", \"share\", \"pylint\")\n+        self.assertEqual(PYLINT_HOME, expected_path, \"__BUG__HERE__\")\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n",
  "num_sent_chars": 1291942,
  "num_received_chars": 15022,
  "elapsed_time": 104.13020253181458,
  "lint_repair_count": 1,
  "test_generation_attempts": 0,
  "code_generation_attempts": 3,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}