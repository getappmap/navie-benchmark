{
  "instance_id": "django__django-16819",
  "edit_test_file": "tests/migrations/test_operations.py",
  "code_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 967a91f..2068445 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -833,6 +833,15 @@ class AddIndex(IndexOperation):\n         if self.allow_migrate_model(schema_editor.connection.alias, model):\n             schema_editor.remove_index(model, self.index)\n \n+    def reduce(self, operation, app_label):\n+        if (\n+            isinstance(operation, RemoveIndex)\n+            and self.model_name_lower == operation.model_name_lower\n+            and self.index.name == operation.name\n+        ):\n+            return []\n+        return super().reduce(operation, app_label)\n+\n     def deconstruct(self):\n         kwargs = {\n             \"model_name\": self.model_name,\n@@ -886,6 +895,15 @@ class RemoveIndex(IndexOperation):\n             index = to_model_state.get_index_by_name(self.name)\n             schema_editor.add_index(model, index)\n \n+    def reduce(self, operation, app_label):\n+        if (\n+            isinstance(operation, AddIndex)\n+            and self.model_name_lower == operation.model_name_lower\n+            and self.name == operation.index.name\n+        ):\n+            return []\n+        return super().reduce(operation, app_label)\n+\n     def deconstruct(self):\n         kwargs = {\n             \"model_name\": self.model_name,\n",
  "test_patch": "diff --git a/tests/migrations/test_migrations_reduce_index_operations.py b/tests/migrations/test_migrations_reduce_index_operations.py\nnew file mode 100644\nindex 0000000..9e3ac76\n--- /dev/null\n+++ b/tests/migrations/test_migrations_reduce_index_operations.py\n@@ -0,0 +1,46 @@\n+from django.db import migrations, models\n+from django.test import SimpleTestCase\n+\n+class TestReduceIndexOperations(SimpleTestCase):\n+    def test_reduce_add_remove_index_operations(self):\n+        \"\"\"\n+        Test that AddIndex and RemoveIndex operations are not reduced.\n+        \"\"\"\n+        # Initial state with a model\n+        initial_state = migrations.state.ProjectState()\n+        initial_state.add_model(\n+            migrations.state.ModelState(\n+                app_label=\"test_app\",\n+                name=\"TestModel\",\n+                fields=[\n+                    (\"id\", models.AutoField(primary_key=True)),\n+                    (\"field\", models.CharField(max_length=100)),\n+                ],\n+            )\n+        )\n+\n+        # AddIndex operation\n+        add_index_operation = migrations.AddIndex(\n+            model_name=\"TestModel\",\n+            index=models.Index(fields=[\"field\"], name=\"test_index\"),\n+        )\n+\n+        # RemoveIndex operation\n+        remove_index_operation = migrations.RemoveIndex(\n+            model_name=\"TestModel\",\n+            name=\"test_index\",\n+        )\n+\n+        # Apply AddIndex operation\n+        new_state = initial_state.clone()\n+        add_index_operation.state_forwards(\"test_app\", new_state)\n+\n+        # Apply RemoveIndex operation\n+        final_state = new_state.clone()\n+        remove_index_operation.state_forwards(\"test_app\", final_state)\n+\n+        # Check that the index is not present in the final state\n+        self.assertNotIn(\n+            models.Index(fields=[\"field\"], name=\"test_index\"),\n+            final_state.models[\"test_app\", \"testmodel\"].options[\"indexes\"],\n+        )\n",
  "test_inverted_patch": "diff --git a/tests/migrations/test_migrations_reduce_index_operations_inverted.py b/tests/migrations/test_migrations_reduce_index_operations_inverted.py\nnew file mode 100644\nindex 0000000..a040b9b\n--- /dev/null\n+++ b/tests/migrations/test_migrations_reduce_index_operations_inverted.py\n@@ -0,0 +1,45 @@\n+from django.db import migrations, models\n+from django.test import SimpleTestCase\n+\n+class TestReduceIndexOperations(SimpleTestCase):\n+    def test_reduce_add_remove_index_operations(self):\n+        \"\"\"\n+        Test that AddIndex and RemoveIndex operations are not reduced.\n+        \"\"\"\n+        # Initial state with a model\n+        initial_state = migrations.state.ProjectState()\n+        initial_state.add_model(\n+            migrations.state.ModelState(\n+                app_label=\"test_app\",\n+                name=\"TestModel\",\n+                fields=[\n+                    (\"id\", models.AutoField(primary_key=True)),\n+                    (\"field\", models.CharField(max_length=100)),\n+                ],\n+            )\n+        )\n+\n+        # AddIndex operation\n+        add_index_operation = migrations.AddIndex(\n+            model_name=\"TestModel\",\n+            index=models.Index(fields=[\"field\"], name=\"test_index\"),\n+        )\n+\n+        # RemoveIndex operation\n+        remove_index_operation = migrations.RemoveIndex(\n+            model_name=\"TestModel\",\n+            name=\"test_index\",\n+        )\n+\n+        # Apply AddIndex operation\n+        new_state = initial_state.clone()\n+        add_index_operation.state_forwards(\"test_app\", new_state)\n+\n+        # Apply RemoveIndex operation\n+        final_state = new_state.clone()\n+        remove_index_operation.state_forwards(\"test_app\", final_state)\n+\n+        # Check that the index is not present in the final state\n+        # This assertion should fail if the bug is present\n+        if models.Index(fields=[\"field\"], name=\"test_index\") not in final_state.models[\"test_app\", \"testmodel\"].options[\"indexes\"]:\n+            raise AssertionError(\"__BUG__HERE__\")\n",
  "num_sent_chars": 5285777,
  "num_received_chars": 97865,
  "elapsed_time": 522.6811225414276,
  "lint_repair_count": 8,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}