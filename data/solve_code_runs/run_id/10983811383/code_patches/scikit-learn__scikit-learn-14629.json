{
  "instance_id": "scikit-learn__scikit-learn-14629",
  "edit_test_file": "sklearn/model_selection/tests/test_validation.py",
  "code_patch": "diff --git a/sklearn/multioutput.py b/sklearn/multioutput.py\nindex 463b72d..758cc29 100644\n--- a/sklearn/multioutput.py\n+++ b/sklearn/multioutput.py\n@@ -339,10 +339,10 @@ class MultiOutputClassifier(MultiOutputEstimator, ClassifierMixin):\n \n         Returns\n         -------\n-        p : array of shape = [n_samples, n_classes], or a list of n_outputs \\\n-            such arrays if n_outputs > 1.\n-            The class probabilities of the input samples. The order of the\n-            classes corresponds to that in the attribute `classes_`.\n+        p : list of arrays, each of shape = [n_samples, n_classes]\n+            The class probabilities of the input samples for each output.\n+            Each array corresponds to the classes in the respective\n+            estimator's `classes_` attribute.\n         \"\"\"\n         check_is_fitted(self)\n         if not all([hasattr(estimator, \"predict_proba\")\n",
  "test_patch": "diff --git a/sklearn/model_selection/tests/test_cross_val_predict_multioutput.py b/sklearn/model_selection/tests/test_cross_val_predict_multioutput.py\nnew file mode 100644\nindex 0000000..104ae1c\n--- /dev/null\n+++ b/sklearn/model_selection/tests/test_cross_val_predict_multioutput.py\n@@ -0,0 +1,19 @@\n+\"\"\"Test for cross_val_predict with MultiOutputClassifier\"\"\"\n+\n+import pytest\n+from sklearn.datasets import make_multilabel_classification\n+from sklearn.multioutput import MultiOutputClassifier\n+from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n+from sklearn.model_selection import cross_val_predict\n+\n+def test_cross_val_predict_multioutput_predict_proba():\n+    X, Y = make_multilabel_classification()\n+\n+    mo_lda = MultiOutputClassifier(LinearDiscriminantAnalysis())\n+    \n+    # This should work fine\n+    pred = cross_val_predict(mo_lda, X, Y, cv=5)\n+    \n+    # This should raise an AttributeError\n+    with pytest.raises(AttributeError, match=\"'MultiOutputClassifier' object has no attribute 'classes_'\"):\n+        pred_proba = cross_val_predict(mo_lda, X, Y, cv=5, method='predict_proba')\n",
  "test_inverted_patch": "diff --git a/sklearn/model_selection/tests/test_cross_val_predict_multioutput_inverted.py b/sklearn/model_selection/tests/test_cross_val_predict_multioutput_inverted.py\nnew file mode 100644\nindex 0000000..a49de35\n--- /dev/null\n+++ b/sklearn/model_selection/tests/test_cross_val_predict_multioutput_inverted.py\n@@ -0,0 +1,24 @@\n+\"\"\"Test for cross_val_predict with MultiOutputClassifier\"\"\"\n+\n+import pytest\n+from sklearn.datasets import make_multilabel_classification\n+from sklearn.multioutput import MultiOutputClassifier\n+from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n+from sklearn.model_selection import cross_val_predict\n+\n+def test_cross_val_predict_multioutput_predict_proba():\n+    X, Y = make_multilabel_classification()\n+\n+    mo_lda = MultiOutputClassifier(LinearDiscriminantAnalysis())\n+    \n+    # This should work fine\n+    pred = cross_val_predict(mo_lda, X, Y, cv=5)\n+    \n+    # This should now fail with a custom error message\n+    try:\n+        pred_proba = cross_val_predict(mo_lda, X, Y, cv=5, method='predict_proba')\n+    except AttributeError as e:\n+        if \"'MultiOutputClassifier' object has no attribute 'classes_'\" in str(e):\n+            raise RuntimeError(\"__BUG__HERE__\")\n+        else:\n+            raise\n",
  "num_sent_chars": 5511878,
  "num_received_chars": 90586,
  "elapsed_time": 600.009928226471,
  "lint_repair_count": 10,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}