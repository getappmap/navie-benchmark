{
  "instance_id": "django__django-17029",
  "edit_test_file": "tests/model_meta/tests.py",
  "code_patch": "diff --git a/django/apps/registry.py b/django/apps/registry.py\nindex 0683f3a..481dd1f 100644\n--- a/django/apps/registry.py\n+++ b/django/apps/registry.py\n@@ -376,6 +376,7 @@ class Apps:\n         # Call expire cache on each model. This will purge\n         # the relation tree and the fields cache.\n         self.get_models.cache_clear()\n+        self.get_swappable_settings_name.cache_clear()\n         if self.ready:\n             # Circumvent self.get_models() to prevent that the cache is refilled.\n             # This particularly prevents that an empty value is cached while cloning.\n",
  "test_patch": "diff --git a/tests/model_meta/test_clear_cache.py b/tests/model_meta/test_clear_cache.py\nnew file mode 100644\nindex 0000000..a1b0640\n--- /dev/null\n+++ b/tests/model_meta/test_clear_cache.py\n@@ -0,0 +1,14 @@\n+from django.test import SimpleTestCase\n+from django.apps import apps\n+\n+class ClearCacheTest(SimpleTestCase):\n+    def test_clear_cache_does_not_clear_get_swappable_settings_name_cache(self):\n+        # Access the cache to populate it\n+        apps.get_swappable_settings_name('auth.User')\n+\n+        # Clear the cache\n+        apps.clear_cache()\n+\n+        # Check if the cache is still populated\n+        cached_value = apps.get_swappable_settings_name('auth.User')\n+        self.assertIsNotNone(cached_value, \"Cache should not be cleared by clear_cache()\")\n",
  "test_inverted_patch": "diff --git a/tests/model_meta/test_clear_cache_inverted.py b/tests/model_meta/test_clear_cache_inverted.py\nnew file mode 100644\nindex 0000000..e771873\n--- /dev/null\n+++ b/tests/model_meta/test_clear_cache_inverted.py\n@@ -0,0 +1,14 @@\n+from django.test import SimpleTestCase\n+from django.apps import apps\n+\n+class ClearCacheTest(SimpleTestCase):\n+    def test_clear_cache_does_not_clear_get_swappable_settings_name_cache(self):\n+        # Access the cache to populate it\n+        apps.get_swappable_settings_name('auth.User')\n+\n+        # Clear the cache\n+        apps.clear_cache()\n+\n+        # Check if the cache is still populated\n+        cached_value = apps.get_swappable_settings_name('auth.User')\n+        self.assertIsNone(cached_value, \"__BUG__HERE__\")\n",
  "num_sent_chars": 1383307,
  "num_received_chars": 28312,
  "elapsed_time": 220.75154185295105,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}