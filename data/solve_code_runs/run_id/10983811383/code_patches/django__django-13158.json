{
  "instance_id": "django__django-13158",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 07d6ffd..f1520b9 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -997,10 +997,9 @@ class QuerySet:\n         return clone\n \n     def union(self, *other_qs, all=False):\n-        # If the query is an EmptyQuerySet, combine all nonempty querysets.\n-        if isinstance(self, EmptyQuerySet):\n-            qs = [q for q in other_qs if not isinstance(q, EmptyQuerySet)]\n-            return qs[0]._combinator_query('union', *qs[1:], all=all) if qs else self\n+        # If any query is an EmptyQuerySet, return an EmptyQuerySet.\n+        if isinstance(self, EmptyQuerySet) or any(isinstance(q, EmptyQuerySet) for q in other_qs):\n+            return self.none()\n         return self._combinator_query('union', *other_qs, all=all)\n \n     def intersection(self, *other_qs):\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1576321,
  "num_received_chars": 10333,
  "elapsed_time": 108.7947130203247,
  "lint_repair_count": 0,
  "test_generation_attempts": 3,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}