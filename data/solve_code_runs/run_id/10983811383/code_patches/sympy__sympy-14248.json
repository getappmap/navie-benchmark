{
  "instance_id": "sympy__sympy-14248",
  "edit_test_file": "sympy/printing/tests/test_str.py",
  "code_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 07dd235..32ab1b6 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -73,6 +73,36 @@ class MatrixExpr(Expr):\n     is_number = False\n     is_symbol = True\n \n+    def __str__(self):\n+        return self._print_str()\n+\n+    def __repr__(self):\n+        return self._print_str()\n+\n+    def _print_str(self):\n+        from sympy import Add\n+        if isinstance(self, Add):\n+            terms = []\n+            for arg in self.args:\n+                if arg.could_extract_minus_sign():\n+                    terms.append(f\"- {abs(arg)}\")\n+                else:\n+                    terms.append(str(arg))\n+            return \" + \".join(terms)\n+        return super().__str__()\n+\n+    def _latex(self, printer):\n+        from sympy import Add\n+        if isinstance(self, Add):\n+            terms = []\n+            for arg in self.args:\n+                if arg.could_extract_minus_sign():\n+                    terms.append(f\"- {printer._print(abs(arg))}\")\n+                else:\n+                    terms.append(printer._print(arg))\n+            return \" + \".join(terms)\n+        return super()._latex(printer)\n+\n     def __new__(cls, *args, **kwargs):\n         args = map(sympify, args)\n         return Basic.__new__(cls, *args, **kwargs)\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_matrixsymbol_print.py b/sympy/printing/tests/test_matrixsymbol_print.py\nnew file mode 100644\nindex 0000000..3eb17fa\n--- /dev/null\n+++ b/sympy/printing/tests/test_matrixsymbol_print.py\n@@ -0,0 +1,8 @@\n+from sympy import MatrixSymbol\n+from sympy.printing import sstr\n+\n+def test_matrixsymbol_difference_print():\n+    A = MatrixSymbol('A', 2, 2)\n+    B = MatrixSymbol('B', 2, 2)\n+    expr = A - A*B - B\n+    assert sstr(expr) == \"(-1)*B + (-1)*A*B + A\"\n",
  "test_inverted_patch": "diff --git a/sympy/printing/tests/test_matrixsymbol_print_inverted.py b/sympy/printing/tests/test_matrixsymbol_print_inverted.py\nnew file mode 100644\nindex 0000000..a743c8c\n--- /dev/null\n+++ b/sympy/printing/tests/test_matrixsymbol_print_inverted.py\n@@ -0,0 +1,8 @@\n+from sympy import MatrixSymbol\n+from sympy.printing import sstr\n+\n+def test_matrixsymbol_difference_print():\n+    A = MatrixSymbol('A', 2, 2)\n+    B = MatrixSymbol('B', 2, 2)\n+    expr = A - A*B - B\n+    assert sstr(expr) == \"A - A*B - B\", \"__BUG__HERE__\"\n",
  "num_sent_chars": 6063330,
  "num_received_chars": 88760,
  "elapsed_time": 569.4804446697235,
  "lint_repair_count": 13,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}