{
  "instance_id": "astropy__astropy-14598",
  "edit_test_file": null,
  "code_patch": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285d..4c276da 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -765,7 +765,9 @@ class Card(_Verify):\n                 f\"Unparsable card ({self.keyword}), fix it first with .verify('fix').\"\n             )\n \n-        if m.group(\"bool\") is not None:\n+        if m.group(\"strg\") is not None and m.group(\"strg\") == \"''\":\n+            value = \"\"\n+        elif m.group(\"bool\") is not None:\n             value = m.group(\"bool\") == \"T\"\n         elif m.group(\"strg\") is not None:\n             value = re.sub(\"''\", \"'\", m.group(\"strg\"))\n@@ -967,6 +969,8 @@ class Card(_Verify):\n             # The value of a commentary card must be just a raw unprocessed\n             # string\n             value = str(value)\n+        elif isinstance(value, str) and value == \"\":\n+            value = \"''\"\n         elif (\n             self._valuestring\n             and not self._valuemodified\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1678389,
  "num_received_chars": 11528,
  "elapsed_time": 148.675696849823,
  "lint_repair_count": 0,
  "test_generation_attempts": 3,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}