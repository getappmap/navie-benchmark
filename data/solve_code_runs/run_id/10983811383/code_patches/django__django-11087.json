{
  "instance_id": "django__django-11087",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/models/sql/subqueries.py b/django/db/models/sql/subqueries.py\nindex fbc265d..97df2fe 100644\n--- a/django/db/models/sql/subqueries.py\n+++ b/django/db/models/sql/subqueries.py\n@@ -38,6 +38,7 @@ class DeleteQuery(Query):\n             self.where = self.where_class()\n             self.add_q(Q(\n                 **{field.attname + '__in': pk_list[offset:offset + GET_ITERATOR_CHUNK_SIZE]}))\n+            self.select_related = False  # Avoid fetching unnecessary fields\n             num_deleted += self.do_query(self.get_meta().db_table, self.where, using=using)\n         return num_deleted\n \n\ndiff --git a/django/utils/encoding.py b/django/utils/encoding.py\nindex 94b6376..e72f883 100644\n--- a/django/utils/encoding.py\n+++ b/django/utils/encoding.py\n@@ -229,7 +229,7 @@ def repercent_broken_unicode(path):\n     except UnicodeDecodeError as e:\n         repercent = quote(path[e.start:e.end], safe=b\"/#%[]=:;$&()+,!?*@'~\")\n         path = repercent_broken_unicode(\n-            path[:e.start] + force_bytes(repercent) + path[e.end:])\n+            path[:e.start] + force_bytes(repercent, errors='replace') + path[e.end:])\n     return path\n \n \n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 2203681,
  "num_received_chars": 25604,
  "elapsed_time": 189.93225955963135,
  "lint_repair_count": 1,
  "test_generation_attempts": 3,
  "code_generation_attempts": 2,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}