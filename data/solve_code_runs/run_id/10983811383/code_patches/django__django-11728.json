{
  "instance_id": "django__django-11728",
  "edit_test_file": "tests/db_functions/text/test_replace.py",
  "code_patch": "diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py\nindex 1ce4594..598bfe6 100644\n--- a/django/contrib/admindocs/utils.py\n+++ b/django/contrib/admindocs/utils.py\n@@ -172,6 +172,10 @@ def replace_named_groups(pattern):\n             if unmatched_open_brackets == 0:\n                 group_pattern_and_name.append((pattern[start:end + idx], group_name))\n                 break\n+            # If the end of the pattern is reached, consider it as the end of the group.\n+            if end + idx == len(pattern) - 1:\n+                group_pattern_and_name.append((pattern[start:end + idx + 1], group_name))\n+                break\n \n             # Check for unescaped `(` and `)`. They mark the start and end of a\n             # nested group.\n",
  "test_patch": "diff --git a/tests/db_functions/text/test_simplify_regexp.py b/tests/db_functions/text/test_simplify_regexp.py\nnew file mode 100644\nindex 0000000..f8ee122\n--- /dev/null\n+++ b/tests/db_functions/text/test_simplify_regexp.py\n@@ -0,0 +1,10 @@\n+from django.test import TestCase\n+from django.contrib.admindocs.utils import replace_named_groups\n+\n+class SimplifyRegexpTests(TestCase):\n+\n+    def test_replace_named_groups_trailing_group(self):\n+        pattern = r'entries/(?P<pk>[^/.]+)/relationships/(?P<related_field>\\w+)'\n+        expected = r'entries/<pk>/relationships/(?P<related_field>\\w+)'\n+        result = replace_named_groups(pattern)\n+        self.assertEqual(result, expected)\n",
  "test_inverted_patch": "diff --git a/tests/db_functions/text/test_simplify_regexp_inverted.py b/tests/db_functions/text/test_simplify_regexp_inverted.py\nnew file mode 100644\nindex 0000000..0abe0fb\n--- /dev/null\n+++ b/tests/db_functions/text/test_simplify_regexp_inverted.py\n@@ -0,0 +1,13 @@\n+from django.test import TestCase\n+from django.contrib.admindocs.utils import replace_named_groups\n+\n+class SimplifyRegexpTests(TestCase):\n+\n+    def test_replace_named_groups_trailing_group(self):\n+        pattern = r'entries/(?P<pk>[^/.]+)/relationships/(?P<related_field>\\w+)'\n+        expected = r'entries/<pk>/relationships/<related_field>'\n+        result = replace_named_groups(pattern)\n+        # Altered the assertion to fail when the bug is observed\n+        if result != expected:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        self.assertEqual(result, expected)\n",
  "num_sent_chars": 596216,
  "num_received_chars": 6938,
  "elapsed_time": 87.34221696853638,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}