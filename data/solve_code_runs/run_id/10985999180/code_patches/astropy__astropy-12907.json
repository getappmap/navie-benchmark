{
  "instance_id": "astropy__astropy-12907",
  "edit_test_file": "astropy/modeling/tests/test_separable.py",
  "code_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex a308e27..37aac98 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -98,6 +98,17 @@ def separability_matrix(transform):\n         return np.ones((transform.n_outputs, transform.n_inputs),\n                        dtype=np.bool_)\n     separable_matrix = _separable(transform)\n+    if isinstance(transform, CompoundModel):\n+        # Traverse nested CompoundModels to correctly compute separability\n+        left_matrix = separability_matrix(transform.left)\n+        right_matrix = separability_matrix(transform.right)\n+        if transform.op == '&':\n+            separable_matrix = np.block([\n+                [left_matrix, np.zeros((left_matrix.shape[0], right_matrix.shape[1]), dtype=bool)],\n+                [np.zeros((right_matrix.shape[0], left_matrix.shape[1]), dtype=bool), right_matrix]\n+            ])\n+        elif transform.op == '|':\n+            separable_matrix = np.dot(right_matrix, left_matrix)\n     separable_matrix = np.where(separable_matrix != 0, True, False)\n     return separable_matrix\n \n",
  "test_patch": "diff --git a/astropy/modeling/tests/test_separability_matrix_bug.py b/astropy/modeling/tests/test_separability_matrix_bug.py\nnew file mode 100644\nindex 0000000..2a87e2d\n--- /dev/null\n+++ b/astropy/modeling/tests/test_separability_matrix_bug.py\n@@ -0,0 +1,23 @@\n+import numpy as np\n+from numpy.testing import assert_allclose\n+from astropy.modeling import models as m\n+from astropy.modeling.separable import separability_matrix\n+\n+def test_separability_matrix_nested_compound_models():\n+    # Create a simple compound model\n+    cm = m.Linear1D(10) & m.Linear1D(5)\n+    \n+    # Create a more complex compound model\n+    complex_cm = m.Pix2Sky_TAN() & m.Linear1D(10) & m.Linear1D(5)\n+    \n+    # Create a nested compound model\n+    nested_cm = m.Pix2Sky_TAN() & cm\n+    \n+    # Expected separability matrix for the nested compound model\n+    expected_matrix = np.array([[True, True, False, False],\n+                                [True, True, False, False],\n+                                [False, False, True, True],\n+                                [False, False, True, True]])\n+    \n+    # Assert that the separability matrix of the nested compound model is incorrect\n+    assert_allclose(separability_matrix(nested_cm), expected_matrix)\n",
  "test_inverted_patch": "diff --git a/astropy/modeling/tests/test_separability_matrix_bug_inverted.py b/astropy/modeling/tests/test_separability_matrix_bug_inverted.py\nnew file mode 100644\nindex 0000000..1d7ad40\n--- /dev/null\n+++ b/astropy/modeling/tests/test_separability_matrix_bug_inverted.py\n@@ -0,0 +1,27 @@\n+import numpy as np\n+from numpy.testing import assert_allclose\n+from astropy.modeling import models as m\n+from astropy.modeling.separable import separability_matrix\n+\n+def test_separability_matrix_nested_compound_models():\n+    # Create a simple compound model\n+    cm = m.Linear1D(10) & m.Linear1D(5)\n+    \n+    # Create a more complex compound model\n+    complex_cm = m.Pix2Sky_TAN() & m.Linear1D(10) & m.Linear1D(5)\n+    \n+    # Create a nested compound model\n+    nested_cm = m.Pix2Sky_TAN() & cm\n+    \n+    # Expected separability matrix for the nested compound model\n+    expected_matrix = np.array([[True, True, False, False],\n+                                [True, True, False, False],\n+                                [False, False, True, False],\n+                                [False, False, False, True]])\n+    \n+    # Assert that the separability matrix of the nested compound model is incorrect\n+    actual_matrix = separability_matrix(nested_cm)\n+    try:\n+        assert_allclose(actual_matrix, expected_matrix)\n+    except AssertionError:\n+        raise AssertionError(\"__BUG__HERE__\")\n",
  "num_sent_chars": 3115215,
  "num_received_chars": 46750,
  "elapsed_time": 346.9731333255768,
  "lint_repair_count": 1,
  "test_generation_attempts": 0,
  "code_generation_attempts": 8,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}