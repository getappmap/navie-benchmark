{
  "instance_id": "django__django-12276",
  "edit_test_file": "tests/forms_tests/widget_tests/test_clearablefileinput.py",
  "code_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex 338d54d..73b6798 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -387,6 +387,8 @@ class FileInput(Input):\n     def value_omitted_from_data(self, data, files, name):\n         return name not in files\n \n+    def use_required_attribute(self, initial):\n+        return super().use_required_attribute(initial) and not initial\n \n FILE_INPUT_CONTRADICTION = object()\n \n",
  "test_patch": "diff --git a/tests/forms_tests/widget_tests/test_fileinput_required_attribute.py b/tests/forms_tests/widget_tests/test_fileinput_required_attribute.py\nnew file mode 100644\nindex 0000000..d3200dd\n--- /dev/null\n+++ b/tests/forms_tests/widget_tests/test_fileinput_required_attribute.py\n@@ -0,0 +1,12 @@\n+from django.forms import FileInput\n+from unittest import TestCase\n+\n+class FileInputRequiredAttributeTest(TestCase):\n+    def test_file_input_does_not_use_required_attribute_when_initial_data_exists(self):\n+        \"\"\"\n+        Test that FileInput does not use the 'required' attribute when initial data exists.\n+        \"\"\"\n+        widget = FileInput()\n+        initial_data = 'existing_file.txt'\n+        # The test should pass if the issue is observed, i.e., the required attribute is incorrectly used.\n+        self.assertTrue(widget.use_required_attribute(initial_data))\n",
  "test_inverted_patch": "diff --git a/tests/forms_tests/widget_tests/test_fileinput_required_attribute_inverted.py b/tests/forms_tests/widget_tests/test_fileinput_required_attribute_inverted.py\nnew file mode 100644\nindex 0000000..f36a020\n--- /dev/null\n+++ b/tests/forms_tests/widget_tests/test_fileinput_required_attribute_inverted.py\n@@ -0,0 +1,13 @@\n+from django.forms import FileInput\n+from unittest import TestCase\n+\n+class FileInputRequiredAttributeTest(TestCase):\n+    def test_file_input_does_not_use_required_attribute_when_initial_data_exists(self):\n+        \"\"\"\n+        Test that FileInput does not use the 'required' attribute when initial data exists.\n+        \"\"\"\n+        widget = FileInput()\n+        initial_data = 'existing_file.txt'\n+        # The test should fail if the issue is observed, i.e., the required attribute is incorrectly used.\n+        if widget.use_required_attribute(initial_data):\n+            self.fail(\"__BUG__HERE__\")\n",
  "num_sent_chars": 309853,
  "num_received_chars": 5746,
  "elapsed_time": 46.13758635520935,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}