{
  "instance_id": "sphinx-doc__sphinx-8721",
  "edit_test_file": "tests/test_environment_indexentries.py",
  "code_patch": "diff --git a/sphinx/builders/epub3.py b/sphinx/builders/epub3.py\nindex d1cf64e..68448c1 100644\n--- a/sphinx/builders/epub3.py\n+++ b/sphinx/builders/epub3.py\n@@ -177,6 +177,8 @@ class Epub3Builder(_epub_base.EpubBuilder):\n                 self.config.master_doc, self,\n                 prune_toctrees=False, includehidden=False)\n             refnodes = self.get_refnodes(doctree, [])\n+            if not self.config.viewcode_enable_epub:\n+                refnodes = [node for node in refnodes if 'viewcode' not in node.get('classes', [])]\n             self.toc_add_files(refnodes)\n         else:\n             # 'includehidden'\n\ndiff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\nindex a7d52a9..d738f48 100644\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -194,6 +194,8 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non\n             app.verbosity, lambda x: x[0]):\n         if not entry:\n             continue\n+        if app.builder.name.startswith(\"epub\") and not env.config.viewcode_enable_epub:\n+            continue\n         if not should_generate_module_page(app, modname):\n             continue\n \n",
  "test_patch": "diff --git a/tests/test_epub_viewcode_disable.py b/tests/test_epub_viewcode_disable.py\nnew file mode 100644\nindex 0000000..f5bc156\n--- /dev/null\n+++ b/tests/test_epub_viewcode_disable.py\n@@ -0,0 +1,12 @@\n+import os\n+import pytest\n+from sphinx.application import Sphinx\n+\n+@pytest.mark.sphinx('epub', confoverrides={'viewcode_enable_epub': False})\n+def test_viewcode_pages_not_created_for_epub(app, tmp_path):\n+    # Build the epub\n+    app.build()\n+\n+    # Check if any viewcode pages are created\n+    viewcode_dir = tmp_path / '_modules'\n+    assert not viewcode_dir.exists(), \"Viewcode pages should not be created for epub when viewcode_enable_epub is False\"\n",
  "test_inverted_patch": "diff --git a/tests/test_epub_viewcode_disable_inverted.py b/tests/test_epub_viewcode_disable_inverted.py\nnew file mode 100644\nindex 0000000..3181a15\n--- /dev/null\n+++ b/tests/test_epub_viewcode_disable_inverted.py\n@@ -0,0 +1,13 @@\n+import os\n+import pytest\n+from sphinx.application import Sphinx\n+\n+@pytest.mark.sphinx('epub', confoverrides={'viewcode_enable_epub': False})\n+def test_viewcode_pages_not_created_for_epub(app, tmp_path):\n+    # Build the epub\n+    app.build()\n+\n+    # Check if any viewcode pages are created\n+    viewcode_dir = tmp_path / '_modules'\n+    # Alter the assertion to fail when the bug is observed\n+    assert viewcode_dir.exists(), \"__BUG__HERE__\"\n",
  "num_sent_chars": 2546641,
  "num_received_chars": 39138,
  "elapsed_time": 351.1736171245575,
  "lint_repair_count": 0,
  "test_generation_attempts": 2,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}