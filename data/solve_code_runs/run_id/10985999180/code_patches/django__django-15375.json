{
  "instance_id": "django__django-15375",
  "edit_test_file": "tests/aggregation/tests.py",
  "code_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex 8c4eae7..cec3ac9 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -31,6 +31,8 @@ class Aggregate(Func):\n         self.distinct = distinct\n         self.filter = filter\n         self.default = default\n+        if default is not None:\n+            extra['default'] = default\n         super().__init__(*expressions, **extra)\n \n     def get_source_fields(self):\n\ndiff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d405a20..5471b96 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1677,7 +1677,7 @@ class SQLAggregateCompiler(SQLCompiler):\n             sql.append(ann_sql)\n             params.extend(ann_params)\n         self.col_count = len(self.query.annotation_select)\n-        sql = ', '.join(sql)\n+        sql = ', '.join(sql) or '1'  # Ensure there's always a valid SELECT clause\n         params = tuple(params)\n \n         inner_query_sql, inner_query_params = self.query.inner_query.get_compiler(\n",
  "test_patch": "diff --git a/tests/aggregation/test_aggregate_default_issue.py b/tests/aggregation/test_aggregate_default_issue.py\nnew file mode 100644\nindex 0000000..a51d481\n--- /dev/null\n+++ b/tests/aggregation/test_aggregate_default_issue.py\n@@ -0,0 +1,25 @@\n+import datetime\n+from decimal import Decimal\n+\n+from django.db.models import Sum, F\n+from django.db.utils import OperationalError\n+from django.test import TestCase\n+\n+from .models import Book, Author, Publisher, Store\n+\n+\n+class AggregateDefaultIssueTestCase(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.a1 = Author.objects.create(name='Adrian Holovaty', age=34)\n+        cls.p1 = Publisher.objects.create(name='Apress', num_awards=3, duration=datetime.timedelta(days=1))\n+        cls.b1 = Book.objects.create(\n+            isbn='159059725', name='The Definitive Guide to Django: Web Development Done Right',\n+            pages=447, rating=4.5, price=Decimal('30.00'), contact=cls.a1, publisher=cls.p1,\n+            pubdate=datetime.date(2007, 12, 6)\n+        )\n+\n+    def test_aggregate_with_default_after_annotate(self):\n+        with self.assertRaises(OperationalError):\n+            Book.objects.annotate(idx=F(\"id\")).aggregate(Sum(\"id\", default=0))\n",
  "test_inverted_patch": "diff --git a/tests/aggregation/test_aggregate_default_issue_inverted.py b/tests/aggregation/test_aggregate_default_issue_inverted.py\nnew file mode 100644\nindex 0000000..6c2261d\n--- /dev/null\n+++ b/tests/aggregation/test_aggregate_default_issue_inverted.py\n@@ -0,0 +1,27 @@\n+import datetime\n+from decimal import Decimal\n+\n+from django.db.models import Sum, F\n+from django.db.utils import OperationalError\n+from django.test import TestCase\n+\n+from .models import Book, Author, Publisher, Store\n+\n+\n+class AggregateDefaultIssueTestCase(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.a1 = Author.objects.create(name='Adrian Holovaty', age=34)\n+        cls.p1 = Publisher.objects.create(name='Apress', num_awards=3, duration=datetime.timedelta(days=1))\n+        cls.b1 = Book.objects.create(\n+            isbn='159059725', name='The Definitive Guide to Django: Web Development Done Right',\n+            pages=447, rating=4.5, price=Decimal('30.00'), contact=cls.a1, publisher=cls.p1,\n+            pubdate=datetime.date(2007, 12, 6)\n+        )\n+\n+    def test_aggregate_with_default_after_annotate(self):\n+        try:\n+            Book.objects.annotate(idx=F(\"id\")).aggregate(Sum(\"id\", default=0))\n+        except OperationalError:\n+            self.fail(\"__BUG__HERE__\")\n",
  "num_sent_chars": 1092529,
  "num_received_chars": 20849,
  "elapsed_time": 126.20415234565735,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 4,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}