{
  "instance_id": "django__django-13821",
  "edit_test_file": "tests/backends/sqlite/test_operations.py",
  "code_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex ab4ea70..dcff553 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -64,8 +64,8 @@ def list_aggregate(function):\n \n \n def check_sqlite_version():\n-    if Database.sqlite_version_info < (3, 8, 3):\n-        raise ImproperlyConfigured('SQLite 3.8.3 or later is required (found %s).' % Database.sqlite_version)\n+    if Database.sqlite_version_info < (3, 9, 0):\n+        raise ImproperlyConfigured('SQLite 3.9.0 or later is required (found %s).' % Database.sqlite_version)\n \n \n check_sqlite_version()\n",
  "test_patch": "diff --git a/tests/backends/sqlite/test_sqlite_version_support.py b/tests/backends/sqlite/test_sqlite_version_support.py\nnew file mode 100644\nindex 0000000..ae32709\n--- /dev/null\n+++ b/tests/backends/sqlite/test_sqlite_version_support.py\n@@ -0,0 +1,14 @@\n+import unittest\n+from django.core.exceptions import ImproperlyConfigured\n+from django.db import connection\n+\n+class SQLiteVersionSupportTests(unittest.TestCase):\n+    def test_sqlite_version_support(self):\n+        # This test checks if the SQLite version is below 3.9.0 and raises an ImproperlyConfigured exception.\n+        if connection.vendor == 'sqlite':\n+            version_info = connection.Database.sqlite_version_info\n+            if version_info < (3, 9, 0):\n+                with self.assertRaises(ImproperlyConfigured):\n+                    raise ImproperlyConfigured(\n+                        'SQLite 3.9.0 or later is required (found %s).' % connection.Database.sqlite_version\n+                    )\n",
  "test_inverted_patch": null,
  "num_sent_chars": 1796220,
  "num_received_chars": 28033,
  "elapsed_time": 237.0169734954834,
  "lint_repair_count": 0,
  "test_generation_attempts": 3,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}