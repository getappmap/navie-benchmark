{
  "instance_id": "django__django-14053",
  "edit_test_file": "tests/staticfiles_tests/test_management.py",
  "code_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 494890c..025d662 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -232,11 +232,14 @@ class HashedFilesMixin:\n             yield name, hashed_name, processed\n \n         paths = {path: paths[path] for path in adjustable_paths}\n+        processed_files = set()\n \n         for i in range(self.max_post_process_passes):\n             substitutions = False\n             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):\n-                yield name, hashed_name, processed\n+                if name not in processed_files:\n+                    yield name, hashed_name, processed\n+                    processed_files.add(name)\n                 substitutions = substitutions or subst\n \n             if not substitutions:\n",
  "test_patch": "diff --git a/tests/staticfiles_tests/test_hashed_files_mixin.py b/tests/staticfiles_tests/test_hashed_files_mixin.py\nnew file mode 100644\nindex 0000000..81b96d6\n--- /dev/null\n+++ b/tests/staticfiles_tests/test_hashed_files_mixin.py\n@@ -0,0 +1,25 @@\n+import os\n+from io import StringIO\n+from django.core.management import call_command\n+from django.test import TestCase, override_settings\n+from django.contrib.staticfiles.storage import ManifestStaticFilesStorage\n+\n+class TestHashedFilesMixin(TestCase):\n+    @override_settings(STATICFILES_STORAGE='django.contrib.staticfiles.storage.ManifestStaticFilesStorage')\n+    def test_duplicate_yield_in_post_process(self):\n+        \"\"\"\n+        Test that HashedFilesMixin's post_process() yields multiple times for the same file.\n+        \"\"\"\n+        storage = ManifestStaticFilesStorage()\n+        with self.settings(STATICFILES_STORAGE='django.contrib.staticfiles.storage.ManifestStaticFilesStorage'):\n+            stdout = StringIO()\n+            call_command('collectstatic', interactive=False, verbosity=2, stdout=stdout)\n+            output = stdout.getvalue()\n+\n+            # Check for multiple yields of the same file\n+            base_css_count = output.count(\"Post-processed 'admin/css/base.css'\")\n+            dashboard_css_count = output.count(\"Post-processed 'admin/css/dashboard.css'\")\n+\n+            # Assert that the same file is yielded multiple times\n+            self.assertGreater(base_css_count, 1, \"Expected 'admin/css/base.css' to be post-processed multiple times.\")\n+            self.assertGreater(dashboard_css_count, 1, \"Expected 'admin/css/dashboard.css' to be post-processed multiple times.\")\n",
  "test_inverted_patch": "diff --git a/tests/staticfiles_tests/test_hashed_files_mixin_inverted.py b/tests/staticfiles_tests/test_hashed_files_mixin_inverted.py\nnew file mode 100644\nindex 0000000..e3c2d76\n--- /dev/null\n+++ b/tests/staticfiles_tests/test_hashed_files_mixin_inverted.py\n@@ -0,0 +1,25 @@\n+import os\n+from io import StringIO\n+from django.core.management import call_command\n+from django.test import TestCase, override_settings\n+from django.contrib.staticfiles.storage import ManifestStaticFilesStorage\n+\n+class TestHashedFilesMixin(TestCase):\n+    @override_settings(STATICFILES_STORAGE='django.contrib.staticfiles.storage.ManifestStaticFilesStorage')\n+    def test_duplicate_yield_in_post_process(self):\n+        \"\"\"\n+        Test that HashedFilesMixin's post_process() does not yield multiple times for the same file.\n+        \"\"\"\n+        storage = ManifestStaticFilesStorage()\n+        with self.settings(STATICFILES_STORAGE='django.contrib.staticfiles.storage.ManifestStaticFilesStorage'):\n+            stdout = StringIO()\n+            call_command('collectstatic', interactive=False, verbosity=2, stdout=stdout)\n+            output = stdout.getvalue()\n+\n+            # Check for multiple yields of the same file\n+            base_css_count = output.count(\"Post-processed 'admin/css/base.css'\")\n+            dashboard_css_count = output.count(\"Post-processed 'admin/css/dashboard.css'\")\n+\n+            # Assert that the same file is not yielded multiple times\n+            if base_css_count > 1 or dashboard_css_count > 1:\n+                raise AssertionError(\"__BUG__HERE__\")\n",
  "num_sent_chars": 2979414,
  "num_received_chars": 61216,
  "elapsed_time": 376.00601267814636,
  "lint_repair_count": 4,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}