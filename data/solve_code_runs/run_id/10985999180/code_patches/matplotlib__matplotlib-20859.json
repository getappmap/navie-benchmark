{
  "instance_id": "matplotlib__matplotlib-20859",
  "edit_test_file": "lib/matplotlib/tests/test_figure.py",
  "code_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex 44ab024..5a20399 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -430,15 +430,17 @@ class Legend(Artist):\n         # method.\n         self._legend_box = None\n \n+        from matplotlib.figure import FigureBase\n+\n         if isinstance(parent, Axes):\n             self.isaxes = True\n             self.axes = parent\n             self.set_figure(parent.figure)\n-        elif isinstance(parent, Figure):\n+        elif isinstance(parent, FigureBase):\n             self.isaxes = False\n             self.set_figure(parent)\n         else:\n-            raise TypeError(\"Legend needs either Axes or Figure as parent\")\n+            raise TypeError(\"Legend needs either Axes or FigureBase as parent\")\n         self.parent = parent\n \n         self._loc_used_default = loc is None\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_subfigure_legend.py b/lib/matplotlib/tests/test_subfigure_legend.py\nnew file mode 100644\nindex 0000000..4a0192c\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_subfigure_legend.py\n@@ -0,0 +1,12 @@\n+import pytest\n+import matplotlib.pyplot as plt\n+from matplotlib.figure import Figure\n+\n+def test_subfigure_legend():\n+    fig = plt.figure()\n+    subfig = fig.subfigures()\n+    ax = subfig.subplots()\n+    ax.plot([0, 1, 2], [0, 1, 2], label=\"test\")\n+    \n+    with pytest.raises(TypeError, match=\"Legend needs either Axes or Figure as parent\"):\n+        subfig.legend()\n",
  "test_inverted_patch": "diff --git a/lib/matplotlib/tests/test_subfigure_legend_inverted.py b/lib/matplotlib/tests/test_subfigure_legend_inverted.py\nnew file mode 100644\nindex 0000000..149c94c\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_subfigure_legend_inverted.py\n@@ -0,0 +1,15 @@\n+import pytest\n+import matplotlib.pyplot as plt\n+from matplotlib.figure import Figure\n+\n+def test_subfigure_legend():\n+    fig = plt.figure()\n+    subfig = fig.subfigures()\n+    ax = subfig.subplots()\n+    ax.plot([0, 1, 2], [0, 1, 2], label=\"test\")\n+    \n+    try:\n+        subfig.legend()\n+    except TypeError as e:\n+        if str(e) == \"Legend needs either Axes or Figure as parent\":\n+            raise AssertionError(\"__BUG__HERE__\")\n",
  "num_sent_chars": 959036,
  "num_received_chars": 5624,
  "elapsed_time": 77.41554260253906,
  "lint_repair_count": 1,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}