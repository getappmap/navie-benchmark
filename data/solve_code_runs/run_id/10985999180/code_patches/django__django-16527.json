{
  "instance_id": "django__django-16527",
  "edit_test_file": "tests/modeladmin/tests.py",
  "code_patch": "diff --git a/django/contrib/admin/templatetags/admin_modify.py b/django/contrib/admin/templatetags/admin_modify.py\nindex 9df4b7a..38bb0dc 100644\n--- a/django/contrib/admin/templatetags/admin_modify.py\n+++ b/django/contrib/admin/templatetags/admin_modify.py\n@@ -101,6 +101,7 @@ def submit_row(context):\n             ),\n             \"show_save_as_new\": not is_popup\n             and has_change_permission\n+            and has_add_permission\n             and change\n             and save_as,\n             \"show_save_and_add_another\": can_save_and_add_another,\n",
  "test_patch": "diff --git a/tests/modeladmin/test_admin_modify.py b/tests/modeladmin/test_admin_modify.py\nnew file mode 100644\nindex 0000000..6073353\n--- /dev/null\n+++ b/tests/modeladmin/test_admin_modify.py\n@@ -0,0 +1,58 @@\n+from datetime import date\n+from django.contrib.admin.options import ModelAdmin\n+from django.contrib.admin.sites import AdminSite\n+from django.test import TestCase\n+from django.template import Context\n+from django.contrib.auth.models import User\n+from django.contrib.admin.templatetags.admin_modify import submit_row\n+\n+from .models import Band\n+\n+\n+class MockRequest:\n+    pass\n+\n+\n+class MockSuperUser:\n+    def has_perm(self, perm, obj=None):\n+        return True\n+\n+\n+class MockUserWithoutAddPermission:\n+    def has_perm(self, perm, obj=None):\n+        return perm != \"modeladmin.add_band\"\n+\n+\n+class AdminModifyTests(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.band = Band.objects.create(\n+            name=\"The Doors\",\n+            bio=\"\",\n+            sign_date=date(1965, 1, 1),\n+        )\n+\n+    def setUp(self):\n+        self.site = AdminSite()\n+\n+    def test_show_save_as_new_without_add_permission(self):\n+        \"\"\"\n+        Test that 'show_save_as_new' is True even when the user does not have\n+        add permission, which reproduces the issue.\n+        \"\"\"\n+        request = MockRequest()\n+        request.user = MockUserWithoutAddPermission()\n+        ma = ModelAdmin(Band, self.site)\n+        context = {\n+            \"add\": False,\n+            \"change\": True,\n+            \"is_popup\": False,\n+            \"save_as\": True,\n+            \"has_add_permission\": ma.has_add_permission(request),\n+            \"has_change_permission\": ma.has_change_permission(request),\n+            \"has_delete_permission\": ma.has_delete_permission(request),\n+            \"has_view_permission\": ma.has_view_permission(request),\n+            \"has_editable_inline_admin_formsets\": False,\n+        }\n+        ctx = submit_row(Context(context))\n+        self.assertTrue(ctx[\"show_save_as_new\"])\n",
  "test_inverted_patch": "diff --git a/tests/modeladmin/test_admin_modify_inverted.py b/tests/modeladmin/test_admin_modify_inverted.py\nnew file mode 100644\nindex 0000000..21624d1\n--- /dev/null\n+++ b/tests/modeladmin/test_admin_modify_inverted.py\n@@ -0,0 +1,60 @@\n+from datetime import date\n+from django.contrib.admin.options import ModelAdmin\n+from django.contrib.admin.sites import AdminSite\n+from django.test import TestCase\n+from django.template import Context\n+from django.contrib.auth.models import User\n+from django.contrib.admin.templatetags.admin_modify import submit_row\n+\n+from .models import Band\n+\n+\n+class MockRequest:\n+    pass\n+\n+\n+class MockSuperUser:\n+    def has_perm(self, perm, obj=None):\n+        return True\n+\n+\n+class MockUserWithoutAddPermission:\n+    def has_perm(self, perm, obj=None):\n+        return perm != \"modeladmin.add_band\"\n+\n+\n+class AdminModifyTests(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        cls.band = Band.objects.create(\n+            name=\"The Doors\",\n+            bio=\"\",\n+            sign_date=date(1965, 1, 1),\n+        )\n+\n+    def setUp(self):\n+        self.site = AdminSite()\n+\n+    def test_show_save_as_new_without_add_permission(self):\n+        \"\"\"\n+        Test that 'show_save_as_new' is False when the user does not have\n+        add permission, which should now fail if the issue is present.\n+        \"\"\"\n+        request = MockRequest()\n+        request.user = MockUserWithoutAddPermission()\n+        ma = ModelAdmin(Band, self.site)\n+        context = {\n+            \"add\": False,\n+            \"change\": True,\n+            \"is_popup\": False,\n+            \"save_as\": True,\n+            \"has_add_permission\": ma.has_add_permission(request),\n+            \"has_change_permission\": ma.has_change_permission(request),\n+            \"has_delete_permission\": ma.has_delete_permission(request),\n+            \"has_view_permission\": ma.has_view_permission(request),\n+            \"has_editable_inline_admin_formsets\": False,\n+        }\n+        ctx = submit_row(Context(context))\n+        if ctx[\"show_save_as_new\"]:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        self.assertFalse(ctx[\"show_save_as_new\"])\n",
  "num_sent_chars": 732234,
  "num_received_chars": 4145,
  "elapsed_time": 50.218756437301636,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}