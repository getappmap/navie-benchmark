{
  "instance_id": "sympy__sympy-24562",
  "edit_test_file": "sympy/geometry/tests/test_curve.py",
  "code_patch": "diff --git a/sympy/solvers/solveset.py b/sympy/solvers/solveset.py\nindex 58d2635..fd1ba15 100644\n--- a/sympy/solvers/solveset.py\n+++ b/sympy/solvers/solveset.py\n@@ -1002,6 +1002,7 @@ def _solveset(f, symbol, domain, _check=False):\n     given symbol.\"\"\"\n     # _check controls whether the answer is checked or not\n     from sympy.simplify.simplify import signsimp\n+    from sympy.core.numbers import Rational\n \n     if isinstance(f, BooleanTrue):\n         return domain\n@@ -1009,6 +1010,8 @@ def _solveset(f, symbol, domain, _check=False):\n     orig_f = f\n     if f.is_Mul:\n         coeff, f = f.as_independent(symbol, as_Add=False)\n+        if isinstance(coeff, str):\n+            coeff = Rational(coeff)\n         if coeff in {S.ComplexInfinity, S.NegativeInfinity, S.Infinity}:\n             f = together(orig_f)\n     elif f.is_Add:\n",
  "test_patch": "diff --git a/sympy/geometry/tests/test_rational_error.py b/sympy/geometry/tests/test_rational_error.py\nnew file mode 100644\nindex 0000000..c97f80e\n--- /dev/null\n+++ b/sympy/geometry/tests/test_rational_error.py\n@@ -0,0 +1,10 @@\n+from sympy import Rational\n+\n+def test_rational_error():\n+    # Reproducing the issue with Rational('0.5', '100')\n+    result = Rational('0.5', '100')\n+    assert result == Rational(1, 100100), f\"Unexpected result: {result}\"\n+\n+    # Verifying the correct behavior with Rational(0.5, 100)\n+    correct_result = Rational(0.5, 100)\n+    assert correct_result == Rational(1, 200), f\"Unexpected result: {correct_result}\"\n",
  "test_inverted_patch": "diff --git a/sympy/geometry/tests/test_rational_error_inverted.py b/sympy/geometry/tests/test_rational_error_inverted.py\nnew file mode 100644\nindex 0000000..bb7cd23\n--- /dev/null\n+++ b/sympy/geometry/tests/test_rational_error_inverted.py\n@@ -0,0 +1,10 @@\n+from sympy import Rational\n+\n+def test_rational_error():\n+    # Reproducing the issue with Rational('0.5', '100')\n+    result = Rational('0.5', '100')\n+    assert result != Rational(1, 100100), \"__BUG__HERE__\"\n+\n+    # Verifying the correct behavior with Rational(0.5, 100)\n+    correct_result = Rational(0.5, 100)\n+    assert correct_result == Rational(1, 200), f\"Unexpected result: {correct_result}\"\n",
  "num_sent_chars": 3794966,
  "num_received_chars": 52068,
  "elapsed_time": 443.8732018470764,
  "lint_repair_count": 4,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}