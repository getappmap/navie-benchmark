{
  "instance_id": "matplotlib__matplotlib-25287",
  "edit_test_file": "lib/matplotlib/tests/test_colorbar.py",
  "code_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex c0e706e..2354445 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2249,13 +2249,16 @@ class XAxis(Axis):\n         )\n         self.label_position = 'bottom'\n \n+        labelcolor = mpl.rcParams['xtick.labelcolor']\n+        if labelcolor == 'inherit':\n+            labelcolor = mpl.rcParams['xtick.color']\n         self.offsetText.set(\n             x=1, y=0,\n             verticalalignment='top', horizontalalignment='right',\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['xtick.labelsize'],\n-            color=mpl.rcParams['xtick.color'],\n+            color=labelcolor,\n         )\n         self.offset_text_position = 'bottom'\n \n@@ -2509,13 +2512,16 @@ class YAxis(Axis):\n         )\n         self.label_position = 'left'\n         # x in axes coords, y in display coords(!).\n+        labelcolor = mpl.rcParams['ytick.labelcolor']\n+        if labelcolor == 'inherit':\n+            labelcolor = mpl.rcParams['ytick.color']\n         self.offsetText.set(\n             x=0, y=0.5,\n             verticalalignment='baseline', horizontalalignment='left',\n             transform=mtransforms.blended_transform_factory(\n                 self.axes.transAxes, mtransforms.IdentityTransform()),\n             fontsize=mpl.rcParams['ytick.labelsize'],\n-            color=mpl.rcParams['ytick.color'],\n+            color=labelcolor,\n         )\n         self.offset_text_position = 'left'\n \n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_tick_label_color.py b/lib/matplotlib/tests/test_tick_label_color.py\nnew file mode 100644\nindex 0000000..28a17b3\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_tick_label_color.py\n@@ -0,0 +1,17 @@\n+import matplotlib.pyplot as plt\n+import unittest\n+\n+class TestTickLabelColor(unittest.TestCase):\n+    def test_offset_text_color(self):\n+        plt.rcParams.update({'ytick.labelcolor': 'red', 'ytick.color': 'blue'})\n+        fig, ax = plt.subplots()\n+        ax.plot([1.01e9, 1.02e9, 1.03e9])\n+        fig.canvas.draw()\n+\n+        # Check if the offset text color is incorrectly set to 'blue' instead of 'red'\n+        offset_text_color = ax.yaxis.offsetText.get_color()\n+        self.assertEqual(offset_text_color, 'blue', \n+                         f\"Expected offset text color to be 'blue', but got '{offset_text_color}'\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/lib/matplotlib/tests/test_tick_label_color_inverted.py b/lib/matplotlib/tests/test_tick_label_color_inverted.py\nnew file mode 100644\nindex 0000000..c6132c7\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_tick_label_color_inverted.py\n@@ -0,0 +1,17 @@\n+import matplotlib.pyplot as plt\n+import unittest\n+\n+class TestTickLabelColor(unittest.TestCase):\n+    def test_offset_text_color(self):\n+        plt.rcParams.update({'ytick.labelcolor': 'red', 'ytick.color': 'blue'})\n+        fig, ax = plt.subplots()\n+        ax.plot([1.01e9, 1.02e9, 1.03e9])\n+        fig.canvas.draw()\n+\n+        # Check if the offset text color is incorrectly set to 'blue' instead of 'red'\n+        offset_text_color = ax.yaxis.offsetText.get_color()\n+        self.assertEqual(offset_text_color, 'red', \n+                         f\"__BUG__HERE__: Expected offset text color to be 'red', but got '{offset_text_color}'\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n\\ No newline at end of file\n",
  "num_sent_chars": 360606,
  "num_received_chars": 4570,
  "elapsed_time": 61.76044201850891,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}