{
  "instance_id": "sympy__sympy-21930",
  "edit_test_file": "sympy/physics/vector/tests/test_printing.py",
  "code_patch": "diff --git a/sympy/physics/secondquant.py b/sympy/physics/secondquant.py\nindex d19ee2f..4636b35 100644\n--- a/sympy/physics/secondquant.py\n+++ b/sympy/physics/secondquant.py\n@@ -478,7 +478,7 @@ def __repr__(self):\n         return \"CreateBoson(%s)\" % self.state\n \n     def _latex(self, printer):\n-        return \"b^\\\\dagger_{%s}\" % self.state.name\n+        return \"{b^\\\\dagger_{%s}}\" % self.state.name\n \n B = AnnihilateBoson\n Bd = CreateBoson\n@@ -1798,7 +1798,7 @@ def __str__(self):\n         return \"[%s,%s]\" % (self.args[0], self.args[1])\n \n     def _latex(self, printer):\n-        return \"\\\\left[%s,%s\\\\right]\" % tuple([\n+        return \"\\\\left\\\\{%s,%s\\\\right\\\\}\" % tuple([\n             printer._print(arg) for arg in self.args])\n \n \n",
  "test_patch": "diff --git a/sympy/physics/vector/tests/test_secondquant_latex.py b/sympy/physics/vector/tests/test_secondquant_latex.py\nnew file mode 100644\nindex 0000000..bb981be\n--- /dev/null\n+++ b/sympy/physics/vector/tests/test_secondquant_latex.py\n@@ -0,0 +1,9 @@\n+import sympy as sp\n+from sympy.physics.secondquant import B, Bd, Commutator\n+\n+def test_latex_rendering_issue():\n+    sp.init_printing()\n+    a = sp.Symbol('0')\n+    commutator_expr = Commutator(Bd(a)**2, B(a))\n+    expected_output = r\"- \\left[b_{0},b^\\dagger_{0}^{2}\\right]\"\n+    assert sp.latex(commutator_expr) == expected_output\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/physics/vector/tests/test_secondquant_latex_inverted.py b/sympy/physics/vector/tests/test_secondquant_latex_inverted.py\nnew file mode 100644\nindex 0000000..d3a88f3\n--- /dev/null\n+++ b/sympy/physics/vector/tests/test_secondquant_latex_inverted.py\n@@ -0,0 +1,9 @@\n+import sympy as sp\n+from sympy.physics.secondquant import B, Bd, Commutator\n+\n+def test_latex_rendering_issue():\n+    sp.init_printing()\n+    a = sp.Symbol('0')\n+    commutator_expr = Commutator(Bd(a)**2, B(a))\n+    expected_output = r\"- \\left[b_{0},{b^\\dagger_{0}}^{2}\\right]\"\n+    assert sp.latex(commutator_expr) == expected_output, \"__BUG__HERE__\"\n\\ No newline at end of file\n",
  "num_sent_chars": 1611939,
  "num_received_chars": 27282,
  "elapsed_time": 430.88516497612,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": false,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}