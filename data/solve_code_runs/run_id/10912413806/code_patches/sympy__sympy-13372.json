{
  "instance_id": "sympy__sympy-13372",
  "edit_test_file": "sympy/core/tests/test_evalf.py",
  "code_patch": "diff --git a/sympy/core/evalf.py b/sympy/core/evalf.py\nindex 72a5fba..ea0871d 100644\n--- a/sympy/core/evalf.py\n+++ b/sympy/core/evalf.py\n@@ -1295,15 +1295,14 @@ def evalf(x, prec, options):\n             re, im = xe.as_real_imag()\n             if re.has(re_) or im.has(im_):\n                 raise NotImplementedError\n+            reprec, imprec = None, None  # Initialize reprec and imprec\n             if re == 0:\n                 re = None\n-                reprec = None\n             elif re.is_number:\n                 re = re._to_mpmath(prec, allow_ints=False)._mpf_\n                 reprec = prec\n             if im == 0:\n                 im = None\n-                imprec = None\n             elif im.is_number:\n                 im = im._to_mpmath(prec, allow_ints=False)._mpf_\n                 imprec = prec\n",
  "test_patch": "diff --git a/sympy/core/tests/test_evalf_unboundlocalerror.py b/sympy/core/tests/test_evalf_unboundlocalerror.py\nnew file mode 100644\nindex 0000000..a73509c\n--- /dev/null\n+++ b/sympy/core/tests/test_evalf_unboundlocalerror.py\n@@ -0,0 +1,9 @@\n+from sympy import Mul, Max, Symbol\n+from sympy.utilities.pytest import raises\n+\n+def test_evalf_unboundlocalerror():\n+    x = Symbol('x')\n+    y = Symbol('y')\n+    expr = Mul(Max(0, y), x, evaluate=False)\n+    with raises(UnboundLocalError):\n+        expr.evalf()\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/core/tests/test_evalf_unboundlocalerror_inverted.py b/sympy/core/tests/test_evalf_unboundlocalerror_inverted.py\nnew file mode 100644\nindex 0000000..799427f\n--- /dev/null\n+++ b/sympy/core/tests/test_evalf_unboundlocalerror_inverted.py\n@@ -0,0 +1,11 @@\n+from sympy import Mul, Max, Symbol\n+from sympy.utilities.pytest import raises\n+\n+def test_evalf_unboundlocalerror():\n+    x = Symbol('x')\n+    y = Symbol('y')\n+    expr = Mul(Max(0, y), x, evaluate=False)\n+    try:\n+        expr.evalf()\n+    except UnboundLocalError:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1181028,
  "num_received_chars": 28359,
  "elapsed_time": 464.8589687347412,
  "lint_repair_count": 0,
  "test_generation_attempts": 1,
  "code_generation_attempts": 4,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}