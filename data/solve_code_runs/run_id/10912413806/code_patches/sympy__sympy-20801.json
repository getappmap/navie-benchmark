{
  "instance_id": "sympy__sympy-20801",
  "edit_test_file": "sympy/core/tests/test_equal.py",
  "code_patch": "diff --git a/sympy/printing/rust.py b/sympy/printing/rust.py\nindex 8db995f..352e2d2 100644\n--- a/sympy/printing/rust.py\n+++ b/sympy/printing/rust.py\n@@ -361,6 +361,11 @@ def _print_Relational(self, expr):\n         lhs_code = self._print(expr.lhs)\n         rhs_code = self._print(expr.rhs)\n         op = expr.rel_op\n+\n+        # Ensure consistent comparison between S.false and S(0.0)\n+        if (expr.lhs == S.false and expr.rhs == S(0.0)) or (expr.lhs == S(0.0) and expr.rhs == S.false):\n+            return \"false\"\n+\n         return \"{} {} {}\".format(lhs_code, op, rhs_code)\n \n     def _print_Indexed(self, expr):\n",
  "test_patch": "diff --git a/sympy/core/tests/test_cmp_float_bool.py b/sympy/core/tests/test_cmp_float_bool.py\nnew file mode 100644\nindex 0000000..b25b4ce\n--- /dev/null\n+++ b/sympy/core/tests/test_cmp_float_bool.py\n@@ -0,0 +1,6 @@\n+from sympy import S\n+\n+def test_cmp_float_bool_issue():\n+    # Reproduce the issue where S(0.0) == S.false returns True\n+    assert (S(0.0) == S.false) is True\n+    assert (S.false == S(0.0)) is False\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/core/tests/test_cmp_float_bool_inverted.py b/sympy/core/tests/test_cmp_float_bool_inverted.py\nnew file mode 100644\nindex 0000000..75b37ba\n--- /dev/null\n+++ b/sympy/core/tests/test_cmp_float_bool_inverted.py\n@@ -0,0 +1,7 @@\n+from sympy import S\n+\n+def test_cmp_float_bool_issue():\n+    # Reproduce the issue where S(0.0) == S.false returns True\n+    # Alter the test to fail when the issue is observed\n+    assert (S(0.0) == S.false) is False, \"__BUG__HERE__\"\n+    assert (S.false == S(0.0)) is False\n\\ No newline at end of file\n",
  "num_sent_chars": 2020344,
  "num_received_chars": 35303,
  "elapsed_time": 502.03431224823,
  "lint_repair_count": 3,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}