{
  "instance_id": "sympy__sympy-15809",
  "edit_test_file": "sympy/sets/tests/test_sets.py",
  "code_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 5f9fe73..68e0127 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -340,7 +340,10 @@ def real_root(arg, n=None, evaluate=None):\n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n         if not args:\n-            raise ValueError(\"The Max/Min functions must have arguments.\")\n+            if cls == Min:\n+                return S.Infinity\n+            elif cls == Max:\n+                return S.NegativeInfinity\n \n         args = (sympify(arg) for arg in args)\n \n",
  "test_patch": "diff --git a/sympy/sets/tests/test_min_max_no_args.py b/sympy/sets/tests/test_min_max_no_args.py\nnew file mode 100644\nindex 0000000..b28d23a\n--- /dev/null\n+++ b/sympy/sets/tests/test_min_max_no_args.py\n@@ -0,0 +1,7 @@\n+from sympy import Min, Max\n+from sympy.utilities.pytest import raises\n+\n+def test_min_max_no_args():\n+    # Test that Min() and Max() with no arguments raise ValueError\n+    raises(ValueError, lambda: Min())\n+    raises(ValueError, lambda: Max())\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sympy/sets/tests/test_min_max_no_args_inverted.py b/sympy/sets/tests/test_min_max_no_args_inverted.py\nnew file mode 100644\nindex 0000000..ae93a82\n--- /dev/null\n+++ b/sympy/sets/tests/test_min_max_no_args_inverted.py\n@@ -0,0 +1,14 @@\n+from sympy import Min, Max\n+from sympy.utilities.pytest import raises\n+\n+def test_min_max_no_args():\n+    # Test that Min() and Max() with no arguments raise ValueError\n+    try:\n+        Min()\n+    except ValueError:\n+        raise AssertionError(\"__BUG__HERE__\")\n+    \n+    try:\n+        Max()\n+    except ValueError:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 2271471,
  "num_received_chars": 38239,
  "elapsed_time": 1300.6677379608154,
  "lint_repair_count": 0,
  "test_generation_attempts": 4,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": true,
  "code_patch_score": 2,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}