{
  "instance_id": "sphinx-doc__sphinx-10673",
  "edit_test_file": "tests/test_toctree.py",
  "code_patch": "diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py\nindex 9678e3c..823530a 100644\n--- a/sphinx/environment/adapters/toctree.py\n+++ b/sphinx/environment/adapters/toctree.py\n@@ -165,7 +165,10 @@ class TocTree:\n                                        ref, location=toctreenode)\n                 except KeyError:\n                     # this is raised if the included file does not exist\n-                    if excluded(self.env.doc2path(ref, False)):\n+                    if ref in ('genindex', 'modindex', 'search'):\n+                        # Special index pages are allowed in toctrees\n+                        continue\n+                    elif excluded(self.env.doc2path(ref, False)):\n                         message = __('toctree contains reference to excluded document %r')\n                     elif not included(self.env.doc2path(ref, False)):\n                         message = __('toctree contains reference to non-included document %r')\n",
  "test_patch": "diff --git a/tests/test_ext_toctree_genindex_modindex_search.py b/tests/test_ext_toctree_genindex_modindex_search.py\nnew file mode 100644\nindex 0000000..d48b7d6\n--- /dev/null\n+++ b/tests/test_ext_toctree_genindex_modindex_search.py\n@@ -0,0 +1,24 @@\n+import re\n+import pytest\n+from sphinx.testing import restructuredtext\n+from sphinx.testing.util import assert_node\n+from docutils import nodes\n+from sphinx import addnodes\n+\n+@pytest.mark.sphinx(testroot='toctree')\n+def test_toctree_with_genindex_modindex_search(app, status, warning):\n+    text = (\".. toctree::\\n\"\n+            \"   :maxdepth: 1\\n\"\n+            \"   :caption: Indices and tables\\n\"\n+            \"\\n\"\n+            \"   genindex\\n\"\n+            \"   modindex\\n\"\n+            \"   search\\n\")\n+\n+    app.env.find_files(app.config, app.builder)\n+    restructuredtext.parse(app, text, 'index')\n+    \n+    warnings = warning.getvalue()\n+    assert \"toctree contains reference to nonexisting document 'genindex'\" in warnings\n+    assert \"toctree contains reference to nonexisting document 'modindex'\" in warnings\n+    assert \"toctree contains reference to nonexisting document 'search'\" in warnings\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/test_ext_toctree_genindex_modindex_search_inverted.py b/tests/test_ext_toctree_genindex_modindex_search_inverted.py\nnew file mode 100644\nindex 0000000..3b639bd\n--- /dev/null\n+++ b/tests/test_ext_toctree_genindex_modindex_search_inverted.py\n@@ -0,0 +1,27 @@\n+import re\n+import pytest\n+from sphinx.testing import restructuredtext\n+from sphinx.testing.util import assert_node\n+from docutils import nodes\n+from sphinx import addnodes\n+\n+@pytest.mark.sphinx(testroot='toctree')\n+def test_toctree_with_genindex_modindex_search(app, status, warning):\n+    text = (\".. toctree::\\n\"\n+            \"   :maxdepth: 1\\n\"\n+            \"   :caption: Indices and tables\\n\"\n+            \"\\n\"\n+            \"   genindex\\n\"\n+            \"   modindex\\n\"\n+            \"   search\\n\")\n+\n+    app.env.find_files(app.config, app.builder)\n+    restructuredtext.parse(app, text, 'index')\n+    \n+    warnings = warning.getvalue()\n+    if \"toctree contains reference to nonexisting document 'genindex'\" in warnings:\n+        raise AssertionError(\"__BUG__HERE__\")\n+    if \"toctree contains reference to nonexisting document 'modindex'\" in warnings:\n+        raise AssertionError(\"__BUG__HERE__\")\n+    if \"toctree contains reference to nonexisting document 'search'\" in warnings:\n+        raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1361592,
  "num_received_chars": 41078,
  "elapsed_time": 270.7375385761261,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 7,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}