{
  "instance_id": "scikit-learn__scikit-learn-10844",
  "edit_test_file": "sklearn/metrics/cluster/tests/test_supervised.py",
  "code_patch": "diff --git a/sklearn/metrics/cluster/supervised.py b/sklearn/metrics/cluster/supervised.py\nindex a987778..9bcca75 100644\n--- a/sklearn/metrics/cluster/supervised.py\n+++ b/sklearn/metrics/cluster/supervised.py\n@@ -856,7 +856,7 @@ def fowlkes_mallows_score(labels_true, labels_pred, sparse=False):\n     tk = np.dot(c.data, c.data) - n_samples\n     pk = np.sum(np.asarray(c.sum(axis=0)).ravel() ** 2) - n_samples\n     qk = np.sum(np.asarray(c.sum(axis=1)).ravel() ** 2) - n_samples\n-    return tk / np.sqrt(pk * qk) if tk != 0. else 0.\n+    return np.sqrt(tk / pk) * np.sqrt(tk / qk) if tk != 0. else 0.\n \n \n def entropy(labels):\n",
  "test_patch": "diff --git a/sklearn/metrics/cluster/tests/test_fowlkes_mallows_warning.py b/sklearn/metrics/cluster/tests/test_fowlkes_mallows_warning.py\nnew file mode 100644\nindex 0000000..eab5826\n--- /dev/null\n+++ b/sklearn/metrics/cluster/tests/test_fowlkes_mallows_warning.py\n@@ -0,0 +1,15 @@\n+import numpy as np\n+import warnings\n+from sklearn.metrics.cluster import fowlkes_mallows_score\n+from sklearn.utils.testing import assert_warns\n+\n+def test_fowlkes_mallows_score_overflow_warning():\n+    # Create large labels to trigger overflow\n+    labels_true = np.array([0] * 100000 + [1] * 100000)\n+    labels_pred = np.array([0] * 50000 + [1] * 50000 + [2] * 50000 + [3] * 50000)\n+\n+    # Check for RuntimeWarning due to overflow\n+    with warnings.catch_warnings(record=True) as w:\n+        warnings.simplefilter(\"always\")\n+        fowlkes_mallows_score(labels_true, labels_pred)\n+        assert any(item.category == RuntimeWarning for item in w), \"Expected RuntimeWarning not raised\"\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/sklearn/metrics/cluster/tests/test_fowlkes_mallows_warning_inverted.py b/sklearn/metrics/cluster/tests/test_fowlkes_mallows_warning_inverted.py\nnew file mode 100644\nindex 0000000..27deb24\n--- /dev/null\n+++ b/sklearn/metrics/cluster/tests/test_fowlkes_mallows_warning_inverted.py\n@@ -0,0 +1,15 @@\n+import numpy as np\n+import warnings\n+from sklearn.metrics.cluster import fowlkes_mallows_score\n+\n+def test_fowlkes_mallows_score_overflow_warning():\n+    # Create large labels to trigger overflow\n+    labels_true = np.array([0] * 100000 + [1] * 100000)\n+    labels_pred = np.array([0] * 50000 + [1] * 50000 + [2] * 50000 + [3] * 50000)\n+\n+    # Check for RuntimeWarning due to overflow\n+    with warnings.catch_warnings(record=True) as w:\n+        warnings.simplefilter(\"always\")\n+        fowlkes_mallows_score(labels_true, labels_pred)\n+        if any(item.category == RuntimeWarning for item in w):\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1817678,
  "num_received_chars": 20294,
  "elapsed_time": 602.6634230613708,
  "lint_repair_count": 3,
  "test_generation_attempts": 0,
  "code_generation_attempts": 3,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}