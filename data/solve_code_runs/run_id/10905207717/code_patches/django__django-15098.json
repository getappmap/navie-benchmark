{
  "instance_id": "django__django-15098",
  "edit_test_file": "tests/view_tests/tests/test_i18n.py",
  "code_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 6ea18dd..759eff2 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -315,6 +315,8 @@ class LocalePrefixPattern:\n     @property\n     def language_prefix(self):\n         language_code = get_language() or settings.LANGUAGE_CODE\n+        # Normalize the language code to handle script and region subtags\n+        language_code = language_code.lower().replace('_', '-')\n         if language_code == settings.LANGUAGE_CODE and not self.prefix_default_language:\n             return ''\n         else:\n",
  "test_patch": "diff --git a/tests/view_tests/tests/test_i18n_locale_script_region.py b/tests/view_tests/tests/test_i18n_locale_script_region.py\nnew file mode 100644\nindex 0000000..f8b539c\n--- /dev/null\n+++ b/tests/view_tests/tests/test_i18n_locale_script_region.py\n@@ -0,0 +1,32 @@\n+from django.test import TestCase, override_settings\n+from django.urls import path\n+from django.http import HttpResponse\n+from django.conf.urls.i18n import i18n_patterns\n+\n+def bangiah(request):\n+    return HttpResponse('U!')\n+\n+urlpatterns = i18n_patterns(\n+    path('', bangiah),\n+)\n+\n+@override_settings(\n+    LANGUAGE_CODE='en-us',\n+    LANGUAGES=[\n+        ('en-us', \"English\"),\n+        ('en-latn-us', \"Latin English\"),\n+        ('en-Latn-US', \"BCP 47 case format\"),\n+    ],\n+    MIDDLEWARE=[\n+        'django.middleware.locale.LocaleMiddleware',\n+    ]\n+)\n+class I18nLocaleScriptRegionTestCase(TestCase):\n+    def test_locale_with_script_and_region(self):\n+        # Test for 'en-latn-us'\n+        response = self.client.get('/en-latn-us/')\n+        self.assertEqual(response.status_code, 404)  # Expecting 404 due to the issue\n+\n+        # Test for 'en-Latn-US'\n+        response = self.client.get('/en-Latn-US/')\n+        self.assertEqual(response.status_code, 404)  # Expecting 404 due to the issue\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/view_tests/tests/test_i18n_locale_script_region_inverted.py b/tests/view_tests/tests/test_i18n_locale_script_region_inverted.py\nnew file mode 100644\nindex 0000000..cf37998\n--- /dev/null\n+++ b/tests/view_tests/tests/test_i18n_locale_script_region_inverted.py\n@@ -0,0 +1,34 @@\n+from django.test import TestCase, override_settings\n+from django.urls import path\n+from django.http import HttpResponse\n+from django.conf.urls.i18n import i18n_patterns\n+\n+def bangiah(request):\n+    return HttpResponse('U!')\n+\n+urlpatterns = i18n_patterns(\n+    path('', bangiah),\n+)\n+\n+@override_settings(\n+    LANGUAGE_CODE='en-us',\n+    LANGUAGES=[\n+        ('en-us', \"English\"),\n+        ('en-latn-us', \"Latin English\"),\n+        ('en-Latn-US', \"BCP 47 case format\"),\n+    ],\n+    MIDDLEWARE=[\n+        'django.middleware.locale.LocaleMiddleware',\n+    ]\n+)\n+class I18nLocaleScriptRegionTestCase(TestCase):\n+    def test_locale_with_script_and_region(self):\n+        # Test for 'en-latn-us'\n+        response = self.client.get('/en-latn-us/')\n+        if response.status_code == 404:\n+            raise AssertionError(\"__BUG__HERE__\")\n+        \n+        # Test for 'en-Latn-US'\n+        response = self.client.get('/en-Latn-US/')\n+        if response.status_code == 404:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1987509,
  "num_received_chars": 50283,
  "elapsed_time": 1038.8760614395142,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}