{
  "instance_id": "django__django-11087",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 8423610..632f051 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -690,10 +690,11 @@ class QuerySet:\n         # objects is performed on the same database as the deletion.\n         del_query._for_write = True\n \n-        # Disable non-supported fields.\n+        # Disable non-supported fields and only select primary key fields.\n         del_query.query.select_for_update = False\n         del_query.query.select_related = False\n         del_query.query.clear_ordering(force_empty=True)\n+        del_query.query.set_values([self.model._meta.pk.name])\n \n         collector = Collector(using=del_query.db)\n         collector.collect(del_query)\n\ndiff --git a/django/utils/encoding.py b/django/utils/encoding.py\nindex 94b6376..8038ebe 100644\n--- a/django/utils/encoding.py\n+++ b/django/utils/encoding.py\n@@ -45,7 +45,7 @@ def is_protected_type(obj):\n     return isinstance(obj, _PROTECTED_TYPES)\n \n \n-def force_str(s, encoding='utf-8', strings_only=False, errors='strict'):\n+def force_str(s, encoding='utf-8', strings_only=False, errors='replace'):\n     \"\"\"\n     Similar to smart_str(), except that lazy instances are resolved to\n     strings, rather than kept as lazy objects.\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 624486,
  "num_received_chars": 8346,
  "elapsed_time": 155.10770869255066,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 0,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}