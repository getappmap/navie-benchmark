{
  "instance_id": "django__django-13807",
  "edit_test_file": "tests/fixtures_model_package/tests.py",
  "code_patch": "diff --git a/django/db/backends/sqlite3/introspection.py b/django/db/backends/sqlite3/introspection.py\nindex 1d7ce3f..e655dee 100644\n--- a/django/db/backends/sqlite3/introspection.py\n+++ b/django/db/backends/sqlite3/introspection.py\n@@ -84,7 +84,7 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n         \"\"\"\n         cursor.execute('PRAGMA table_info(%s)' % self.connection.ops.quote_name(table_name))\n         table_info = cursor.fetchall()\n-        collations = self._get_column_collations(cursor, table_name)\n+        collations = self._get_column_collations(cursor, self.connection.ops.quote_name(table_name))\n         json_columns = set()\n         if self.connection.features.can_introspect_json_field:\n             for line in table_info:\n",
  "test_patch": "diff --git a/tests/fixtures_model_package/test_sqlite_reserved_word_table_names.py b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names.py\nnew file mode 100644\nindex 0000000..0b4ccd1\n--- /dev/null\n+++ b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names.py\n@@ -0,0 +1,24 @@\n+from django.core import management\n+from django.core.management import CommandError\n+from django.test import TestCase\n+from django.db import models\n+\n+class Order(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'fixtures_model_package'\n+\n+class LoadDataWithReservedKeywordsTestCase(TestCase):\n+    def test_loaddata_with_reserved_keyword(self):\n+        with self.assertRaises(CommandError):\n+            management.call_command('loaddata', 'order_fixture.json', verbosity=0)\n+[\n+    {\n+        \"pk\": \"1\",\n+        \"model\": \"fixtures_model_package.order\",\n+        \"fields\": {\n+            \"name\": \"Sample Order\"\n+        }\n+    }\n+]\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/fixtures_model_package/test_sqlite_reserved_word_table_names_inverted.py b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names_inverted.py\nnew file mode 100644\nindex 0000000..e1b2235\n--- /dev/null\n+++ b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names_inverted.py\n@@ -0,0 +1,17 @@\n+from django.core import management\n+from django.core.management import CommandError\n+from django.test import TestCase\n+from django.db import models\n+\n+class Order(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'fixtures_model_package'\n+\n+class LoadDataWithReservedKeywordsTestCase(TestCase):\n+    def test_loaddata_with_reserved_keyword(self):\n+        try:\n+            management.call_command('loaddata', 'order_fixture.json', verbosity=0)\n+        except CommandError:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 3037573,
  "num_received_chars": 82521,
  "elapsed_time": 1039.5262832641602,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}