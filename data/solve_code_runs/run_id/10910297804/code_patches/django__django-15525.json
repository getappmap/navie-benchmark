{
  "instance_id": "django__django-15525",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/contrib/auth/models.py b/django/contrib/auth/models.py\nindex 85330e2..ac72d29 100644\n--- a/django/contrib/auth/models.py\n+++ b/django/contrib/auth/models.py\n@@ -26,10 +26,10 @@ def update_last_login(sender, user, **kwargs):\n class PermissionManager(models.Manager):\n     use_in_migrations = True\n \n-    def get_by_natural_key(self, codename, app_label, model):\n-        return self.get(\n+    def get_by_natural_key(self, codename, app_label, model, using=None):\n+        return self.using(using).get(\n             codename=codename,\n-            content_type=ContentType.objects.db_manager(self.db).get_by_natural_key(\n+            content_type=ContentType.objects.db_manager(using or self.db).get_by_natural_key(\n                 app_label, model\n             ),\n         )\n@@ -91,8 +91,8 @@ class GroupManager(models.Manager):\n \n     use_in_migrations = True\n \n-    def get_by_natural_key(self, name):\n-        return self.get(name=name)\n+    def get_by_natural_key(self, name, using=None):\n+        return self.using(using).get(name=name)\n \n \n class Group(models.Model):\n@@ -136,7 +136,7 @@ class Group(models.Model):\n class UserManager(BaseUserManager):\n     use_in_migrations = True\n \n-    def _create_user(self, username, email, password, **extra_fields):\n+    def _create_user(self, username, email, password, using=None, **extra_fields):\n         \"\"\"\n         Create and save a user with the given username, email, and password.\n         \"\"\"\n@@ -200,12 +200,12 @@ class UserManager(BaseUserManager):\n \n \n # A few helper functions for common logic between User and AnonymousUser.\n-def _user_get_permissions(user, obj, from_name):\n+def _user_get_permissions(user, obj, from_name, using=None):\n     permissions = set()\n     name = \"get_%s_permissions\" % from_name\n     for backend in auth.get_backends():\n         if hasattr(backend, name):\n-            permissions.update(getattr(backend, name)(user, obj))\n+            permissions.update(getattr(backend, name)(user, obj, using=using))\n     return permissions\n \n \n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 544869,
  "num_received_chars": 9176,
  "elapsed_time": 85.05221247673035,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 0,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}