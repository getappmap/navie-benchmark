{
  "instance_id": "django__django-11211",
  "edit_test_file": "tests/prefetch_related/test_prefetch_related_objects.py",
  "code_patch": "diff --git a/django/contrib/contenttypes/fields.py b/django/contrib/contenttypes/fields.py\nindex ed98ecb..7b8b2a6 100644\n--- a/django/contrib/contenttypes/fields.py\n+++ b/django/contrib/contenttypes/fields.py\n@@ -202,8 +202,8 @@ class GenericForeignKey(FieldCacheMixin):\n             else:\n                 model = self.get_content_type(id=ct_id,\n                                               using=obj._state.db).model_class()\n-                return (model._meta.pk.get_prep_value(getattr(obj, self.fk_field)),\n-                        model)\n+                fk_value = model._meta.pk.to_python(getattr(obj, self.fk_field))\n+                return (fk_value, model)\n \n         return (\n             ret_val,\n@@ -576,7 +576,7 @@ def create_generic_related_manager(superclass, rel):\n             return (\n                 queryset.filter(**query),\n                 lambda relobj: object_id_converter(getattr(relobj, self.object_id_field_name)),\n-                lambda obj: obj.pk,\n+                lambda obj: object_id_converter(obj.pk),\n                 False,\n                 self.prefetch_cache_name,\n                 False,\n",
  "test_patch": "diff --git a/tests/prefetch_related/test_gfk_with_uuid_prefetch.py b/tests/prefetch_related/test_gfk_with_uuid_prefetch.py\nnew file mode 100644\nindex 0000000..7f5244b\n--- /dev/null\n+++ b/tests/prefetch_related/test_gfk_with_uuid_prefetch.py\n@@ -0,0 +1,28 @@\n+import uuid\n+from django.contrib.contenttypes.fields import GenericForeignKey\n+from django.contrib.contenttypes.models import ContentType\n+from django.db import models\n+from django.test import TestCase\n+\n+class Foo(models.Model):\n+    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n+\n+class Bar(models.Model):\n+    foo_content_type = models.ForeignKey(\n+        ContentType, related_name='actor',\n+        on_delete=models.CASCADE, db_index=True\n+    )\n+    foo_object_id = models.CharField(max_length=255, db_index=True)\n+    foo = GenericForeignKey('foo_content_type', 'foo_object_id')\n+\n+class TestGFKWithUUIDPrefetch(TestCase):\n+    def test_prefetch_related_with_gfk_uuid(self):\n+        foo_instance = Foo.objects.create()\n+        bar_instance = Bar.objects.create(\n+            foo_content_type=ContentType.objects.get_for_model(Foo),\n+            foo_object_id=str(foo_instance.id)\n+        )\n+        \n+        with self.assertNumQueries(2):\n+            bars = Bar.objects.all().prefetch_related('foo')\n+            self.assertIsNone(bars[0].foo)\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/prefetch_related/test_gfk_with_uuid_prefetch_inverted.py b/tests/prefetch_related/test_gfk_with_uuid_prefetch_inverted.py\nnew file mode 100644\nindex 0000000..5d8e96e\n--- /dev/null\n+++ b/tests/prefetch_related/test_gfk_with_uuid_prefetch_inverted.py\n@@ -0,0 +1,29 @@\n+import uuid\n+from django.contrib.contenttypes.fields import GenericForeignKey\n+from django.contrib.contenttypes.models import ContentType\n+from django.db import models\n+from django.test import TestCase\n+\n+class Foo(models.Model):\n+    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n+\n+class Bar(models.Model):\n+    foo_content_type = models.ForeignKey(\n+        ContentType, related_name='actor',\n+        on_delete=models.CASCADE, db_index=True\n+    )\n+    foo_object_id = models.CharField(max_length=255, db_index=True)\n+    foo = GenericForeignKey('foo_content_type', 'foo_object_id')\n+\n+class TestGFKWithUUIDPrefetch(TestCase):\n+    def test_prefetch_related_with_gfk_uuid(self):\n+        foo_instance = Foo.objects.create()\n+        bar_instance = Bar.objects.create(\n+            foo_content_type=ContentType.objects.get_for_model(Foo),\n+            foo_object_id=str(foo_instance.id)\n+        )\n+        \n+        with self.assertNumQueries(2):\n+            bars = Bar.objects.all().prefetch_related('foo')\n+            if bars[0].foo is None:\n+                raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 500584,
  "num_received_chars": 15851,
  "elapsed_time": 200.1161825656891,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 2,
  "pass_to_pass": true,
  "pass_to_fail": true,
  "fail_to_pass": true,
  "code_patch_score": 3,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}