{
  "instance_id": "django__django-13807",
  "edit_test_file": "tests/fixtures_model_package/tests.py",
  "code_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex 2eeaf98..6eace90 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -327,19 +327,19 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n                     violations = cursor.execute('PRAGMA foreign_key_check').fetchall()\n                 else:\n                     violations = chain.from_iterable(\n-                        cursor.execute('PRAGMA foreign_key_check(%s)' % table_name).fetchall()\n+                        cursor.execute('PRAGMA foreign_key_check(%s)' % self.ops.quote_name(table_name)).fetchall()\n                         for table_name in table_names\n                     )\n                 # See https://www.sqlite.org/pragma.html#pragma_foreign_key_check\n                 for table_name, rowid, referenced_table_name, foreign_key_index in violations:\n                     foreign_key = cursor.execute(\n-                        'PRAGMA foreign_key_list(%s)' % table_name\n+                        'PRAGMA foreign_key_list(%s)' % self.ops.quote_name(table_name)\n                     ).fetchall()[foreign_key_index]\n                     column_name, referenced_column_name = foreign_key[3:5]\n                     primary_key_column_name = self.introspection.get_primary_key_column(cursor, table_name)\n                     primary_key_value, bad_value = cursor.execute(\n                         'SELECT %s, %s FROM %s WHERE rowid = %%s' % (\n-                            primary_key_column_name, column_name, table_name\n+                            primary_key_column_name, column_name, self.ops.quote_name(table_name)\n                         ),\n                         (rowid,),\n                     ).fetchone()\n",
  "test_patch": "diff --git a/tests/fixtures_model_package/test_sqlite_reserved_word_table_names.py b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names.py\nnew file mode 100644\nindex 0000000..0b4ccd1\n--- /dev/null\n+++ b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names.py\n@@ -0,0 +1,24 @@\n+from django.core import management\n+from django.core.management import CommandError\n+from django.test import TestCase\n+from django.db import models\n+\n+class Order(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'fixtures_model_package'\n+\n+class LoadDataWithReservedKeywordsTestCase(TestCase):\n+    def test_loaddata_with_reserved_keyword(self):\n+        with self.assertRaises(CommandError):\n+            management.call_command('loaddata', 'order_fixture.json', verbosity=0)\n+[\n+    {\n+        \"pk\": \"1\",\n+        \"model\": \"fixtures_model_package.order\",\n+        \"fields\": {\n+            \"name\": \"Sample Order\"\n+        }\n+    }\n+]\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/fixtures_model_package/test_sqlite_reserved_word_table_names_inverted.py b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names_inverted.py\nnew file mode 100644\nindex 0000000..e1b2235\n--- /dev/null\n+++ b/tests/fixtures_model_package/test_sqlite_reserved_word_table_names_inverted.py\n@@ -0,0 +1,17 @@\n+from django.core import management\n+from django.core.management import CommandError\n+from django.test import TestCase\n+from django.db import models\n+\n+class Order(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'fixtures_model_package'\n+\n+class LoadDataWithReservedKeywordsTestCase(TestCase):\n+    def test_loaddata_with_reserved_keyword(self):\n+        try:\n+            management.call_command('loaddata', 'order_fixture.json', verbosity=0)\n+        except CommandError:\n+            self.fail(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 2439334,
  "num_received_chars": 115451,
  "elapsed_time": 924.01349401474,
  "lint_repair_count": 6,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}