{
  "instance_id": "django__django-12965",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/backends/mysql/compiler.py b/django/db/backends/mysql/compiler.py\nindex 3682d6d..22891bf 100644\n--- a/django/db/backends/mysql/compiler.py\n+++ b/django/db/backends/mysql/compiler.py\n@@ -17,6 +17,11 @@ class SQLDeleteCompiler(compiler.SQLDeleteCompiler, SQLCompiler):\n     def as_sql(self):\n         if self.connection.features.update_can_self_select or self.single_alias:\n             return super().as_sql()\n+        # Optimize for deleting all rows from a single table without subquery\n+        if not self.query.where and len(self.query.alias_map) == 1:\n+            return 'DELETE FROM %s' % self.quote_name_unless_alias(\n+                self.query.get_initial_alias()\n+            ), ()\n         # MySQL and MariaDB < 10.3.2 doesn't support deletion with a subquery\n         # which is what the default implementation of SQLDeleteCompiler uses\n         # when multiple tables are involved. Use the MySQL/MariaDB specific\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 2265503,
  "num_received_chars": 33658,
  "elapsed_time": 308.39277720451355,
  "lint_repair_count": 3,
  "test_generation_attempts": 9,
  "code_generation_attempts": 2,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}