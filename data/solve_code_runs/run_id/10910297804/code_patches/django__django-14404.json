{
  "instance_id": "django__django-14404",
  "edit_test_file": "tests/requests/tests.py",
  "code_patch": "diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py\nindex 59a4a03..74ef4c4 100644\n--- a/django/contrib/admin/sites.py\n+++ b/django/contrib/admin/sites.py\n@@ -420,7 +420,7 @@ class AdminSite:\n     def catch_all_view(self, request, url):\n         if settings.APPEND_SLASH and not url.endswith('/'):\n             urlconf = getattr(request, 'urlconf', None)\n-            path = '%s/' % request.path_info\n+            path = '%s/' % request.path\n             try:\n                 match = resolve(path, urlconf)\n             except Resolver404:\n",
  "test_patch": "diff --git a/tests/requests/test_catch_all_view_script_name.py b/tests/requests/test_catch_all_view_script_name.py\nnew file mode 100644\nindex 0000000..bc906b7\n--- /dev/null\n+++ b/tests/requests/test_catch_all_view_script_name.py\n@@ -0,0 +1,18 @@\n+from django.test import SimpleTestCase, override_settings\n+from django.http import HttpRequest, Http404\n+from django.contrib.admin.sites import AdminSite\n+\n+class CatchAllViewScriptNameTests(SimpleTestCase):\n+    @override_settings(FORCE_SCRIPT_NAME='/FORCED_PREFIX/')\n+    def test_catch_all_view_with_force_script_name(self):\n+        \"\"\"\n+        Test that catch_all_view does not support FORCE_SCRIPT_NAME.\n+        \"\"\"\n+        site = AdminSite()\n+        request = HttpRequest()\n+        request.path_info = '/somepath/'\n+        request.path = '/FORCED_PREFIX/somepath/'\n+        request.META['SCRIPT_NAME'] = '/FORCED_PREFIX'\n+        \n+        with self.assertRaises(Http404):\n+            site.catch_all_view(request, url='somepath')\n\\ No newline at end of file\n",
  "test_inverted_patch": "diff --git a/tests/requests/test_catch_all_view_script_name_inverted.py b/tests/requests/test_catch_all_view_script_name_inverted.py\nnew file mode 100644\nindex 0000000..201ff47\n--- /dev/null\n+++ b/tests/requests/test_catch_all_view_script_name_inverted.py\n@@ -0,0 +1,20 @@\n+from django.test import SimpleTestCase, override_settings\n+from django.http import HttpRequest, Http404\n+from django.contrib.admin.sites import AdminSite\n+\n+class CatchAllViewScriptNameTests(SimpleTestCase):\n+    @override_settings(FORCE_SCRIPT_NAME='/FORCED_PREFIX/')\n+    def test_catch_all_view_with_force_script_name(self):\n+        \"\"\"\n+        Test that catch_all_view does not support FORCE_SCRIPT_NAME.\n+        \"\"\"\n+        site = AdminSite()\n+        request = HttpRequest()\n+        request.path_info = '/somepath/'\n+        request.path = '/FORCED_PREFIX/somepath/'\n+        request.META['SCRIPT_NAME'] = '/FORCED_PREFIX'\n+        \n+        try:\n+            site.catch_all_view(request, url='somepath')\n+        except Http404:\n+            raise AssertionError(\"__BUG__HERE__\")\n\\ No newline at end of file\n",
  "num_sent_chars": 1624347,
  "num_received_chars": 20986,
  "elapsed_time": 264.6836380958557,
  "lint_repair_count": 0,
  "test_generation_attempts": 0,
  "code_generation_attempts": 9,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}