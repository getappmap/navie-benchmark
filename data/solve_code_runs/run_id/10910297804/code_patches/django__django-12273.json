{
  "instance_id": "django__django-12273",
  "edit_test_file": null,
  "code_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 844c01e..0705ec4 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -762,6 +762,10 @@ class Model(metaclass=ModelBase):\n         assert not (force_insert and (force_update or update_fields))\n         assert update_fields is None or update_fields\n         cls = origin = self.__class__\n+\n+        # If the primary key is None, ensure the instance is marked as adding\n+        if self.pk is None:\n+            self._state.adding = True\n         # Skip proxies, but keep the origin as the proxy model.\n         if cls._meta.proxy:\n             cls = cls._meta.concrete_model\n@@ -787,7 +791,8 @@ class Model(metaclass=ModelBase):\n         # Store the database on which the object was saved\n         self._state.db = using\n         # Once saved, this is no longer a to-be-added instance.\n-        self._state.adding = False\n+        if self.pk is not None:\n+            self._state.adding = False\n \n         # Signal that the save is complete\n         if not meta.auto_created:\n",
  "test_patch": null,
  "test_inverted_patch": null,
  "num_sent_chars": 1523962,
  "num_received_chars": 19225,
  "elapsed_time": 204.61515545845032,
  "lint_repair_count": 0,
  "test_generation_attempts": 9,
  "code_generation_attempts": 1,
  "pass_to_pass": true,
  "pass_to_fail": false,
  "fail_to_pass": false,
  "code_patch_score": 1,
  "appmap_data_test_status": null,
  "appmap_data_file_count": null,
  "appmap_data_context_size": null
}